%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.04
%%Creator: \050MATLAB, The Mathworks, Inc. Version 8.4.0.150421 \\(R2014b\\). Operating System: Windows 8)
%%Title: C:/Users/Yonatan/AppData/Local/Temp/tp60920b03_7c9b_4d66_94a9_a8f9ce91ac0a.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 293 146
%%HiResBoundingBox: 0 0 293 145.25
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.04 0
%%Copyright: Copyright 1996-2014 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /pdfDuplex exch def
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      pdfDuplex { /Duplex true def } if
    currentdict end setpagedevice
  } if
  /pdfPageW 0 def
  /pdfPageH 0 def
} def
/pdfSetupPaper {
  2 copy pdfPageH ne exch pdfPageW ne or {
    /pdfPageH exch def
    /pdfPageW exch def
    /setpagedevice where {
      pop 3 dict begin
        /PageSize [pdfPageW pdfPageH] def
        pdfDuplex { /Duplex true def } if
        /ImagingBBox null def
      currentdict end setpagedevice
    } if
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr {
  4 2 roll exch 5 index div exch 4 index div moveto
  exch 3 index div dup 0 rlineto
  exch 2 index div 0 exch rlineto
  neg 0 rlineto
  closepath
} def
/pdfImClip { gsave clip } def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font IVMGOD+Helvetica
%!FontType1-1.0: IVMGOD+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans Regular) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /IVMGOD+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/UniqueID 5082796 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 89 /Y put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C6423431BC7A7B3A8E80923B8469FB301A4A71D44E80D57F6908586
4D5A13A560E884EC1D568A0649AFD62F81750B25C95D07B02C7152B500F4F436
D2C6DA18BBAB13404F95DDF1E27ED31C4D21956D4EACD1DD04018A7473478842
E7EB21FADD5684606195762B13264C4D21EB9F10997432DA1B82959E335D9F53
4E062B8849CF74077D109EAAE4B94F6CD00FA97E184C9F55DC5239EA17B628AF
AD6F9F83D65E15DF189AA1AA55165A4DA630A9362E66E321692935D0113DAD34
D90E298E0161EC4BB270605E3F60CE77462FF092BFADA5890940AA13C181CA6C
97B5157FED6FB64AEDCB4ECDCBD93924D07E4E7B6FC7E2807366AD8E84B3C327
7A22D4A1B9EF57EEE13F4321C04AA13719427CD2B766F255E521DB820C40CF5C
217CE96367D4C0FAAA81745E5066C664AD2B258CA266A33B615097B0B5EFCF61
8CABD2D56DC3D015EC16083ACD4099D588761BE599FD60FDEBE09EDE4980D32C
922AED2EFD255DF73450338D528BC81E3FB3B0C27767FCA57482B37C9F1DD763
F6182135D24358E0D89132B3C3F116CF8BE767536CBE5929EABC5CF73C35020F
A4131B037A3CC3500E046BB31D4E12DDC8267390937FD18B2BCC5A4E1DC956DD
2F0B3E9629CF8F43F1D8A04CEE59226D6BDF26D5460CE1584072EADC169994AA
06922E09087D5C24052D5C973C84429AE6AC4179CC403CD57618B21D06F39C3B
A8AF51AFE7A5896B6ADCAB19E342E7204CC4EA03C0EFD65719F004001C9CA764
B76440E40FE37E42F2A3C83CB00EF77F7CF57214AEED350F0CFB4E877F2C3CB0
8C5560EAE56B46C8FF48DE97D123D33AC88A38EF443FF8DDDA74A0CEF65E6AA2
77277778077D61F44CA3D23BDCBE79DB69ED099192042B41CB40C2072386A8A9
AADB8712661336690E455781B0749A09BB5E86AFB63A2EA42390A0B1825F6858
E2227CCF243A0647A9F18933E0D8DCB913A8AA8B7CEDD96F529BA270A675290B
105FE3965A9C63A501558EAA4F8372EBDF282F1DAE3BB5693EFF12E19760EAC2
1DD8EC8C6FA547CD75CC6DD30ADE735A9086CA013497BE6A44FFC03EEF16E14A
F3AF4A258117A32D772F336343A30F407777D0E0AB84167BF2B015464C4CB7D4
64CA470FDFAE462A4C444C0EE05A7974D3975EC04D100788CCC4AED8EE5BBF04
B2BEAE64387DB97ECE8973EE02BDF238021078B6C97C17183C619BC6C1883DB7
FDC1B8EE88913A4F13BCA6D2206B7F5F63DE3A9A68B089DC4B2BA4F6B5F2081C
307A7EB66AE72B3348732166254ADD900FFEDE4A15B74C1FB4E13D788E7669CE
45F60F9C2FB88A75D6FA0F61691E06A8926841AD3CA44FA702C81584E1F87A35
DF79A32DBA1EBE601BB952F6E0F0B86DF77F3853F540051B420F0C2F99A13045
93AF717747CC144B30D47A47A6C2887F9E12E4A1517E5C6B9EFB327A31687B92
3202CC75EFBE49E3441D1CF16E1494F68E61FBD6530FE65DBC3C38C0E20B0134
F0233DF1A7AA8C0F5CDD282F248B86D8BCB5072945390D6153BE81D1F6BBACFC
805A1DB8E359F167A4A6CC92EDF18FDD8AFF46C1741FB4BBDBB693DDCFDAD99F
D616A02607B78F9899EAA4C17D1AC3837839A4420523A16CAAC8A4C2D014F957
F3F441CF590C95BA38BB50405E5FBCFE0D44E9DA624EE3673862088674E1B732
B55FAFC0B12C70B6D3A8EF9973F9AB4688CBCEAC288E42B7419EC5867B7CBE92
7840159E4B573783D0946A882D7E151E2E25EFAE61253820B27D220299D47FE8
B654D81F77AB2F48AE6991101BCF9A9F0D5B2048CFDD84ECCF49FF94726582AA
2B6CED4FFCCB0001232A79C8821E3676A17E81A1EE918CA5AB306A1DB4C29D95
393C4823FB11E9B88FEC99B1C7CDB849C0931862487089C9586765B63F97A097
2ADED629DB26CC14E967C975EA3DC20367FC2612AA35B012882AF7F34BCA9C63
12870D6683B2E66D23E854B2772754F55C40A7031969D00C0F87B6560AEA5CAE
18BE83A95B9812B7B082F83792056A97E3AD7952E706CFB984553515684F4FDA
59E23B823F3E57F8D94560064DC195567FBEA373576B4AD750AB935363C6DDB8
71109FA5F86DCF4BAF290497CE2560F237A442B2D211AD89E6617433B3A35C4E
5E3DD2BFA353FC89E78C954B6914269B40A2E841ED515C4146581A95864868C8
DC2EDD8F1BD8C601A92CD811437BE1DD95BCF2C6B6223BB910E0125E16F61AEF
F0E34E94759FB5F4B647BEA37AD79BDE621FE14AF78753A61304A6DBD9A230C2
0895056364820DA19E5CD9F6A26C26026CF0C39935BFBEB9D787EC08336F8F8B
13E52CDA502CE39F178A513F2F230931E8AE50C38F44354AB8C69AE1F7D72985
8F911C406723693585EE5E3DFA3CA91C7BB99B9950A3FF5545EFF4ED325BF270
02F1CF0D29E3AEB26AEF5F42CDB43088AF625EC1A0CF8FC46D52D76AA8CA8A34
7A9EBD340CC86FAE3634386B3E7E8B39B323F9C890899F5A11F56E68A3A4ABC4
02C8CD0B460D2532485A3EFC5F4231411F368E11AB71049A7037A64FD41589FD
FDE17CFA23F32435C4A61D80123F73015247CB1F564E6FD620E8531752ADDA80
24149442D9617A0912204CEBE9A15CE53111A1EF57C64762A3C1A73FEF38E455
5A830B1DC6E3E81026F47FF43604CFDC0338499BC335412F5CB272EEC3D53BEC
903511582DBCAAD884A231F23849B933E8A669D32DE86891851775B169784D81
B6B02FC9313D3189FD868EEDA0AA9FB8E0563C7C4D29451FCB26F27CEC2B49EF
1A257E17CA1C28D8346D2EAFC20569CBDE0C2A6DA7D04F4319860F34F6152B1D
AB10708D96481F6E918DE8006EDB8BC3906834579BC007F9C69349985253F2F5
40E83015716256073108B98F645A96A35911D034E2E74D3F16C5D9523CE7AA0E
8A05689112E299BF853046F3527BA459C25F114930885DC5B884D5D494452C81
C696C8B14D45DC3D025327B79266973E9ABF321E4BB7318DCFE9DEC455F91C25
26C8FD1D6BEFFCE920A165DCD2BF1358BBD5E7706B58A04273F0DB13A4108827
F317322D3BEED3062742984882CBF73B35119EB6D9548C344153E12E6CC595BE
B0E269087056DDF51B6DC2D15CDA05E3C223AED66071D330E2795B49C5862A82
E6E3A59C06651C9A16DC7960DFD8527EBC575BFB681C2D51A4645F8D9B88205C
A7FDEF600CF168E532D9A671705FCDF022BF98BBACF083316F8AC55C381E5B7A
75D32948B0464AF1B386AF6F72275E6E382369BB08BB1A2B21A3334F11A06847
3CDE49EFB33B7BEC08C1AB602BDD1298992CA1A5BE7504CAD5A04E06FA6C91CB
CB4BBBF7E38EB318F5642C3698F3A01C9BA1B707FAE81290A5573B127C89FEFF
2BF0005189504AFD1401DBC79A3FD4185DF7B48B17F053DCC1369B2052EAD9B7
50D4667CF0A41B7E0308A55706055394F4CC606CBDE51553E8503804F5F96070
0271408557DA0B285C8EB13F1E17BB59D9EAC78FB3048F5F608953C8D1C727E9
E3364C3E7B18512DE4474E396726C469399F7947BC19B6B0B77DD92FA9CB13D0
AAA5066AC6206B44B9666845
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /IVMGOD+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
end
%%EndSetup
xpdf begin
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 293 145.25 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 3272.5 2260 re
f
0 0 3272.5 2260 re
f
[15 15] 0 d
20.0025 w
2 j
/DeviceGray {} CS
[0.5019] SC
10 812.5 m
2920 812.5 l
S
[] 0 d
2 J
1 j
/DeviceGray {} CS
[0] SC
883 812.5 m
1465 1423.75 l
S
2047 812.5 m
1465 1423.75 l
S
592 201.25 m
883 812.5 l
S
1174 201.25 m
883 812.5 l
S
1756 201.25 m
2047 812.5 l
S
2338 201.25 m
2047 812.5 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 1 101.655] Tm
0 0 Td
/F8_0 9.75 Tf
(TIME FRAME)
[5.95725
0
2.7105
0
8.12175
0
6.50325
0
2.7105
0
5.95725
0
7.0395
0
6.50325
0
8.12175
0
6.50325
0] Tj
0 -48.9 Td
(DYNAMICS)
[7.0395
0
6.50325
0
7.0395
0
6.50325
0
8.12175
0
2.7105
0
7.0395
0
6.50325
0] Tj
87.3 7.052 Td
/F8_0 8.25 Tf
(Elastic)
[5.50275
0
1.8315
0
4.587
0
4.125
0
2.2935
0
1.8315
0
4.125
0] Tj
-8483.36 TJm
(Fixed)
[5.04075
0
1.8315
0
4.125
0
4.587
0
4.587
0] Tj
33.4648 -69.3543 Td
(Additive)
[5.50275
0
4.587
0
4.587
0
1.8315
0
2.2935
0
1.8315
0
4.125
0
4.587
0] Tj
97.4851 -38.7918 Td
(Multiplicative)
[6.87225
0
4.587
0
1.8315
0
2.2935
0
1.8315
0
4.587
0
1.8315
0
1.8315
0
4.125
0
4.587
0
2.2935
0
1.8315
0
4.125
0
4.587
0] Tj
149.8648 -69.3543 Td
(Additive)
[5.50275
0
4.587
0
4.587
0
1.8315
0
2.2935
0
1.8315
0
4.125
0
4.587
0] Tj
213.8851 -38.7918 Td
(Multiplicative)
[6.87225
0
4.587
0
1.8315
0
2.2935
0
1.8315
0
4.587
0
1.8315
0
1.8315
0
4.125
0
4.587
0
2.2935
0
1.8315
0
4.125
0
4.587
0] Tj
53.5441 -98.6469 Td
/F8_0 12 Tf
(A)
[8.004
0] Tj
-4183 TJm
(B)
[8.004
0] Tj
-4183 TJm
(C)
[8.664
0] Tj
-4128 TJm
(D)
[8.664
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
end
%%Trailer
%%DocumentSuppliedResources:
%%+ font IVMGOD+Helvetica
%%EOF

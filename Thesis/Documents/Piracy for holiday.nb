(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    491424,      10890]
NotebookOptionsPosition[    482775,      10600]
NotebookOutlinePosition[    483147,      10616]
CellTagsIndexPosition[    483104,      10613]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{
     RowBox[{"2", "*", "r", "*", "b"}], "+", "d"}], 
    RowBox[{
     RowBox[{"2", "*", "d"}], "-", "b"}]], "+", 
   FractionBox[
    RowBox[{"2", "*", "r", "*", "b"}], "d"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"2", "*", "r", "*", 
      SuperscriptBox["b", "2"]}], "+", 
     RowBox[{"d", "*", "b"}]}], 
    RowBox[{
     RowBox[{"2", "*", 
      SuperscriptBox["d", "2"]}], "-", 
     RowBox[{"d", "*", "b"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.7064666378891897`*^9, 3.706466724554638*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"d", "+", 
    RowBox[{"2", " ", "b", " ", "r"}]}], 
   RowBox[{"b", "-", 
    RowBox[{"2", " ", "d"}]}]]}]], "Output",
 CellChangeTimes->{
  3.706466728472474*^9, 3.706468573112726*^9, 3.7064686686140895`*^9, 
   3.7064687523872814`*^9, {3.706494396447487*^9, 3.7064943999666758`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.706467998251735*^9},
 NumberMarks->False],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7064679993046722`*^9, 3.706467999346068*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7064679934531016`*^9},
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"d", "+", 
      RowBox[{"2", " ", "*", "b", " ", "*", "r"}]}], 
     RowBox[{"b", "-", 
      RowBox[{"2", " ", "*", "d"}]}]]}], "*", 
   FractionBox[
    RowBox[{"2", "*", "d"}], 
    RowBox[{
     RowBox[{"2", "*", "d"}], "-", "b"}]], "*", 
   FractionBox[
    RowBox[{
     RowBox[{"2", "*", "r", "*", "b"}], "+", "d"}], 
    RowBox[{"4", "*", "b"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.706467979680502*^9, 3.706468066889316*^9}, 
   3.706468768825123*^9, {3.70646881913472*^9, 3.7064688253066177`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"d", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"2", " ", "b", " ", "r"}]}], ")"}], "2"]}], 
  RowBox[{"2", " ", "b", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"b", "-", 
      RowBox[{"2", " ", "d"}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.7064680673894553`*^9, 3.7064685760238075`*^9, 3.7064686738691626`*^9, {
   3.7064687449631925`*^9, 3.7064687720126553`*^9}, 3.7064688289785333`*^9, 
   3.706494400310438*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"d", " ", "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"d", "+", 
        RowBox[{"2", " ", "*", "b", " ", "*", "r"}]}], ")"}], "2"]}], 
    RowBox[{"2", " ", "*", "b", "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"b", "-", 
        RowBox[{"2", " ", "*", "d"}]}], ")"}], "2"]}]], "+", 
   RowBox[{"l", "*", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"b", "-", "1", "-", "j"}], 
      RowBox[{"2", "*", "b"}]], ")"}]}], "-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"2", "*", "r", "*", "b"}], "+", "d"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "d"}], "-", "b"}], ")"}], "*", "2"}]], ")"}], 
    "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7064680944428816`*^9, 3.7064681617169523`*^9}, 
   3.7064685345652742`*^9, 3.7064688666047993`*^9, {3.706468951229332*^9, 
   3.7064689635176554`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d", "2"], "+", 
      RowBox[{"4", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "b", "-", "j"}], ")"}], " ", "l"}], "+", 
         RowBox[{"b", " ", "r"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "b", "+", "j"}], ")"}], " ", "l"}], "+", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "b", " ", 
      RowBox[{"(", 
       RowBox[{"b", "-", 
        RowBox[{"2", " ", "d"}]}], ")"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7064688690110645`*^9, 3.7064689670651584`*^9, 
  3.706494400865695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"j", " ", "=", " ", 
  RowBox[{"-", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "b"}], ")"}], "2"], "-", 
     RowBox[{"4", "*", "r", "*", "b"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"d", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "-", "b"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"b", "-", "1", "-", "j"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7064692605130606`*^9, 3.706469353329714*^9}, {
   3.7064694418087516`*^9, 3.7064694436368465`*^9}, {3.7064695994516735`*^9, 
   3.70646962798131*^9}, 3.7064991919725723`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "b"}], ")"}], "2"], "-", 
    RowBox[{"4", " ", "b", " ", "r"}]}]]}]], "Output",
 CellChangeTimes->{3.706469444699353*^9, 3.7064696318128395`*^9, 
  3.7064944054766293`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "b", "+", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "b"}], ")"}], "2"], "-", 
      RowBox[{"4", " ", "b", " ", "r"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.706469444699353*^9, 3.7064696318128395`*^9, 
  3.706494405492272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["d", "2"], "+", 
          RowBox[{"4", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "b", "-", "j"}], ")"}], " ", "l"}], 
             "+", 
             RowBox[{"b", " ", "r"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "b", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "b", "+", "j"}], ")"}], " ", "l"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"4", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{"b", "-", 
            RowBox[{"2", " ", "d"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0.1", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7064693682637177`*^9, 3.7064694386858544`*^9}, {
  3.7064695099186897`*^9, 3.7064695477690477`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    31.200000000000003`, $CellContext`b$$ = 93.6, $CellContext`l$$ = 5.2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`l$$], 0, 100}, {
      Hold[$CellContext`b$$], 0.1, 100}, {
      Hold[$CellContext`a$$], 0.1, 100}}, Typeset`size$$ = {288., {87., 90.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`l$360980$$ = 0, $CellContext`b$360981$$ = 
    0, $CellContext`a$360982$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.1, $CellContext`b$$ = 
        0.1, $CellContext`l$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$360980$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$360981$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$360982$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[-(($CellContext`d^2 + (
            4 $CellContext`d) ((-1 + $CellContext`b$$ - $CellContext`j) \
$CellContext`l$$ + $CellContext`b$$ $CellContext`r) + (
            2 $CellContext`b$$) ((
              1 - $CellContext`b$$ + $CellContext`j) $CellContext`l$$ + (
              2 $CellContext`b$$) $CellContext`r^2))/((
          4 $CellContext`b$$) ($CellContext`b$$ - 
          2 $CellContext`d))), {$CellContext`r, -100, 100}], 
      "Specifications" :> {{$CellContext`l$$, 0, 100}, {$CellContext`b$$, 0.1,
          100}, {$CellContext`a$$, 0.1, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {147., 152.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.706469456508681*^9, 3.7064695189500375`*^9, 3.7064695498315754`*^9, {
   3.706469614888418*^9, 3.7064696364413686`*^9}, 3.7064944107426634`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", "r"}]], 
    RowBox[{"(", 
     RowBox[{"a", "-", "1", "+", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ")"}]}], "+", 
   RowBox[{"r", "*", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7064991992387466`*^9, 3.7064992535664387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "a", "+", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
   SqrtBox[
    RowBox[{"1", "-", "r"}]]}], "+", 
  RowBox[{"r", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7064992548023167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", "r"}]], 
       RowBox[{"(", 
        RowBox[{"a", "-", "1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], ")"}]}], "+", 
      RowBox[{"r", "*", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706499269621874*^9, 3.7064993084635553`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 10., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 10}}, Typeset`size$$ = {288., {88., 91.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$362034$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$362034$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1 - $CellContext`r)^Rational[1, 2] ($CellContext`a$$ - 
          1 + (1 - $CellContext`r)^Rational[1, 2]) + $CellContext`r 
         Log[1 - (1 - $CellContext`r)^Rational[1, 2]], {$CellContext`r, 0, 
         1}], "Specifications" :> {{$CellContext`a$$, 1, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{331., {125., 130.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7064993102558403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], ")"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], ")"}], "2"], "-", 
            RowBox[{"4", "*", 
             FractionBox["r", "a"]}]}]]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], ")"}], "-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], ")"}], "2"], "-", 
            RowBox[{"4", "*", 
             FractionBox["r", "a"]}]}]]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.01", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706516007067749*^9, 3.7065162385589275`*^9}, 
   3.706516289674344*^9, {3.7065163355720577`*^9, 3.706516376702345*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.24000000000000002`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0.01, 5}}, Typeset`size$$ = {288., {89., 92.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$395436$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$395436$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{(1/2) ((
            1 + $CellContext`a$$)/$CellContext`a$$ + (((
               1 + $CellContext`a$$)/$CellContext`a$$)^2 - 
            4 ($CellContext`r/$CellContext`a$$))^Rational[1, 2]), (1/
          2) ((1 + $CellContext`a$$)/$CellContext`a$$ - (((
              1 + $CellContext`a$$)/$CellContext`a$$)^2 - 
           4 ($CellContext`r/$CellContext`a$$))^
          Rational[1, 2])}, {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`a$$, 0.01, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {126., 131.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7065161309702945`*^9, 3.706516190495686*^9}, {
   3.706516226797561*^9, 3.706516239028262*^9}, 3.706516290706079*^9, 
   3.7065163361704698`*^9, 3.7065163773177834`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"1", "+", "a"}], "a"], ")"}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"1", "+", "a"}], "a"], ")"}], "2"], "-", 
           RowBox[{"4", "*", 
            FractionBox["r", "a"]}]}]]}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.01", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70651647582096*^9, 3.7065164892845526`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0.01, 5}}, Typeset`size$$ = {288., {87., 90.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$401985$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$401985$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{(1/2) ((
            1 + $CellContext`a$$)/$CellContext`a$$ - (((
              1 + $CellContext`a$$)/$CellContext`a$$)^2 - 
           4 ($CellContext`r/$CellContext`a$$))^
          Rational[1, 2])}, {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`a$$, 0.01, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {124., 129.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.706516477055852*^9, 3.7065164901982017`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    FractionBox["1", 
     RowBox[{"8", "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}], 
       FractionBox["3", "2"]]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7065231955818377`*^9, 3.7065232693410034`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
qbHySDRr+dXbdgzUPuE8+tPl0f8AqDhw4w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {1.1250000038265306`, 4.888490229895096}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.706523275093361*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
  RowBox[{"l", "*", 
   SqrtBox[
    RowBox[{"1", "-", "r"}]]}], "-", 
  SuperscriptBox["k", "2"]}]], "Input",
 CellChangeTimes->{{3.707479477281312*^9, 3.7074795259760065`*^9}, {
  3.7074811795418124`*^9, 3.707481191513341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
          RowBox[{"l", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "-", 
          SuperscriptBox["k", "2"]}], " ", ",", "k"}], "]"}], "\[Equal]", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
          RowBox[{"l", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "-", 
          SuperscriptBox["k", "2"]}], " ", ",", "p"}], "]"}], "\[Equal]", 
       "0"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "p"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.707479530511242*^9, 3.707479671647812*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", 
     FractionBox[
      RowBox[{"l", "+", "m", "+", "r"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", "m"}]}]]}], ",", 
    RowBox[{"p", "\[Rule]", 
     FractionBox[
      RowBox[{"l", "-", 
       RowBox[{"2", " ", "l", " ", "m"}], "+", 
       RowBox[{"2", " ", "m", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", "r"}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", "m"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.707479629155513*^9, 3.7074796402674294`*^9}, 
   3.707479672559434*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"l", "-", 
      RowBox[{"2", " ", "l", " ", "m"}], "+", 
      RowBox[{"2", " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "r"}], ")"}]}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", "m"}]}]], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"l", "-", 
          RowBox[{"2", " ", "l", " ", "m"}], "+", 
          RowBox[{"2", " ", "m", " ", 
           RowBox[{"(", 
            RowBox[{"m", "+", "r"}], ")"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "m"}]}]], "-", "r", "-", 
        FractionBox[
         RowBox[{"l", "+", "m", "+", "r"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "m"}]}]]}], "m"]}], ")"}]}], "+", 
   RowBox[{"l", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"l", "-", 
          RowBox[{"2", " ", "l", " ", "m"}], "+", 
          RowBox[{"2", " ", "m", " ", 
           RowBox[{"(", 
            RowBox[{"m", "+", "r"}], ")"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "m"}]}]], "-", "r", "-", 
        FractionBox[
         RowBox[{"l", "+", "m", "+", "r"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "m"}]}]]}], "m"]}], ")"}]}], "-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"l", "+", "m", "+", "r"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", "m"}]}]], ")"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7074797819806185`*^9, 3.7074798111884227`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"l", "+", "m", "+", "r"}], ")"}], "2"], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"4", " ", "m"}]}]]], "Output",
 CellChangeTimes->{3.707479813533083*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
  RowBox[{"l", "*", 
   SqrtBox[
    RowBox[{"1", "-", "r"}]]}], "-", 
  SuperscriptBox["k", "2"]}]], "Input",
 CellChangeTimes->{{3.707479477281312*^9, 3.7074795259760065`*^9}, {
  3.7074811795418124`*^9, 3.707481191513341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
          RowBox[{"l", "*", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", 
          SuperscriptBox["k", "2"]}], " ", ",", "k"}], "]"}], "\[Equal]", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
          RowBox[{"l", "*", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", 
          SuperscriptBox["k", "2"]}], " ", ",", "p"}], "]"}], "\[Equal]", 
       "0"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "p"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7074812370027776`*^9, 3.707481239805746*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", 
     FractionBox[
      RowBox[{"m", "+", "r"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", "m"}]}]]}], ",", 
    RowBox[{"p", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "r"}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", "m"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.707481241886243*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{"m", "+", "r"}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", "m"}]}]], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{"m", "+", "r"}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "m"}]}]], "-", "r", "-", 
        FractionBox[
         RowBox[{"m", "+", "r"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "m"}]}]]}], "m"]}], ")"}]}], "+", 
   RowBox[{"l", "*", 
    SqrtBox[
     RowBox[{"1", "-", "r"}]]}], "-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"m", "+", "r"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", "m"}]}]], ")"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.707481293703144*^9, 3.707481371322151*^9}}],

Cell[BoxData[
 StyleBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["m", "2"], "-", 
    RowBox[{"l", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "+", 
    SuperscriptBox["r", "2"], "+", 
    RowBox[{"2", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "l", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", "m"}]}]],
  FontSize->24]], "Input",
 CellChangeTimes->{3.707481436208377*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
          RowBox[{"l", "*", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", 
          SuperscriptBox["k", "2"], "+", 
          RowBox[{"g", "*", 
           RowBox[{"(", 
            RowBox[{"p", "-", "k", "-", "m", "+", 
             RowBox[{"a", 
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}]}], "-", "1"}], ")"}]}]}], ",", 
         "k"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
          RowBox[{"l", "*", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", 
          SuperscriptBox["k", "2"], "+", 
          RowBox[{"g", "*", 
           RowBox[{"(", 
            RowBox[{"p", "-", "k", "-", "m", "+", 
             RowBox[{"a", 
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}]}], "-", "1"}], ")"}]}]}], ",", 
         "p"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"p", "-", "r", "-", "k"}], "m"]}], ")"}]}], "+", 
          RowBox[{"l", "*", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", 
          SuperscriptBox["k", "2"], "+", 
          RowBox[{"g", "*", 
           RowBox[{"(", 
            RowBox[{"p", "-", "k", "-", "m", "+", 
             RowBox[{"a", 
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}]}], "-", "1"}], ")"}]}]}], ",", 
         "g"}], "]"}], "\[Equal]", "0"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "k", ",", "g"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7074822513582973`*^9, 3.707482297615251*^9}, {
  3.707482331881672*^9, 3.7074824266051426`*^9}, {3.707482459741805*^9, 
  3.707482464389066*^9}},
 FontSize->24],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "m"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "m"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", "r"}], 
      RowBox[{"2", " ", "m"}]]}], ",", 
    RowBox[{"k", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "a", "+", "r", "-", 
       RowBox[{"a", " ", "r"}]}], 
      RowBox[{"2", " ", "m"}]]}], ",", 
    RowBox[{"g", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "-", 
       RowBox[{"2", " ", "m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "m"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", "r"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.707482428532531*^9, 3.7074824652876997`*^9},
 FontSize->24]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "m"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"]}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "m"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", "r"}], 
     RowBox[{"2", " ", "m"}]], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "m"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["m", "2"]}], "+", 
          RowBox[{"a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "m"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", "r"}], 
         RowBox[{"2", " ", "m"}]], "-", "r", "-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", "a", "+", "r", "-", 
          RowBox[{"a", " ", "r"}]}], 
         RowBox[{"2", " ", "m"}]]}], "m"]}], ")"}]}], "+", 
   RowBox[{"l", "*", 
    SqrtBox[
     RowBox[{"1", "-", "r"}]]}], "-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "a", "+", "r", "-", 
       RowBox[{"a", " ", "r"}]}], 
      RowBox[{"2", " ", "m"}]], ")"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7074824764116397`*^9, 3.707482506960394*^9}},
 FontSize->24],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"4", " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], "-", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", "m"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["m", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"l", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}], "-", 
   RowBox[{"2", " ", "a", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"]}], "-", 
      RowBox[{"2", " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "r"}], ")"}]}], "+", "r"}], ")"}]}]}], 
  RowBox[{"4", " ", 
   SuperscriptBox["m", "2"]}]]], "Output",
 CellChangeTimes->{3.7074825078830557`*^9},
 FontSize->24]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}], 
              SqrtBox[
               RowBox[{"1", "-", "r"}]]}], ")"}], "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", "r"}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.8", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7074835558720074`*^9, 3.7074836552697935`*^9}, {
  3.707483693278885*^9, 3.7074837241598854`*^9}, {3.707484593357171*^9, 
  3.707484611653191*^9}, {3.7074847158544197`*^9, 3.707484755550722*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1.8, 15}}, Typeset`size$$ = {288., {88., 91.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$608177$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1.8}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$608177$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(-1 + 2 (($CellContext`a$$ - 1) (1 - $CellContext`r)^
             Rational[1, 2])^2 - (
          2 (($CellContext`a$$ - 1) (1 - $CellContext`r)^
             Rational[1, 2])^2) (-2 + $CellContext`r) + ($CellContext`a$$ (-1 + 
            4 (($CellContext`a$$ - 1) (1 - $CellContext`r)^
                Rational[1, 2])^2)) (-1 + $CellContext`r) + $CellContext`r)/(
        2 ((($CellContext`a$$ - 1) (1 - $CellContext`r)^
            Rational[1, 2])^2)^2), {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`a$$, 1.8, 15}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {125., 130.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7074836585971637`*^9, {3.707483694812965*^9, 3.7074837248443604`*^9}, {
   3.7074845971078143`*^9, 3.707484612181553*^9}, {3.707484716900157*^9, 
   3.7074847561551237`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    StyleBox[
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
        RowBox[{"b", "*", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "+", 
        SuperscriptBox["r", "2"], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", " ", "b", " ", 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}]}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "1"}], "}"}]}],
     FontSize->24], 
    StyleBox["]",
     FontSize->24]}], 
   StyleBox[",",
    FontSize->24], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"a", ",", "1.5", ",", "10"}], "}"}],
    FontSize->24], 
   StyleBox[",",
    FontSize->24], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", "10"}], "}"}],
    FontSize->24]}], 
  StyleBox["]",
   FontSize->24]}]], "Input",
 CellChangeTimes->{{3.7088567759519596`*^9, 3.7088568663730297`*^9}, {
   3.7088580350926027`*^9, 3.7088580352611594`*^9}, {3.7088580667338285`*^9, 
   3.7088580668844433`*^9}, {3.7088686492075415`*^9, 3.7088686690169725`*^9}, 
   3.7088691176830616`*^9, 3.7089484222121754`*^9, {3.708948793512658*^9, 
   3.7089488089701853`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 4.4, $CellContext`b$$ = 1., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1.5, 10}, {
      Hold[$CellContext`b$$], 1, 10}}, Typeset`size$$ = {288., {90., 94.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$102121$$ = 0, $CellContext`b$102122$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.5, $CellContext`b$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$102121$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$102122$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[((($CellContext`a$$ - 1) (1 - $CellContext`r)^
            Rational[1, 2])^2 - $CellContext`b$$ (1 - $CellContext`r)^
          Rational[1, 2] + $CellContext`r^2 + (
           2 (($CellContext`a$$ - 1) (1 - $CellContext`r)^Rational[1, 2])) ((
             2 $CellContext`b$$) (1 - $CellContext`r)^
             Rational[1, 2] + $CellContext`r))/(-1 + 
        4 (($CellContext`a$$ - 1) (1 - $CellContext`r)^
           Rational[1, 2])), {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`a$$, 1.5, 10}, {$CellContext`b$$, 1, 
         10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{331., {140., 145.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.708856871095023*^9, 3.708858035934999*^9, 3.7088580673945684`*^9, 
   3.708860387121087*^9, {3.7088686498131037`*^9, 3.7088686699271398`*^9}, 
   3.7088691182569623`*^9, 3.708948424823084*^9, 3.708948811037089*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
         RowBox[{"l", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "+", 
         SuperscriptBox["r", "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "l", " ", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}]}]}]], ",", "r"}], "]"}], 
     "\[Equal]", "0"}], ",", "r"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088589789972086`*^9, 3.70885899708526*^9}, {
  3.7088590776665998`*^9, 3.708859082900137*^9}, {3.708867999636388*^9, 
  3.708868028768736*^9}, {3.708868081608879*^9, 3.708868081974082*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.708859133461523*^9, 3.7088594710051517`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
      RowBox[{"(", "r", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.25", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708868132159548*^9, 3.708868201106149*^9}, {
  3.7088682392327824`*^9, 3.7088682495839677`*^9}, {3.708868332661032*^9, 
  3.708868333936064*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 8.9, $CellContext`l$$ = 16.2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1.25, 20}, {
      Hold[$CellContext`l$$], 0, 20}}, Typeset`size$$ = {288., {89., 92.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$50850$$ = 0, $CellContext`l$50851$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.25, $CellContext`l$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$50850$$, 0], 
        Hold[$CellContext`l$$, $CellContext`l$50851$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(2 (($CellContext`a$$ - 1) (1 - $CellContext`r)^
           Rational[1, 2])) $CellContext`r, {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`a$$, 1.25, 20}, {$CellContext`l$$, 0,
          20}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{331., {138., 143.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.708868188380994*^9, 3.7088682040486135`*^9}, 
   3.708868250588584*^9, 3.708868334825368*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7088763300472794`*^9, 3.708876331396984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}], "2"], 
     RowBox[{
      RowBox[{"4", "a"}], "-", "5"}]], "-", 
    FractionBox["7", "4"]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7088763419659004`*^9, 3.708876443692116*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
qKgMJkUiAtboKBxYrkCH/wC0i8Va
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {-2.304062380805548, 23.062657717647287`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.708876421858899*^9, 3.70887644440753*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], "2"], 
      RowBox[{
       RowBox[{"4", "a"}], "-", "5"}]], "-", 
     FractionBox["7", "4"]}], "\[Equal]", "0"}], ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.708876464051215*^9, 3.7088764801101785`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "-", 
        SqrtBox["42"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        SqrtBox["42"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7088764813092995`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
    RowBox[{"b", "*", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "+", 
    SuperscriptBox["r", "2"], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", " ", "b", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], ")"}]}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.708948448496208*^9, 3.7089484737429776`*^9}, 
   3.708948827745631*^9}],

Cell["\<\
\\frac{2 (a-1) \\sqrt{1-r} \\left(2 b \\sqrt{1-r}+r\\right)+(a-1)^2 (1-r)-b \
\\sqrt{1-r}+r^2}{4 (a-1) \\sqrt{1-r}-1}\
\>", "Output",
 CellChangeTimes->{3.708948476938442*^9, 3.708948829390173*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     StyleBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
         RowBox[{"b", "*", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "+", 
         SuperscriptBox["r", "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", " ", "b", " ", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}]}]}], ")"}]}],
      FontSize->24], 
     StyleBox[",",
      FontSize->24], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "1"}], "}"}],
      FontSize->24], 
     StyleBox[",",
      FontSize->24], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"a", ",", "1.5", ",", "10"}], "}"}],
      FontSize->24], 
     StyleBox[",",
      FontSize->24], 
     RowBox[{
      StyleBox["AxesLabel",
       FontSize->24], 
      StyleBox["\[Rule]",
       FontSize->24], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"r", ",", 
          RowBox[{"FontSize", 
           StyleBox["\[Rule]",
            FontSize->24], 
           StyleBox["25",
            FontSize->24]}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"alpha", ",", 
          RowBox[{"FontSize", 
           StyleBox["\[Rule]",
            FontSize->24], 
           StyleBox["25",
            FontSize->24]}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"profit", ",", 
          RowBox[{"FontSize", 
           StyleBox["\[Rule]",
            FontSize->24], 
           StyleBox["25",
            FontSize->24]}]}], "]"}]}], "}"}]}]}], 
    StyleBox["]",
     FontSize->24]}], 
   StyleBox[",",
    FontSize->24], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", "15"}], "}"}],
    FontSize->24]}], 
  StyleBox["]",
   FontSize->24]}]], "Input",
 CellChangeTimes->{{3.7089492114621034`*^9, 3.7089492348338423`*^9}, {
  3.70894931453506*^9, 3.70894935424807*^9}, {3.7089494384208326`*^9, 
  3.70894944750285*^9}, {3.708949493656576*^9, 3.7089496239197826`*^9}, {
  3.7089496705336647`*^9, 3.708949671383642*^9}, {3.708950342658331*^9, 
  3.708950369255978*^9}, {3.708950402137236*^9, 3.708950402336775*^9}, {
  3.708950478511196*^9, 3.7089505892292013`*^9}, {3.7089506434287043`*^9, 
  3.7089506459880342`*^9}, {3.708950684335001*^9, 3.7089507820867834`*^9}, {
  3.708951044143556*^9, 3.708951044453126*^9}, {3.7089511415569243`*^9, 
  3.708951141827117*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 8.7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], 1, 15}}, Typeset`size$$ = {288., {88., 92.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`b$126401$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$126401$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot3D[((($CellContext`a - 1) (1 - $CellContext`r)^
            Rational[1, 2])^2 - $CellContext`b$$ (1 - $CellContext`r)^
          Rational[1, 2] + $CellContext`r^2 + (
           2 (($CellContext`a - 1) (1 - $CellContext`r)^Rational[1, 2])) ((
             2 $CellContext`b$$) (1 - $CellContext`r)^
             Rational[1, 2] + $CellContext`r))/(-1 + 
        4 (($CellContext`a - 1) (1 - $CellContext`r)^
           Rational[1, 2])), {$CellContext`r, 0, 1}, {$CellContext`a, 1.5, 
         10}, AxesLabel -> {
          Style[$CellContext`r, FontSize -> 25], 
          Style[$CellContext`alpha, FontSize -> 25], 
          Style[$CellContext`profit, FontSize -> 25]}], 
      "Specifications" :> {{$CellContext`b$$, 1, 15}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {126., 131.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.708950658570692*^9, 3.70895068757845*^9}, {
   3.7089507656254187`*^9, 3.708950784859107*^9}, 3.708951046698884*^9, 
   3.7089511055439577`*^9, {3.708951142382517*^9, 3.7089511559317694`*^9}, {
   3.7089512180706263`*^9, 3.7089512345720797`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StandardForm", "[", 
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], "]"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708950610928771*^9, 3.7089506109307723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], "2"], 
       RowBox[{
        RowBox[{"4", "*", "a"}], "-", "1"}]], "-", 
      RowBox[{"(", 
       FractionBox["1", "2"], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "15"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709105027303747*^9, 3.70910510199646*^9}, {
   3.709105133585294*^9, 3.7091052292530055`*^9}, {3.709105286928934*^9, 
   3.7091053559599495`*^9}, {3.709105411494421*^9, 3.7091054123417983`*^9}, 
   3.7091055088968143`*^9, {3.7091055835749617`*^9, 3.709105583743181*^9}, {
   3.709105658506625*^9, 3.709105658619707*^9}, {3.709129956136197*^9, 
   3.709129966903304*^9}, {3.7091300409450073`*^9, 3.709130044783531*^9}, {
   3.70913007486069*^9, 3.709130079413039*^9}, {3.7091301194036603`*^9, 
   3.709130197788698*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r$$], 0, 1}}, Typeset`size$$ = {288., {90., 93.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`r$32157$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`r$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$32157$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[($CellContext`a - 1)^2/(4 $CellContext`a - 1) - 1/
        2, {$CellContext`a, 1, 15}], 
      "Specifications" :> {{$CellContext`r$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {127., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.709105339126196*^9, 3.709105357012486*^9}, 
   3.7091054128550787`*^9, {3.7091054936618595`*^9, 3.7091055096383657`*^9}, 
   3.709105584233515*^9, 3.7091056591417685`*^9, 3.709129969772975*^9, 
   3.7091301219036922`*^9, {3.709130179716294*^9, 3.7091302069177017`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "-", "1"}], ")"}], "2"], 
    RowBox[{
     RowBox[{"4", "*", "a"}], "-", "5"}]], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}]}], "+", 
      FractionBox["3", "2"], "+", "l"}], ")"}], "*", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", "r"}]], "+", 
      RowBox[{"a", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}]}]}], 
     RowBox[{"1", "+", 
      RowBox[{"a", "*", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7091054541191697`*^9, 3.709105457031355*^9}, 
   3.7091303498932533`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", "a"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["3", "2"], "+", "l", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]], "-", 
      RowBox[{"a", " ", "r"}]}], ")"}]}], 
   RowBox[{"1", "+", 
    RowBox[{"a", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}]}]]}]], "Output",
 CellChangeTimes->{3.709105457708887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
        RowBox[{"b", "*", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "+", 
        SuperscriptBox["r", "2"], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", " ", "b", " ", 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}]}]}]], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "r"}], ")"}]}], "+", 
         FractionBox["3", "2"], "+", "b"}], ")"}], "*", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", "r"}]], "+", 
         RowBox[{"a", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "r"}], ")"}]}]}], 
        RowBox[{"1", "+", 
         RowBox[{"a", "*", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]}]]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.8", ",", "13"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7091289871051965`*^9, {3.70912902356555*^9, 3.709129049112371*^9}, {
   3.70912954249481*^9, 3.7091295731252527`*^9}, {3.7091315861035333`*^9, 
   3.709131586286662*^9}, {3.709259628077407*^9, 3.7092596328935223`*^9}, {
   3.7092610661826286`*^9, 3.7092610785007863`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.8, $CellContext`b$$ = 8.18, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], 0, 10}, {
      Hold[$CellContext`a$$], 1.8, 13}}, Typeset`size$$ = {288., {86., 89.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`b$62681$$ = 0, $CellContext`a$62682$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.8, $CellContext`b$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$62681$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$62682$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[((($CellContext`a$$ - 1) (1 - $CellContext`r)^
             Rational[1, 2])^2 - $CellContext`b$$ (1 - $CellContext`r)^
           Rational[1, 2] + $CellContext`r^2 + (
            2 (($CellContext`a$$ - 1) (1 - $CellContext`r)^Rational[1, 2])) ((
              2 $CellContext`b$$) (1 - $CellContext`r)^
              Rational[1, 2] + $CellContext`r))/(-1 + 
         4 (($CellContext`a$$ - 1) (1 - $CellContext`r)^
            Rational[1, 2])) - (($CellContext`a$$ - 1) (1 - $CellContext`r)^
           Rational[1, 2] - ($CellContext`a$$ - 1) (1 - $CellContext`r) + 
         3/2 + $CellContext`b$$) (((1 - $CellContext`r)^
           Rational[1, 2] + $CellContext`a$$ (1 - $CellContext`r))/(
         1 + $CellContext`a$$ (1 - $CellContext`r)^
           Rational[1, 2])), {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`b$$, 0, 10}, {$CellContext`a$$, 1.8, 
         13}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{331., {135., 140.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7091295741564827`*^9, 3.7091315871923194`*^9, 
  3.709259634277506*^9, 3.7092610794789352`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
     RowBox[{"b", "*", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], "+", 
     SuperscriptBox["r", "2"], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", " ", "b", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], ")"}]}]}]], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}]}], "+", 
      FractionBox["3", "2"], "+", "b"}], ")"}], "*", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", "r"}]], "+", 
      RowBox[{"a", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "r"}], ")"}]}]}], 
     RowBox[{"1", "+", 
      RowBox[{"a", "*", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7091296117427654`*^9, 3.709129616121524*^9}, {
  3.7091319305610595`*^9, 3.709131940046735*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["3", "2"], "+", "b", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"a", "+", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]], "-", 
       RowBox[{"a", " ", "r"}]}], ")"}]}], 
    RowBox[{"1", "+", 
     RowBox[{"a", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}]}]]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "b"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", 
    SuperscriptBox["r", "2"], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "b", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}]}]]}]], "Output",
 CellChangeTimes->{
  3.709129616962731*^9, {3.709131933839348*^9, 3.709131942378384*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], "2"], 
      RowBox[{
       RowBox[{"4", "*", "a"}], "-", "5"}]], "-", 
     RowBox[{"(", 
      FractionBox["1", "2"], ")"}]}], "\[Equal]", " ", "0"}], ",", "a"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709130224319867*^9, 3.70913024801149*^9}, 
   3.709130355450465*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "-", 
        SqrtBox["2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SqrtBox["2"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7091302407846594`*^9, 3.709130249880004*^9}, 
   3.709130357485384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox["10"]], "Input"],

Cell[BoxData[
 SqrtBox["10"]], "Output",
 CellChangeTimes->{3.709130285897543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox["10"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["3.1622776601683795`"], "Output",
 CellChangeTimes->{3.709130287743968*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SqrtBox["2"], "*", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.709130319750188*^9, 3.7091303203424435`*^9}, {
  3.709130377126336*^9, 3.7091303781322627`*^9}}],

Cell[BoxData["0.7071067811865476`"], "Output",
 CellChangeTimes->{3.7091303258315225`*^9, 3.70913037885606*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "-", 
    SqrtBox["2"]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "-", 
    SqrtBox["2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7091304316120043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"4", "-", 
     SqrtBox["2"]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["1.2928932188134525`"], "Output",
 CellChangeTimes->{3.7091304329367857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", 
    SqrtBox["2"]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", 
    SqrtBox["2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7091304538024254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"4", "+", 
     SqrtBox["2"]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["2.7071067811865475`"], "Output",
 CellChangeTimes->{3.7091304549069963`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["3", "2"], "+", "b", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]], "-", 
          RowBox[{"a", " ", "r"}]}], ")"}]}], 
       RowBox[{"1", "+", 
        RowBox[{"a", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]}]]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", 
       SuperscriptBox["r", "2"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "b", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]]}], "\[Equal]", "0"}], ",", "a"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7091316359998064`*^9, 3.70913164595986*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.709131889456976*^9, 3.709131889793212*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
         RowBox[{"b", "*", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "+", 
         SuperscriptBox["r", "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", " ", "b", " ", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}]}]}]], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "r"}], ")"}]}], "+", 
          FractionBox["3", "2"], "+", "b"}], ")"}], "*", 
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", "r"}]], "+", 
          RowBox[{"a", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "r"}], ")"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"a", "*", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]}]]}]}], ",", 
      RowBox[{"a", "\[Equal]", " ", "2.3"}]}], "]"}], "\[Equal]", "0"}], ",", 
   "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.709259719839788*^9, 3.7092597504558125`*^9}, {
  3.70925978144128*^9, 3.7092598048775325`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"-", "1.8279039242536685`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", "0.6793025337830839`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7092597358990803`*^9, 3.709259752424155*^9}, {
  3.7092597832190423`*^9, 3.7092598057253428`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], "2"], "-", 
         RowBox[{"b", "*", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "+", 
         SuperscriptBox["r", "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", " ", "b", " ", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}]}]}]], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "r"}], ")"}]}], "+", 
          FractionBox["3", "2"], "+", "b"}], ")"}], "*", 
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", "r"}]], "+", 
          RowBox[{"a", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "r"}], ")"}]}]}], 
         RowBox[{"1", "+", 
          RowBox[{"a", "*", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]}]]}]}], ",", 
      RowBox[{"a", "\[Equal]", " ", "1.5"}]}], "]"}], "\[Equal]", "0"}], ",", 
   "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.7092598180116687`*^9, 3.7092598196019535`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"-", "2.780128924469336`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", "0.41762876942713933`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7092598204468155`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"p", "-", "r", "-", "k"}], ")"}], 
   RowBox[{"Log", "[", 
    RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "\[Equal]", " ", 
  RowBox[{"1", "+", 
   RowBox[{"Log", "[", "m", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7092632895144873`*^9, 3.7092633526778264`*^9}, {
  3.7092633940862045`*^9, 3.709263394403788*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "-", "r", "-", "k"}], ")"}], 
    RowBox[{"Log", "[", 
     RowBox[{"p", "-", "r", "-", "k"}], "]"}]}]}], "\[Equal]", " ", 
  RowBox[{
   RowBox[{"2", "k"}], "+", 
   RowBox[{"Log", "[", "m", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.709263379614222*^9, 3.7092633979760838`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "-", "r", "-", "k"}], ")"}], 
       RowBox[{"Log", "[", 
        RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "\[Equal]", " ", 
      RowBox[{"1", "+", 
       RowBox[{"Log", "[", "m", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", "-", "r", "-", "k"}], ")"}], 
        RowBox[{"Log", "[", 
         RowBox[{"p", "-", "r", "-", "k"}], "]"}]}]}], "\[Equal]", " ", 
      RowBox[{
       RowBox[{"2", "k"}], "+", 
       RowBox[{"Log", "[", "m", "]"}]}]}]}], "}"}], ",", "p", ",", "k"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709263386541425*^9, 3.709263431190877*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "bdomv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: \[NoBreak]\\!\\(k\\)\[NoBreak] is not a valid \
domain specification. Assuming it is a variable to eliminate. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::bdomv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7092634259042797`*^9, 3.7092634321424017`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
Solve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7092634259042797`*^9, 3.709263432212449*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}], "]"}]}], "\[Equal]", 
      RowBox[{"1", "+", 
       RowBox[{"Log", "[", "m", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "+", "p", "-", "r"}], ")"}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"-", "k"}], "+", "p", "-", "r"}], "]"}]}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"2", " ", "k"}], "+", 
       RowBox[{"Log", "[", "m", "]"}]}]}]}], "}"}], ",", "p", ",", "k"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.7092634259057813`*^9, 3.7092634322144656`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"k", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "1", "-", 
       RowBox[{"k", "*", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"p", "-", "r", "-", "k"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]], "]"}]}], "+", 
       RowBox[{"p", "*", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"p", "-", "r", "-", "k"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]], "]"}]}], "-", 
       RowBox[{"r", "*", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"p", "-", "r", "-", "k"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "r"}], ")"}]}]], "]"}]}], "+", 
       RowBox[{"p", "*", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "r", "+", "k"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]], ")"}]}], "+", 
       RowBox[{"o", "*", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]]}], "-", 
       SuperscriptBox["k", "2"]}], ",", "r"}], "]"}], ",", "a"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7092638815538406`*^9, 3.7092641158599153`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}], ")"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "k", "-", "r"}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", 
         RowBox[{"2", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], " ", "o", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}]]}]}]}]], "Output",
 CellChangeTimes->{
  3.7092640762028384`*^9, {3.7092641081728506`*^9, 3.709264118811318*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]}]]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["p", "2"]}], "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "k", "-", "r"}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", 
           RowBox[{"2", " ", "a", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox[
               RowBox[{"1", "-", "r"}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{"1", "-", "r"}]]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], " ", "o", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.001", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "0", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7092641268660955`*^9, 3.7092641411290417`*^9}, {
  3.7092641843100643`*^9, 3.7092641934944243`*^9}, {3.7092642241256766`*^9, 
  3.7092642910160265`*^9}, {3.7092643706234913`*^9, 3.709264405011372*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.001, $CellContext`k$$ = 
    0., $CellContext`o$$ = 0., $CellContext`p$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`p$$], 0, 10}, {
      Hold[$CellContext`a$$], 1.001, 13}, {
      Hold[$CellContext`o$$], 0, 13}, {
      Hold[$CellContext`k$$], 0, 10}}, Typeset`size$$ = {288., {88., 92.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`p$78943$$ = 0, $CellContext`a$78944$$ = 
    0, $CellContext`o$78945$$ = 0, $CellContext`k$78946$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.001, $CellContext`k$$ = 
        0, $CellContext`o$$ = 0, $CellContext`p$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`p$$, $CellContext`p$78943$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$78944$$, 0], 
        Hold[$CellContext`o$$, $CellContext`o$78945$$, 0], 
        Hold[$CellContext`k$$, $CellContext`k$78946$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[((-(1/((8 (-1 + $CellContext`a$$)^3) (-1 + $CellContext`r)^2))) ((
            4 (-$CellContext`p$$^2 + $CellContext`p$$ (
               2 + $CellContext`k$$ - $CellContext`r) - $CellContext`a$$^2 \
(-1 + $CellContext`r) + ((2 $CellContext`a$$) (
                1 + (1 - $CellContext`r)^
                 Rational[1, 2])) (-1 + $CellContext`r) - (1 + 
              2 (1 - $CellContext`r)^
                Rational[
                 1, 2]) (-1 + $CellContext`r))) ((-1 + $CellContext`a$$) (
               1 - $CellContext`r)^Rational[1, 2])^
            Rational[
             1, 2] - ((-1 + $CellContext`a$$)^2 $CellContext`o$$) (-1 + \
$CellContext`r))) ((-1 + $CellContext`a$$) (1 - $CellContext`r)^
           Rational[1, 2])^Rational[1, 2], {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`p$$, 0, 10}, {$CellContext`a$$, 
         1.001, 13}, {$CellContext`o$$, 0, 13}, {$CellContext`k$$, 0, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{331., {161., 166.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.709264407811011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"k", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "-", "1"}], ")"}], 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "1", "-", 
      RowBox[{"k", "*", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"p", "-", "r", "-", "k"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]], "]"}]}], "+", 
      RowBox[{"p", "*", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"p", "-", "r", "-", "k"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]], "]"}]}], "-", 
      RowBox[{"r", "*", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"p", "-", "r", "-", "k"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "r"}], ")"}]}]], "]"}]}], "+", 
      RowBox[{"p", "*", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "r", "+", "k"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]], ")"}]}], "-", 
      SuperscriptBox["k", "2"], "+", 
      RowBox[{"o", "*", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1.25", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7092644788036175`*^9, 3.709264597303359*^9}, {
  3.709264663898714*^9, 3.7092646834632497`*^9}, {3.709264739525033*^9, 
  3.7092648078014684`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.52, $CellContext`k$$ = 
    0.032, $CellContext`o$$ = 0., $CellContext`p$$ = 0.12, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 0, 1}, {
      Hold[$CellContext`a$$], 1.25, 5}, {
      Hold[$CellContext`p$$], 0, 2}, {
      Hold[$CellContext`o$$], 0, 2}}, Typeset`size$$ = {288., {88., 92.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`k$100567$$ = 0, $CellContext`a$100568$$ = 
    0, $CellContext`p$100569$$ = 0, $CellContext`o$100570$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1.25, $CellContext`k$$ = 
        0, $CellContext`o$$ = 0, $CellContext`p$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$100567$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$100568$$, 0], 
        Hold[$CellContext`p$$, $CellContext`p$100569$$, 0], 
        Hold[$CellContext`o$$, $CellContext`o$100570$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`k$$ + ($CellContext`a$$ - 1) (1 - $CellContext`r)^
          Rational[1, 2] - $CellContext`p$$ + 1 - $CellContext`k$$ 
        Log[($CellContext`p$$ - $CellContext`r - \
$CellContext`k$$)/(($CellContext`a$$ - 1) (1 - $CellContext`r)^
           Rational[1, 2])] + $CellContext`p$$ 
         Log[($CellContext`p$$ - $CellContext`r - \
$CellContext`k$$)/(($CellContext`a$$ - 1) (1 - $CellContext`r)^
            Rational[1, 2])] - $CellContext`r 
        Log[($CellContext`p$$ - $CellContext`r - \
$CellContext`k$$)/(($CellContext`a$$ - 1) (
           1 - $CellContext`r))] + $CellContext`p$$ ((($CellContext`a$$ - 
             1) (1 - $CellContext`r)^
             Rational[
              1, 2] - $CellContext`p$$ + $CellContext`r + \
$CellContext`k$$)/(($CellContext`a$$ - 1) (1 - $CellContext`r)^
           Rational[1, 2])) - $CellContext`k$$^2 + $CellContext`o$$ (
           1 - $CellContext`r)^Rational[1, 2], {$CellContext`r, 0, 1}], 
      "Specifications" :> {{$CellContext`k$$, 0, 1}, {$CellContext`a$$, 1.25, 
         5}, {$CellContext`p$$, 0, 2}, {$CellContext`o$$, 0, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{331., {161., 166.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.709264584620301*^9, 3.7092645978518066`*^9}, {
   3.709264666293069*^9, 3.7092646839507475`*^9}, 3.7092647404489813`*^9, {
   3.709264786321682*^9, 3.7092648082220216`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"k", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "1", "-", 
       RowBox[{"k", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
       RowBox[{"k", "*", 
        RowBox[{"Log", "[", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]], "]"}]}], "+", 
       RowBox[{"p", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "-", 
       RowBox[{"p", "*", 
        RowBox[{"Log", "[", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]], "]"}]}], "-", 
       RowBox[{"r", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
       RowBox[{"r", "*", 
        RowBox[{"Log", "[", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "r"}], ")"}]}]], "]"}]}], "+", 
       RowBox[{"p", "*", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}], 
            SqrtBox[
             RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "r", "+", "k"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}], 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]], ")"}]}], "-", 
       SuperscriptBox["k", "2"], "+", 
       RowBox[{"o", "*", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}], ",", "k"}], "]"}], "\[Equal]", "0"}], 
   ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.7092648901518397`*^9, 3.7092649204065228`*^9}, {
  3.7092651498268757`*^9, 3.7092652712836847`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "bdomv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: \[NoBreak]\\!\\(p\\)\[NoBreak] is not a valid \
domain specification. Assuming it is a variable to eliminate. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::bdomv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.709264921949539*^9, {3.7092652470149765`*^9, 3.7092652596089582`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.709264900480809*^9, 3.7092649219525423`*^9}, {
  3.7092652470219755`*^9, 3.709265259643502*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"k", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "1", "-", 
         RowBox[{"k", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
         RowBox[{"k", "*", 
          RowBox[{"Log", "[", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]], "]"}]}], "+", 
         RowBox[{"p", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "-", 
         RowBox[{"p", "*", 
          RowBox[{"Log", "[", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]], "]"}]}], "-", 
         RowBox[{"r", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
         RowBox[{"r", "*", 
          RowBox[{"Log", "[", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "r"}], ")"}]}]], "]"}]}], "+", 
         RowBox[{"p", "*", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}], 
              SqrtBox[
               RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "r", "+", "k"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"o", "*", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]}], ",", "p"}], "]"}], "\[Equal]", "0"}],
      ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"k", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "1", "-", 
         RowBox[{"k", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
         RowBox[{"k", "*", 
          RowBox[{"Log", "[", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]], "]"}]}], "+", 
         RowBox[{"p", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "-", 
         RowBox[{"p", "*", 
          RowBox[{"Log", "[", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]], "]"}]}], "-", 
         RowBox[{"r", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
         RowBox[{"r", "*", 
          RowBox[{"Log", "[", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "r"}], ")"}]}]], "]"}]}], "+", 
         RowBox[{"p", "*", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}], 
              SqrtBox[
               RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "r", "+", "k"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"o", "*", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]}], ",", "k"}], "]"}], "\[Equal]", 
      "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "k"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709265284917673*^9, 3.7092652975031986`*^9}, {
  3.7092653630895557`*^9, 3.709265392641413*^9}, {3.7092654723017397`*^9, 
  3.7092654745378036`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
Solve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.70926529931907*^9, {3.7092653973222847`*^9, 3.70926542087127*^9}, 
   3.7092654757585635`*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       FractionBox["p", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]], "-", 
       FractionBox["k", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}]], "+", 
       FractionBox["p", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}]], "-", 
       FractionBox["r", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}]], "+", 
       FractionBox[
        RowBox[{"k", "-", "p", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "+", "r"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]], "-", 
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]], "]"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}], "]"}]}], "\[Equal]", "0"}],
      ",", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "k"}], "+", 
       FractionBox["p", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]], "+", 
       FractionBox["k", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}]], "-", 
       FractionBox["p", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}]], "+", 
       FractionBox["r", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}]], "+", 
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}]], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "p", "-", "r"}], "]"}]}], "\[Equal]", 
      "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "k"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7092654211082935`*^9, 3.7092654757585635`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"k", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "-", "1"}], ")"}], 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "1", "-", 
    RowBox[{"k", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
    RowBox[{"k", "*", 
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], "]"}]}], "+", 
    RowBox[{"p", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "-", 
    RowBox[{"p", "*", 
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], "]"}]}], "-", 
    RowBox[{"r", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"p", "-", "r", "-", "k"}], "]"}]}], "+", 
    RowBox[{"r", "*", 
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}]}]], "]"}]}], "+", 
    RowBox[{"p", "*", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}], 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "-", "p", "+", "r", "+", "k"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}], 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], ")"}]}], "-", 
    SuperscriptBox["k", "2"], "+", 
    RowBox[{"o", "*", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}]}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.709265507724265*^9, 3.7092655157103224`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", "a"}], "a"], "+", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "a"], "*", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
           RowBox[{"4", "p"}], "+", 
           RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
  RowBox[{"o", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", "a"}], "a"], "+", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "a"], "*", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
           RowBox[{"4", "p"}], "+", 
           RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
  SuperscriptBox["k", "2"]}]], "Input",
 CellChangeTimes->{{3.7092729577144213`*^9, 3.709273117562147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["k", "2"]}], "+", 
  RowBox[{"o", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", "a"}], "a"]}], "-", 
        SqrtBox[
         FractionBox[
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "+", 
           RowBox[{"4", " ", "k"}], "-", 
           RowBox[{"4", " ", "p"}]}], "a"]]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", "a"}], "a"]}], "-", 
        SqrtBox[
         FractionBox[
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "+", 
           RowBox[{"4", " ", "k"}], "-", 
           RowBox[{"4", " ", "p"}]}], "a"]]}], ")"}]}]}], ")"}], " ", 
   "p"}]}]], "Output",
 CellChangeTimes->{3.7092731218967113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               FractionBox[
                RowBox[{"1", "+", "a"}], "a"], "+", 
               SqrtBox[
                RowBox[{
                 FractionBox["1", "a"], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                   RowBox[{"4", "p"}], "+", 
                   RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
          RowBox[{"o", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               FractionBox[
                RowBox[{"1", "+", "a"}], "a"], "+", 
               SqrtBox[
                RowBox[{
                 FractionBox["1", "a"], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                   RowBox[{"4", "p"}], "+", 
                   RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
          SuperscriptBox["k", "2"]}], ",", "p"}], "]"}], "\[Equal]", "0"}], 
      ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               FractionBox[
                RowBox[{"1", "+", "a"}], "a"], "+", 
               SqrtBox[
                RowBox[{
                 FractionBox["1", "a"], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                   RowBox[{"4", "p"}], "+", 
                   RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
          RowBox[{"o", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               FractionBox[
                RowBox[{"1", "+", "a"}], "a"], "+", 
               SqrtBox[
                RowBox[{
                 FractionBox["1", "a"], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                   RowBox[{"4", "p"}], "+", 
                   RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
          SuperscriptBox["k", "2"]}], ",", "k"}], "]"}], "\[Equal]", "0"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "k"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.709273127370596*^9, 3.709273190667914*^9}, {
  3.7092732653651037`*^9, 3.7092733347802253`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7092733540643587`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7092732096383295`*^9, 3.7092732133664637`*^9}, 
   3.709273246724411*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7092732482524953`*^9, 3.709273248319042*^9}}],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"p", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "+", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
            RowBox[{"4", "p"}], "+", 
            RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
   RowBox[{"o", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "+", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
            RowBox[{"4", "p"}], "+", 
            RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
   SuperscriptBox["k", "2"]}], "]"}]], "Input",
 CellChangeTimes->{3.70927335821129*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"1", "+", "a"}], "a"], "+", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "a"], "*", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
          RowBox[{"4", "p"}], "+", 
          RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], "\[Equal]", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709273640370508*^9, 3.7092736501608562`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "a"], "+", 
   SqrtBox[
    FractionBox[
     RowBox[{"1", "+", 
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"4", " ", "k"}], "-", 
         RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
     SuperscriptBox["a", "2"]]]}], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.709273650981393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"1", "+", "a"}], "a"], "+", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "a"], "*", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
          RowBox[{"4", "p"}], "+", 
          RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], "\[Equal]", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709273764407338*^9, 3.709273766194228*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   FractionBox["1", "a"], "+", 
   SqrtBox[
    FractionBox[
     RowBox[{"1", "+", 
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"4", " ", "k"}], "-", 
         RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
     SuperscriptBox["a", "2"]]]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.709273766595935*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "+", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "+", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "p"}], "]"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "+", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "+", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "k"}], "]"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "+", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "+", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "m"}], "]"}], 
      "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "m", ",", "p"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70927434223893*^9, 3.7092743675753374`*^9}, {
   3.7092745620924225`*^9, 3.709274571700529*^9}, {3.7092746018956223`*^9, 
   3.7092746657158203`*^9}, 3.709278970164111*^9, {3.709279045738057*^9, 
   3.709279051041165*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"2", " ", "a"}], "+", 
        RowBox[{"2", " ", "o"}]}], ")"}]}]}], ",", 
    RowBox[{"p", "\[Rule]", 
     FractionBox["1", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7092743544955454`*^9, 3.709274389956143*^9, 
  3.709274667769382*^9, 3.7092790528693123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "+", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], "2"]}], 
     ")"}]}], "+", 
   RowBox[{"o", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "+", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], "2"]}], 
     ")"}]}], "-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", "2"], ")"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7092752146519938`*^9, 3.7092752419157248`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "o"}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "a"}], ")"}], "2"], 
         SuperscriptBox["a", "2"]]], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], 
            SuperscriptBox["a", "2"]]]}], ")"}], " ", "o"}]}], ")"}]}]}], 
   RowBox[{"4", " ", "a"}]]}]], "Output",
 CellChangeTimes->{3.709275243389575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "o"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "a"}], ")"}], "2"], 
             SuperscriptBox["a", "2"]]], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "a"}], ")"}], "2"], 
                SuperscriptBox["a", "2"]]]}], ")"}], " ", "o"}]}], ")"}]}]}], 
       RowBox[{"4", " ", "a"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "8"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7092756200754795`*^9, 3.7092756386786013`*^9}, {
  3.7092757780669985`*^9, 3.7092757792455063`*^9}, {3.709275907598333*^9, 
  3.7092759303023744`*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`o$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`o$$], 0, 100}}, Typeset`size$$ = {288., {88., 90.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`o$127516$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`o$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`o$$, $CellContext`o$127516$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[-((1 + 
          2 $CellContext`o$$ + $CellContext`a (((
                1 + $CellContext`a)^2/$CellContext`a^2)^
             Rational[1, 2] + (
              2 (-1 + ((1 + $CellContext`a)^2/$CellContext`a^2)^
                Rational[1, 2])) $CellContext`o$$))/(
         4 $CellContext`a)), {$CellContext`a, 1, 8}], 
      "Specifications" :> {{$CellContext`o$$, 0, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {125., 130.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7092756042790947`*^9, 3.709275639614751*^9}, {
   3.70927577070595*^9, 3.709275779838236*^9}, 3.709275930902856*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "p"}], "]"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "k"}], "]"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "m"}], "]"}], 
      "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "m", ",", "p"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709276403858886*^9, 3.709276415009863*^9}, {
  3.709279180896107*^9, 3.709279197751297*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"2", " ", "a"}], "+", 
        RowBox[{"2", " ", "o"}]}], ")"}]}]}], ",", 
    RowBox[{"p", "\[Rule]", 
     FractionBox["1", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7092764168538556`*^9, 3.709279215494134*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], "-", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "a"], "*", 
             RowBox[{"(", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], 
          "2"]}], ")"}]}], "+", 
      RowBox[{"o", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], "-", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "a"], "*", 
             RowBox[{"(", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], 
          "2"]}], ")"}]}], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "2"], ")"}], "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "8"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.709279146329723*^9, {3.7092792482812667`*^9, 3.709279320522163*^9}, 
   3.7092794064662423`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`o$$ = 0.5700000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`o$$], 0, 5}}, Typeset`size$$ = {288., {86., 88.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`o$140583$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`o$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`o$$, $CellContext`o$140583$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1/2) (
          1 - ((1 + $CellContext`a)/$CellContext`a - ((
             1/$CellContext`a) ((1 + $CellContext`a)^2/$CellContext`a))^
           Rational[1, 2])/2) + $CellContext`o$$ (
          1 - ((1 + $CellContext`a)/$CellContext`a - ((
             1/$CellContext`a) ((1 + $CellContext`a)^2/$CellContext`a))^
           Rational[1, 2])/2) - (1/2)^2, {$CellContext`a, 1, 8}], 
      "Specifications" :> {{$CellContext`o$$, 0, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {123., 128.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.709279286506479*^9, 3.7092793213156033`*^9}, 
   3.709279409443755*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], "-", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "a"], "*", 
             RowBox[{"(", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], 
          "2"]}], ")"}]}], "+", 
      RowBox[{"o", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], "-", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "a"], "*", 
             RowBox[{"(", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], 
          "2"]}], ")"}]}], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "2"], ")"}], "2"]}], ",", "a"}], "]"}], "\[Equal]", 
   " ", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7092794437610064`*^9, 3.709279483147061*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], "2"]}], 
     ")"}]}], "+", 
   RowBox[{"o", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], ")"}]}]]}], "2"]}], 
     ")"}]}], "-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", "2"], ")"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.709280695977215*^9, 3.709280699038534*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "-", 
   RowBox[{"2", " ", "o"}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "a"}], ")"}], "2"], 
        SuperscriptBox["a", "2"]]], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "a"}], ")"}], "2"], 
           SuperscriptBox["a", "2"]]]}], ")"}], " ", "o"}]}], ")"}]}]}], 
  RowBox[{"4", " ", "a"}]]], "Output",
 CellChangeTimes->{3.709280700002401*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "p"}], "]"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "k"}], "]"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"m", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["1", "a"], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "k"}], "-", 
                  RowBox[{"4", " ", "p"}]}], ")"}]}]}], 
              SuperscriptBox["a", "2"]]]}], ")"}]}]}], ",", "m"}], "]"}], 
      "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "m", ",", "p"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"2", " ", "a"}], "+", 
        RowBox[{"2", " ", "o"}]}], ")"}]}]}], ",", 
    RowBox[{"p", "\[Rule]", 
     FractionBox["1", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.709380899046875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"]}], ",", "p"}], "]"}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{"k", "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "p"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7093809247883453`*^9, 3.7093810144422894`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", "0"}], ",", 
     RowBox[{"p", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", "a"}], "+", 
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"3", " ", "a", " ", "o"}], "-", 
        SqrtBox[
         RowBox[{"1", "-", "a", "-", 
          SuperscriptBox["a", "3"], "+", 
          SuperscriptBox["a", "4"], "+", 
          RowBox[{"3", " ", "a", " ", "o"}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["a", "2"], " ", "o"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
       RowBox[{"9", " ", "a"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", "0"}], ",", 
     RowBox[{"p", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", "a"}], "+", 
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"3", " ", "a", " ", "o"}], "+", 
        SqrtBox[
         RowBox[{"1", "-", "a", "-", 
          SuperscriptBox["a", "3"], "+", 
          SuperscriptBox["a", "4"], "+", 
          RowBox[{"3", " ", "a", " ", "o"}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["a", "2"], " ", "o"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
       RowBox[{"9", " ", "a"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.709380938050975*^9, 3.709381015844339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"4", " ", "a"}], "+", 
   SuperscriptBox["a", "2"], "-", 
   RowBox[{"3", " ", "a", " ", "o"}], "+", 
   SqrtBox[
    RowBox[{"1", "-", "a", "-", 
     SuperscriptBox["a", "3"], "+", 
     SuperscriptBox["a", "4"], "+", 
     RowBox[{"3", " ", "a", " ", "o"}], "-", 
     RowBox[{"6", " ", 
      SuperscriptBox["a", "2"], " ", "o"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
  RowBox[{"9", " ", "a"}]]], "Input",
 CellChangeTimes->{3.709381052443759*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"4", " ", "a"}], "+", 
   SuperscriptBox["a", "2"], "-", 
   RowBox[{"3", " ", "a", " ", "o"}], "+", 
   SqrtBox[
    RowBox[{"1", "-", "a", "-", 
     SuperscriptBox["a", "3"], "+", 
     SuperscriptBox["a", "4"], "+", 
     RowBox[{"3", " ", "a", " ", "o"}], "-", 
     RowBox[{"6", " ", 
      SuperscriptBox["a", "2"], " ", "o"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
  RowBox[{"9", " ", "a"}]]], "Output",
 CellChangeTimes->{{3.7093810365791063`*^9, 3.709381052850591*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"4", " ", "a"}], "+", 
         SuperscriptBox["a", "2"], "-", 
         RowBox[{"3", " ", "a", " ", "o"}], "+", 
         SqrtBox[
          RowBox[{"1", "-", "a", "-", 
           SuperscriptBox["a", "3"], "+", 
           SuperscriptBox["a", "4"], "+", 
           RowBox[{"3", " ", "a", " ", "o"}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["a", "2"], " ", "o"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
        RowBox[{"9", " ", "a"}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "*", 
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}], "*", 
          SqrtBox[
           RowBox[{"1", "-", "r"}]]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], "*", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}], ")"}], "2"]}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}], "*", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}]}], "+", "r"}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}], "*", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"o", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7093811114870396`*^9, 3.709381174680207*^9}, {
  3.7093812260303187`*^9, 3.709381274869753*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r$$], 0, 1}}, Typeset`size$$ = {288., {118., 122.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`r$146238$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`r$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$146238$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot3D[{(1 + 
          4 $CellContext`a + $CellContext`a^2 - (
           3 $CellContext`a) $CellContext`o + (
            1 - $CellContext`a - $CellContext`a^3 + $CellContext`a^4 + (
              3 $CellContext`a) $CellContext`o - (
             6 $CellContext`a^2) $CellContext`o + (
              3 $CellContext`a^3) $CellContext`o)^Rational[1, 2])/(
         9 $CellContext`a), (-1 + (
            2 ($CellContext`a - 1)) (1 - $CellContext`r$$)^Rational[1, 2] + 
          2 (($CellContext`a - 1) (1 - $CellContext`r$$)^
              Rational[1, 2])^2 + ($CellContext`a (-1 + (
               2 ($CellContext`a - 1)) (1 - $CellContext`r$$)^
               Rational[1, 2])) (-1 + $CellContext`r$$) + $CellContext`r$$)/((
          2 ($CellContext`a - 1)) (1 - $CellContext`r$$)^
          Rational[1, 2])}, {$CellContext`a, 1, 8}, {$CellContext`o, 0, 8}], 
      "Specifications" :> {{$CellContext`r$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {156., 161.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7093811083188133`*^9, 3.7093811166162586`*^9}, 
   3.709381278980567*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"3", " ", "a", " ", "o"}], "+", 
      SqrtBox[
       RowBox[{"1", "-", "a", "-", 
        SuperscriptBox["a", "3"], "+", 
        SuperscriptBox["a", "4"], "+", 
        RowBox[{"3", " ", "a", " ", "o"}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["a", "2"], " ", "o"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
     RowBox[{"9", " ", "a"}]], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
            RowBox[{"4", "*", 
             FractionBox[
              RowBox[{"1", "+", 
               RowBox[{"4", " ", "a"}], "+", 
               SuperscriptBox["a", "2"], "-", 
               RowBox[{"3", " ", "a", " ", "o"}], "+", 
               SqrtBox[
                RowBox[{"1", "-", "a", "-", 
                 SuperscriptBox["a", "3"], "+", 
                 SuperscriptBox["a", "4"], "+", 
                 RowBox[{"3", " ", "a", " ", "o"}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["a", "2"], " ", "o"}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
              RowBox[{"9", " ", "a"}]]}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
   RowBox[{"o", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", "a"}], "a"], "-", 
        SqrtBox[
         RowBox[{
          FractionBox["1", "a"], "*", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
            RowBox[{"4", 
             FractionBox[
              RowBox[{"1", "+", 
               RowBox[{"4", " ", "a"}], "+", 
               SuperscriptBox["a", "2"], "-", 
               RowBox[{"3", " ", "a", " ", "o"}], "+", 
               SqrtBox[
                RowBox[{"1", "-", "a", "-", 
                 SuperscriptBox["a", "3"], "+", 
                 SuperscriptBox["a", "4"], "+", 
                 RowBox[{"3", " ", "a", " ", "o"}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["a", "2"], " ", "o"}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["a", "3"], " ", "o"}]}]]}], 
              RowBox[{"9", " ", "a"}]]}]}], ")"}]}]]}], "2"]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7093859655838757`*^9, 3.709386026076634*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["a", "2"], "+", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{"6", " ", "o"}]}], ")"}]}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a", "+", 
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"3", " ", "a", " ", "o"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SqrtBox[
         FractionBox[
          RowBox[{"5", "+", 
           RowBox[{"2", " ", "a"}], "+", 
           RowBox[{"5", " ", 
            SuperscriptBox["a", "2"]}], "+", 
           RowBox[{"12", " ", "a", " ", "o"}], "-", 
           RowBox[{"4", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "a", "+", 
                SuperscriptBox["a", "2"], "+", 
                RowBox[{"3", " ", "a", " ", "o"}]}], ")"}]}]]}]}], 
          SuperscriptBox["a", "2"]]]}], ")"}]}]}], ")"}]}], 
  RowBox[{"54", " ", 
   SuperscriptBox["a", "2"]}]]], "Output",
 CellChangeTimes->{3.709386026989277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"]}], ",", "p"}], "]"}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
         RowBox[{"o", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               RowBox[{
                FractionBox["1", "a"], "*", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                  RowBox[{"4", "p"}], "+", 
                  RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
         SuperscriptBox["k", "2"]}], ",", "k"}], "]"}], "\[Equal]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "p"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709460857939042*^9, 3.7094609010396156`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7094608756082325`*^9, 3.709461013898156*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], "-", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "a"], "*", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
               RowBox[{"4", "p"}], "+", 
               RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
      RowBox[{"o", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", "a"}], "a"], "-", 
           SqrtBox[
            RowBox[{
             FractionBox["1", "a"], "*", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
               RowBox[{"4", "p"}], "+", 
               RowBox[{"4", "k"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
      SuperscriptBox["k", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1.1", ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709462139439356*^9, 3.7094623182567625`*^9}, {
  3.7094623582400274`*^9, 3.709462361983673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", " ", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"4", " ", "p"}], "+", 
                 RowBox[{"4", " ", "k"}]}], "a"]]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"o", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"4", " ", "p"}], "+", 
                 RowBox[{"4", " ", "k"}]}], "a"]]}], ")"}]}]}], ")"}]}], "-", 
        SuperscriptBox["k", "2"]}], ",", 
       RowBox[{
        RowBox[{"p", " ", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"4", " ", "p"}], "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{"k", "+", ".1"}], ")"}]}]}], "a"]]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{"o", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "a"}], "a"], "-", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"4", " ", "p"}], "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{"k", "+", ".1"}], ")"}]}]}], "a"]]}], ")"}]}]}], 
          ")"}]}], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"k", "+", ".1"}], ")"}], "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1.1`", ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", ".9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709462355223895*^9, 3.709462401698748*^9}, {
  3.7094626716415715`*^9, 3.709462672056865*^9}, {3.70946272618713*^9, 
  3.7094627694657235`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 0.464, $CellContext`o$$ = 
    2., $CellContext`p$$ = 0.5750000000000001, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 0, 0.9}, {
      Hold[$CellContext`p$$], 0, 2}, {
      Hold[$CellContext`o$$], 0, 2}}, Typeset`size$$ = {288., {96., 99.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`k$290197$$ = 0, $CellContext`p$290198$$ = 
    0, $CellContext`o$290199$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 0, $CellContext`o$$ = 
        0, $CellContext`p$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$290197$$, 0], 
        Hold[$CellContext`p$$, $CellContext`p$290198$$, 0], 
        Hold[$CellContext`o$$, $CellContext`o$290199$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`p$$ (
           1 - (1/2) ((
              1 + $CellContext`a)/$CellContext`a - (((
                 1 + $CellContext`a)^2/$CellContext`a - 4 $CellContext`p$$ + 
              4 $CellContext`k$$)/$CellContext`a)^
            Rational[1, 2])) + $CellContext`o$$ (
           1 - (1/2) ((
              1 + $CellContext`a)/$CellContext`a - (((
                 1 + $CellContext`a)^2/$CellContext`a - 4 $CellContext`p$$ + 
              4 $CellContext`k$$)/$CellContext`a)^
            Rational[1, 2])) - $CellContext`k$$^2, $CellContext`p$$ (
           1 - (1/2) ((
              1 + $CellContext`a)/$CellContext`a - (((
                 1 + $CellContext`a)^2/$CellContext`a - 4 $CellContext`p$$ + 
              4 ($CellContext`k$$ + 0.1))/$CellContext`a)^
            Rational[1, 2])) + $CellContext`o$$ (
           1 - (1/2) ((
              1 + $CellContext`a)/$CellContext`a - (((
                 1 + $CellContext`a)^2/$CellContext`a - 4 $CellContext`p$$ + 
              4 ($CellContext`k$$ + 0.1))/$CellContext`a)^
            Rational[1, 2])) - ($CellContext`k$$ + 0.1)^2}, {$CellContext`a, 
         1.1, 4}, PlotRange -> {0, 3}], 
      "Specifications" :> {{$CellContext`k$$, 0, 0.9}, {$CellContext`p$$, 0, 
         2}, {$CellContext`o$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{331., {156., 161.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.70946236784982*^9, 3.7094624035350485`*^9, 
  3.709462672512189*^9, 3.7094627721796427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"p", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            FractionBox[
             RowBox[{"1", "+", "a"}], "a"], "-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "a"], "*", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                RowBox[{"4", "p"}], "+", 
                RowBox[{"4", "*", ".5"}]}], ")"}]}]]}], "2"]}], ")"}]}], "+", 
       RowBox[{"o", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            FractionBox[
             RowBox[{"1", "+", "a"}], "a"], "-", 
            SqrtBox[
             RowBox[{
              FractionBox["1", "a"], "*", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                RowBox[{"4", "p"}], "+", 
                RowBox[{"4", "*", ".5"}]}], ")"}]}]]}], "2"]}], ")"}]}], "-", 
       SuperscriptBox[".5", "2"]}], ",", "p"}], "]"}], "\[Equal]", "0"}], ",",
    "p"}], "]"}]], "Input",
 CellChangeTimes->{{3.709462886541485*^9, 3.7094629190854907`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", 
     RowBox[{"0.027777777777777776`", " ", 
      RowBox[{"(", 
       RowBox[{"28.`", "\[VeryThinSpace]", "+", 
        FractionBox["4.`", "a"], "+", 
        RowBox[{"4.`", " ", "a"}], "-", 
        RowBox[{"12.`", " ", "o"}], "-", 
        FractionBox[
         RowBox[{"1.`", " ", 
          SqrtBox[
           RowBox[{"16.`", "\[VeryThinSpace]", "+", 
            RowBox[{"8.`", " ", "a"}], "-", 
            RowBox[{"48.`", " ", 
             SuperscriptBox["a", "2"]}], "+", 
            RowBox[{"8.`", " ", 
             SuperscriptBox["a", "3"]}], "+", 
            RowBox[{"16.`", " ", 
             SuperscriptBox["a", "4"]}], "+", 
            RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
            RowBox[{"96.`", " ", 
             SuperscriptBox["a", "2"], " ", "o"}], "+", 
            RowBox[{"48.`", " ", 
             SuperscriptBox["a", "3"], " ", "o"}]}]]}], "a"]}], ")"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", 
     RowBox[{"0.027777777777777776`", " ", 
      RowBox[{"(", 
       RowBox[{"28.`", "\[VeryThinSpace]", "+", 
        FractionBox["4.`", "a"], "+", 
        RowBox[{"4.`", " ", "a"}], "-", 
        RowBox[{"12.`", " ", "o"}], "+", 
        FractionBox[
         SqrtBox[
          RowBox[{"16.`", "\[VeryThinSpace]", "+", 
           RowBox[{"8.`", " ", "a"}], "-", 
           RowBox[{"48.`", " ", 
            SuperscriptBox["a", "2"]}], "+", 
           RowBox[{"8.`", " ", 
            SuperscriptBox["a", "3"]}], "+", 
           RowBox[{"16.`", " ", 
            SuperscriptBox["a", "4"]}], "+", 
           RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
           RowBox[{"96.`", " ", 
            SuperscriptBox["a", "2"], " ", "o"}], "+", 
           RowBox[{"48.`", " ", 
            SuperscriptBox["a", "3"], " ", "o"}]}]], "a"]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.709462920710639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.027777777777777776`", " ", 
      RowBox[{"(", 
       RowBox[{"28.`", "\[VeryThinSpace]", "+", 
        FractionBox["4.`", "a"], "+", 
        RowBox[{"4.`", " ", "a"}], "-", 
        RowBox[{"12.`", " ", "o"}], "-", 
        FractionBox[
         RowBox[{"1.`", " ", 
          SqrtBox[
           RowBox[{"16.`", "\[VeryThinSpace]", "+", 
            RowBox[{"8.`", " ", "a"}], "-", 
            RowBox[{"48.`", " ", 
             SuperscriptBox["a", "2"]}], "+", 
            RowBox[{"8.`", " ", 
             SuperscriptBox["a", "3"]}], "+", 
            RowBox[{"16.`", " ", 
             SuperscriptBox["a", "4"]}], "+", 
            RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
            RowBox[{"96.`", " ", 
             SuperscriptBox["a", "2"], " ", "o"}], "+", 
            RowBox[{"48.`", " ", 
             SuperscriptBox["a", "3"], " ", "o"}]}]]}], "a"]}], ")"}]}], ",", 
     RowBox[{"0.027777777777777776`", " ", 
      RowBox[{"(", 
       RowBox[{"28.`", "\[VeryThinSpace]", "+", 
        FractionBox["4.`", "a"], "+", 
        RowBox[{"4.`", " ", "a"}], "-", 
        RowBox[{"12.`", " ", "o"}], "+", 
        FractionBox[
         SqrtBox[
          RowBox[{"16.`", "\[VeryThinSpace]", "+", 
           RowBox[{"8.`", " ", "a"}], "-", 
           RowBox[{"48.`", " ", 
            SuperscriptBox["a", "2"]}], "+", 
           RowBox[{"8.`", " ", 
            SuperscriptBox["a", "3"]}], "+", 
           RowBox[{"16.`", " ", 
            SuperscriptBox["a", "4"]}], "+", 
           RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
           RowBox[{"96.`", " ", 
            SuperscriptBox["a", "2"], " ", "o"}], "+", 
           RowBox[{"48.`", " ", 
            SuperscriptBox["a", "3"], " ", "o"}]}]], "a"]}], ")"}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "0", ",", "6"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.7"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709462939097637*^9, 3.709463050844631*^9}, {
  3.709463119365069*^9, 3.7094631198033786`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJy8vQVUHEvXsAsTSJAACYS4h7i7pzoOcXc7cYG4nhhxN+LuECFKQiBKiAAh
hnuCM2hgsEEyXM5U7yq6ir7f/63139vrXW9OnlOnp/rpPTXVu6QbzV0xboFC
R0fntZGOToXSP5tf2NNTRycTZentsPjmealf5erdzpWU/EHP7ryq/MIum/BF
r79MnXk3A/V/kfXbLiKP8AzT9CoRruno+6fmLlY2hYTfmzx9ebBuOpoeOHNv
hOtfwmOyu6yauS4Nrc3yaWPjoCMAv9b19CEL/TT0Uj3/jJWNgvAaE3r7d7yb
inS0hx7hHZfcuHhyRioaUunikghXfcLXtO6292GdVHTYtFuAq10lwsfqdXz1
Ny4F+Vv69XGwMiS8/bLXjnddUlDNeraOdhFGhAsn0/uPPZCCZllVqmLjUJlw
g8uFSYnzUtCt1jc2WdmYEn484GaF8wNSUFqnvnElJWaEj7cNbeVplYLA8+XB
UQvc7CJQyPKCf13tUoln4GeUZ9b9jU8mnoGnje6cUMFHSTwDb/11zqf8zCTi
GfjUdeef2w1JIp6Bn2gcu7jkVSLxDPy47sVBVjaJxDPwfnZzNzRTJhDPwJvv
6jOi8ukE4hl4jTqNfhWMSCCegUfvjfvH3ySBeAbeavid4uKgeOIZeCUfx5X9
bsUTz8A7rr1gf3VDPPFMrvfg7WnTR8cTz7pRn7e/KPV7pWXdWXYRicQz8D4W
HsrEpgnEM/DzI+p/ehIfRzwDn7Ylf6hOeizxDPxnjwvOtZrHEs/AG8++avhk
dwzxDDzd5MDDs8XRxDPwhpMe9b+0P5p4Bq55vtZ9oVU08Uzqv/lu45vnfxPP
wHXsLNKNSn4Rz8C/ZAc5rF33i3gm57Ha27luYRTxDPz0wdrdAw5GEc/AL03/
ODK8aRTxfOHQ6IU2Djloo82R/lY2scQz8KuT+xxwXRpNPAPPtdOYhJv+Ip6B
h176/XV4QgTxDPzl1n7F2c3CiWfgzzP9F158Hko8A29ZKerfN1tDiGfgcxZf
GFxvdTDxDDz/w+cX8w8EEc/AB+/deMzrdSDxDDxj6ryjHSoFEs/AxyoTrr2e
H0A8Az+tm2Y239+feAYuNGup6zHSn3gGPrDqwYKYQD/i2UXrtQhNC7Mf5loa
7+AZ+GB9/Z11FoQQz8C/PLt3btTsQOIZeJjepEk3SvyIZ+AFAUb7apv/JJ6B
x6nuOhlnfCWegTfps/OhY+cvxDPwm6OejtEN8yKegZ+e4lln0JdPxDNwS+O6
FhnqD8Qz8KDDb1bXneZJPAOf52G1cm2CB/EM3Gvj5JCwFu+IZ+Cr2jXd7fjh
NfEM3PTfoFupDi+J58TYk1MdrHSFyn1qmlvZ+BPPwJeOKDg1JduXeAae8bft
R+tVn4hn4F6/51qNG+FBPANv1d05MKiDG/EM/GijpMCEZk+IZ+BxK7+8mGfj
SDwDv1dlVfNFb84Sz8B1vJvMvvBzHfFMuHiAZ5aDZ5aDZ5aDZ5aDZ5aD5zXa
69YT2kWoXZrYeBLPwFf982FiE5unxDNwnV+V7+49fYJ4Jlw8wDPLwTPLwTPL
wTPLwTPLwTPLwTPLwTPLwTPLwTPLwTPLwTP+mwHh4Jnl4Jnl4Jnl4Jnl4Jnl
4Jnl+NDjOHhmOXhmOXhmOXhmOXhmOXhmOXhmOXg+oq2XMeHgmeXgmeXgmeXg
meXgmeXgmeX40OM4eGY5eGY5eGY5eGY5eGY5eGY5eGY5eK6t/RxTwsEzy8Ez
y8Ezy8Ezy8Ezy8Ezy8Ezy8Ezy8Ezy8Ezy8Ezy8Ezy8Ezy8Ezy8FzgPbzq3Ke
WQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6ea2k/
x5zzzHLwzHLwzHLwzHLwzHLwzHLwzHLwzHLwzHLwzHLwzHLwzHLwzHLwzHLw
PFt7vmqcZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aD
Z5aD59va/64655nl4Jnl4Jnl4Jnl4Jnl4Jnl4Jnl4Jnl4Jnl4Jnl4Jnl4Jnl
4Jnl4Jnl4Bn/+xqcZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aDZ5aD
Z5aDZ5aDZ5Yvv97wZoRrFgqqbtTppZ0v+jKxycL49DTynAj8l+ag4X/5T+tH
K9o5WJkJwCdXzQ+9OjSJPG8Cn6c3ds7BbkkIzo//O/q5cH6Ww/nluFz9Sf52
WMtN5wb9IfUE3v+0i+PQzimkPnJ+2M/9Um98hl1EJhrsPu/LG7tX6E5Qjv3x
dRmo9qpgAxsHMwH4vJBGfjufKRGUx/+engfKsxw8wHmGFoWOsYug54f6/2tu
tjKtdQo5v1z92fNDeThPZ5uHOs6X/5D7BZ/bxP9zVVdnJbnvcvUvP/7h+Yv+
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
/Y1qQtwmnybnXJ8w/Y1SvjXf/lTd90x/o5rQ6qt7zb7dfZj+RjXhtNvGUXFn
fzL9jWpCE9u+KYW7A4lnfH00DwyeWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6eWQ6e
WQ6eWQ6ega/6iDaZNNlDPAO3b/XvoNX1XIhn4EcXLI8e4vSeeAZuunZKm59X
fYhn/GdNzjPLwTPLpfk6yqX5OsrBM8vBM8vBM8ul+TrKpfk6yqX5Osql+TrK
pfk6yqX5uppC3XkN07bMOM7k62oK9zalXj018Jn4O5IlPpf4ohafNb2fOmQw
z+O+Yrl08XtnJgBv+nnxce8XBeT8wGfZdq96pk4hOT9+PuLzsSyH8wN3C13b
9+7nV+Rzof5HGwedP730Djk//PcuRk9vNVmUyZTX0XHa9qR7rUOFTHn2PlYh
n1u37oRj7ePei3k18PAKnTb3K0FD/qCm2oLg4RVaed07Yvv4QlIexxG9LigP
fOL9qvUP6bkxnl+J/30GOT/897fUs8fPfE3PL1d/OP+9Hr0KrSq+Zsrr6PzN
7rH/VudM5n69QhMNHbab7ylkfkf4+sPn9tzpXXtWv8dkPluXk1Wat0mneW6P
zlOqrRhWUXaeW7v8e0fu3qTlYfzIvcH+9cfnUg7jRw3zbiZsbEE5jB91i4j4
eVxZQq4PxguejV2n3+cg5TC+Vs/gyNVHfyuQ80S1T4rJ6qGWnbd2qHXmVY8e
tDyMu83MDdGsOacgHMbd7pb0aFrNgnJ86AmXVi1xbHKDeoBxtxVdrter359y
GDf8NK7pjxN9KxIO4x2jDn2N1D7PigeMJ9ZbbRjnk0frbzirMKLDhErC7x11
l+3Not58k089va40EEIP1hn8xJny7C3L1u21NxIu3XDI/7Cc8uq/2tkvqFNZ
mDwprqdvN8qXufRsGeZmIqxVeboVVaBcvSsJHZ5iJmgM/ZpOuk/9z24wyGVJ
QAHSG57Y5mhdWs/+Zr/j15wvRlPbDD8Us5Z6PjdznO/ddSWoie3+K3PiqM9N
rS+PnNtJV8ic1Ovix/mUT5+8zzz6iUJoeS10rGEe9bn+zORJ+j30BH+zgRUv
n6K854ywTp4f9IWvh6ukze5H+bzwI+Ef+qnQo47+3yr7Uf87es2/6nItBwm7
Vr8b/ImOwzyaEmE1p0U+inFwWdX7N70u+J3a/uNMcLwZHW/BBz8P8F2TsaeP
eufKPkfX25wYu70KHZ+B37Wbb7c3265Pn+92PDiCbvsUyT736UakvbycRdsV
+L3bfL3W8tWpdDzHs+bEqveL5J9Tuj6NPF4tgp//sy+oc4O73rT/XPtY2ude
TeT71Zetd+Vlu1gQ/iThyd3IyZVk+4Gt2759oXuFcvjdrNXLpXjAXkvCO3f1
3zj7jJFsv2Xdwr/3ntpRDr+n8ftmjPceT9u9UcV3NOkRJuLfaXtbQfv/mQg/
l9L7eKnzsSde09TIY0uj4Crp9H6NW5pZP8JCR1jvsnOglSP1nOa81mFvSAXh
Ru0xNjlPqZ9eg24YB+2tJOwM/jxh0X16vUcKbk3/0sJYWPTYvPuOM/z8BLbd
k/s+yrWfct9ruXZYrn2Qa8/l2hm53wW59krud0eu3ZP7PZJrB+TaZ7n2BB98
Oy/XLsn9Xsi1b3K/O3LtpNzvl1x7K/f7KNduy/1uyrWHcr9Tcu3q//Z3UK7d
xgff3sp9f+Xa7f9t+yzXDvzfarfl2pP/W+25XLuEj///23m59vD/Vvsv167+
b38X8EHXD25e5u1crTqMG9J1mpNUZo82Z6cTDuUHr+o/WVEF8sAFpHyfWq87
uQ1OJxzKz2nZclpxf6XIi0n5tbvn5px/lUY4lG/7wuLD04uQfy4h5evsjHjT
f3ga4WRd5K3eM3abQ3ldMs9nd32P+nUyUgmH8pVrPr1ufVUcv7On60bd4g0q
X7maSjiUT5z07pBeXyhP143qXJzewrdJKuFk/WOB6viKq5C/petJP7oZpCdn
pRAO5efe27RRM0ssb29Ayneu3qOtz6cUwqH8Mpv0djuawvnp+tP5Xlmrt15J
IRzKjz606kFSVrx4HmNS/lLje7NsNqcQDuWz6tffO/GDWF7HhJSvHd7f7uT0
FMKhfGHf1U+rn4fz0/WtyMDx3sd+KYRD+XsvDxecWQ3np+sr0ZadP8/OSCDx
Btxu4896JV3iSVwB7zncOCbWJo7ED/AF+R91TA7GkjgB/i1z05pOKTEkHoDX
uFHt+b25MeS+A59vHtO/ZkY0ub/Ab8feXZLeIZrcR+C1PoW72H36Te4X8HHm
s/9W6Pmb3BfgoXtWv0IvfxH/5PxORks7D/1FPAOfma3KsPkVRXwCL9rStFqX
bVHEJ6wHjPF/Pn23YzTxCfxCdSPVNo9fxCfwjlfze8c8iyQ+gXuh9tkNKkYQ
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
bFe830vFo5N3jPWF/nwJ6qM9z0fUpKKLZvk7eM7VFYpd8X4jK7wWdxr6CPIM
CpHfR7Xs58WcugjPs/pCkZhv7Beh/tftMs1H1RPr+W14rblTDtG8U1+xngcT
bGa0XZ9HvqevxHqaD43rcW5WPvmeFlvjem6KfOeoHKQm8bZZrOfMd+qkOS0L
SFyt0D4QJqM5Dk29vVskE2/YpxI1Smz+sWh6KvF2RhufiehYp4bJxpvTiTfs
OR7VmHO6fquDf4i319r2MxYdrq23tT3JH+oKI7XXFYMGW07qkv8+i3h7qS3/
C4VbNp84zJ3m95aJ9azqqbmq+UDzPMXiPK61R6LvqNxpnuewWM8TlzsqHjjn
EG91xXo6jCw6f/pSLvHmLNZz4KDkP4qDecRbX7Geim2uz/quo/m0K2I9O3xO
27NrFs2b4fXB2ejfhNklNi9pngev01WhBpbFro1NkohP7FmFHturs49bJxOf
I7Sfm4UyE2ptmLcqlfjE+65mop/v2u6qfiid+Hwp7rNjPrRJh8Hn/hCfw7Xn
SUcrv4U7bPiWSXzaivUc3veo6ZEYmud5JtazOuq/pPlvmucpFudxFQWrTzQN
o3mewWI98wf4PM/7kU18HhHr2TS7Xkb+hxzi855YzxXWt1M3PM8lPvuK9dzz
MeKd+y2aN8P79BSi49rz0fWJOG4L0N7BvyM6uMcSn+7a86vR6z6VV78xpfP3
sGc1MlPt9eoymq4Xxp7zkVPJ4/q7tyUTn3jfqTw0xfCa24Uy63zxeu5cZL9z
1F63Z+nEZxOxnu7ea99NyqR5nmViPS/VPx7tVUDzPC5iPa9aLVnk+JfmeYrF
eVw5Ll06JhfSPM8gsZ6f5ucFmkHeu9TnYbGejdUGr5anZROfQWI9z7UpNB0V
k8PEp47gae/Sx+0+XZ94UnseHcHW78eQsZ6RxOdKbfkStNNaFxn/oPP3cLxp
kNuysNZ7m8YRn3gfAg369+375jmL6XxIHId/UZXFyuWnLyURn/hzi9HMyPcz
kjyTiU87sZ6Lras17WBO10GfEOt5J7vGMZ2WacTnUrGeB63d8vt2zyA+n4r1
9Ptg+TmrfibxWSTO4zKc/nFlbH2aNxso1jPzU/O4L3Vo3uywWM/WI7c0Uluy
eTM9odp/aZ5ddH0i9lxBsOs25/gO40DiE19vBeHwi67JlSzDiE/cPiiEp8GB
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
lvEG/57uM89yqTfKpd4ol3qjXOqNcqk3fWFcyp1mY9rdZzzQfprUA+VSD5RL
PbD9PT2OS+ONcqk3yqXeKJd6o1zqjXKpN8ql3vh94PHfaP9TGm+US+ONcqln
yqWeKZd6plzqme0P63Fc6plyqWfKpZ4pl3qmXOqZcqlnyqWeKZd6pv12qWfK
pZ4pl3qmXOqZcqlnyqWe2ecIPY5LPVMu9Uy51DPlUs+USz1TLvVMudQz5RLP
ZcZlJJ7LcInnMlziuQyXeC7DJZ7LcIlnbpxIj+MSz2W4xHMZLvFchks8l+ES
z2W4xHMZLvFchkvjmY7XSOOZcmk8Uy6NZ8ql8Uy5NJ4pl8Yz/z4FlkvjmXJp
PFMujWfKpfFMuTSeKZfGM+XSeKZcGs/0eVwaz5RL45lyaTxTLo1nyqXxTLk0
ntn8gB7HpfFMuTSeKZfGM+XSeKZcGs+US+OZcmk8Uy6NZ5qvkMYz5dJ4plwa
z5RL45lyaTxTLo1nNq+ix3FpPFMujWfKpfFMuTSeKZfGM+XSeKZcGs+US+OZ
5n+kcUu5NG4pl8Yt5dK4pVwat/x7PFkujVvKpXFLuTRuKZfGLeXSuKVcGrf8
+6fKrz/Nj7mL+zHi/SBoHmx9B6OlZnuSxf2RCwif7X9i17O7SuSk/VyaB7Oa
HtIw4m8SLj+d5sEatM3Z2npNEtLup2CuIDzyjtOOGzpJeH8cnwqEH03v2t36
WqK4/wvNd3V9MN/7Z8VEcd8HA8LdXrxqfM47QdyPg+a7Zm2tpHx6IgHpafeV
oPmubxlTGsXMSUDDtPt90HzXqsObPrbomiDuW2FG+Px/l/nZmiQgPF+N5rX0
xX0X8X5GBYRf+auzSXd+PKqj9VZMeIzFjc0nzschvE8EzWvt/WqytWFurOhZ
l/AbcasSVtnGYm8OFQgvLP5y8K06Rty3xYDwKOXqsFhVtLj/CM1TdbINOGf/
KFrcR4PmqQa0qFJ32Jpo7Ie8N0eJrt1+UrtB32hxn44yearKGyvVrhwteoDr
VSFbcV9E7KGY8E9Go9rVOvhL9FBC+NcNoyMCTaOwh1twvSp0Nrjqgzr+EWL8
VCDcf/fQfR8/hovxQPNCAxMabrjwNkSMB2PCU7cZvjrYPkSMBxPC/YQ1pvMe
Bov7jNC8UN2cZal1ewaL1wX1VyNncR9CfF0lhCujLIb9HRUofl+g/mq02mqZ
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
w42FzDEDD5v0SGTizUC4tKaj7acZqQw3Fvy3tnpcYK5k4tBASFb7393eKp3h
xsKvV6039FAmM/HJjs/y48XSuDIV7PuO6GS7bjgTP6bCJr0t39s3cmHixFSI
Xbmrz6Rrnkw8mAomS144Dprly9x3U6HNkP1Hl6X5MffXVDhys7XNLpNg5j6a
Cg2Hjgpwrh7O3K/S8+ypmWRt/Iu5L6ZCVLVN9Q3yoxn/pkJcpeRWV6JjGc+m
wqPadiPGkfc+VyG8vdt3r+SriVKf3DgsPy4s+V6X4RLPZbjEZylX7VgzxmXk
NanPUm6dM+Nyc4OXUp+lfHGT9RF5zp+kPkv5XLuHSz7W+i71WcrXN89e7NUy
QOqzlDfXu+bp2SFE6rOUpw0fX9PdKkLqs5RH/RsZV8ngt9RnKXf7E9R03PIY
qc9SfrX74eia4+KY+GTHW/nxX2k7Sbk0bimXxi3l0riVH+fNO16pBfJ9wMSn
uVDl7dh31Q09mPg0F+qus/Aat8SbiU9z4XJh70NHR/5k4tNcWNx9hsWwcYFM
fJoLuR7zKswYHMrEp7kwrc2BqsEtIpn4NBd2O9ufWaP5zcQnO67Kj/NK45Ny
aXxSLvFZhkvjlnJp3P7P47zSuLUQLhldOjf31lEmbi0E5yE79XWjnzFxayE0
Xxho8+GjJxO3FkL0+7qPNRlfmLi1EEaN+nCvcJMfE7cWguPrKQE6tkFM3FoI
XTsvaTN/dBgTt+y4Kj/OK41byqVxS7k0bimXxi3l0vb2fx7nlcYz5dK4tRTO
peevCd52k4lbSyGjV9+2+eNfMnFrKSy7UrtO3ZGfmLi1FPo9/PnAceQ3Jm4t
hQsNenZ1PevPxC3Nj0njs0w+TRKflEvjk3JpfFIujc//eTxXGp+US+OTcml8
Ui6Nw+pCXrUPF+fOfMjEYXXhW5fGmVcXvWPisLpgNquG/p3HXqI3mg9UTu9j
M2XMH7E/ScdnV+e1eN5gZ6bYb6T5QP+Tm60+TckS1w/TfKDp8Ly239uoxPVm
CsJ1xnlfe60R84RlxmcfhvUKzfoO94/mA2E/KLzeleYDb24YFzlsWa64bpOO
2xqOrjQipHse/l6XGbd12hBZbVeFfByHZcZtra4/vmz7XcwTlhm3dVPUyXU+
p8b7OJQZt+36bLVy41zY95OOz24zWTMor226uB8lHZ+NTOoypnJuhriOmub3
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
rshxfH/5fgW+v/w6F3x/jTmO7y+/zmWp1gOf58zXesjnON4ni89zVtV60HBc
+x50Hz7Piedt8vlMPG+Tz2fiOOHzmThO+HwmjhNjjuM44den4H3HaD+8rfie
ypKy/P9lfQrsh4/zbLRfcebs5R6fN9P93oHDfu94X1fa31iusTMbkKASn4tp
v2JR5V5mxpMSxPPTfsXX8R/9+k1NEvdFVRP+RNznHOcfaH9jre+6O6ZWWeJz
Pe1v7MndaORRkiU+79B+Bd43LkasD+1XPPZZ8HLgsDixPrRfcVjpZjpnkuit
pIjwKuJ+4Pi5nvY3ZuxWtoh3zRCf62l/42JHU9eK/TJFP7S/0aTatmmu9bLE
PAztV9TePGDUcr8wcT9T2q94Jr43DV8H7VeEb5z81nxqDML7C9N+RYOr8ZVq
L41DeD6thvDN4j7bON9I+xt512L+RNRMFfM/FQkXqrlYnkpNE/0bEN4guc+Y
qS8yRP90vtMcZW21Qz/I39J+S+jfIWF/h/iJ10v7LWdP3pv4tHaweL35hLey
auwTdTNcvN4iwqctW3r6Qe4v8Xo1hJ9b/77ykqN0v2vgG8X9rvFzDe0XeXQJ
335qBcxvof2i5kvMX98ZDfNbaL/Irmjj+DvNYX4L7Relj7HKcVXD/BbaL/Ju
svK6x4cM6XNuaX9g1b9Lq4VMei/6oc93FRdevZiwx1f0Q/tLTmFnrBN2+Yt+
aH/JuXDCMrVeiOiH9pd8HlWsWnmiOG+kTH8p8te67AXbfov5B9pf0r+SoRj+
WvRTpr90xrax45G74vyNMv0lv8hbm64eEedplOkvTRjbs8e3JcnS57hSbteh
8EITJM67KNNf2rLI4ME203TRD53nUyzO83nBzOd5Ic7ncWDm7VwX5+3YMfNz
/MX5Oew8nM3iPBx2vk2SON8GP8/y82pWyMyfiZKZJzNcZj6M3LwXufktcvNY
mknaZ9oPlLbDpsL+fYE1UwyDxPcW8P3DZmXbYZaX6R+atpn7e3DxF/E+0v7h
3RlX2re75Sfmi/h+4DBJe2suPX85/UA3SbtqLrTsffy+9ckX4vXSfmBHfYMl
lQd9FP3QfqDSrfX38Ye/ipzv7y0v266W4cPKtqvc+Dvf3xtWtv0sw93Ktp+l
PLzlupddz98Svxe0vxfXOE1Xr9Mr0Sft7+1ZvnlNv6hPYpzw/bqTkvaTHXfm
+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

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlmd0FlUQhpdv2SVDR7pKCU3FQpUOoYYUaujFRpUaOtjrsUvvCAmQ0KSD
Iood2287x3YoNhSkSPSg4DO+++PmPpnv7t3ZmffO3PQx+XnTU0EQXGaEjE+j
IKjCXBAHwT9wB/hNuDSjO/wuc8ToAb/HHDN6wu8zh4xu8DvMZ3n2VvhV+F+4
I/wWfAFuAR+C/4RbwYfh6oxB8CfM7XHkOPwH8znGSfg88yXWt4ZfZ00JfDv8
BnwRbgm/Bpdn5MAfMF/B3gl+G/4dvhk+CE9jr/bwej58eqhv3ADnh/KzAL4P
vsO/HV4Aj4aPwPfAt8BL4MuR9jnCnneH2n8x9rvgpvAi+ATzmUDfc28o/1dj
nxjq21fBE0L5vxK+E74JXgiPDxWrFXA53pENH2WuwMiFP2SuxsiDP2b+BX9q
wePTiB1cH54In4PrwRPg05H238/6/qZ3eL5+xl4T+zjW9DN9p8ftOPbK2Mdi
H4p9DvaPsK+HJ8P52F+CJ8HT4UJ4BjwLHg7PC5XTYfDcUH4eTlM+O2Dra4qd
a2OAKRausYGmGLnGSnj/WUYlxm+RYnsA+5lIuXjFdZWsOc2o6s8H8jOHfUaG
0kkWPDyU3o7xLG4EY/iTjX1EKF3lmfLkeh5i0oTHeT7zYH8XuRhs0o1rrI8p
335Gck35cz0MMunM87UBngLPSFP8/IwUpRQPP1PF8L6yQbAcnxqzdif8oucP
3gUvhNPh3fAiuAGcGSq/T/LsfuwrsDfBvhdeBjeCK6fk88VS+MW7j2I/yO9L
ImlpJ793DaWZ+SnlpQ78A78vjXSOdmGvmtJZuMw+KyPF9gC2K7G08Rm2Pey7
mLkh7x3LnhnYN7JmNNwWXuu+wM3gpfAQuDm8DL7KPnXhl5lXRdLzQex9WXMD
/Dw8Du4Kb4L7wTfCL7hfcDt4HTwG7gIXwlPhLHhHSrHvDW9PSae94K0p6TcT
3gaPgtvAa+BLyZnlc//Xcl/m3dhnwv3gPXAXGHeDWXAnuDTshdTrVUX4cfh8
so/XgM7YI98vJZ2eClTXOmD3+juZPz3gcvCDcE+4PPwwPBseAO9LScuN4efg
bjDhDhbAGXAZeA7cHSYdwf1wL7gC/CjcMVSNn5qSX78mdal3qJo/BXsOXA2e
CefC1eHZcB+4BjwX7g/Xhh+AZ8H94b1wNlwVzocHwNfCD8ED4evgR+A8+Hr4
MTgLvgaeBg8Kpb0nUqoZ3l+2wEPhdPiplM5oI/hZeBjcAH46pTPdEH4GXmfS
yjS0XJLE1vvIGpM+pmC/GkmHU+E2pnhtTXpKE6/T2FuZclyEvbUpvsWxNF6G
TQu9/5hysAV7hilee+G2plxui3VeY9YXePL5/7ZAPvgZLYt9M/NfkXQ+CXup
WOfC/W9uytlG74mmXO7wPUw90nt0D1N8va+1NOlsM9zVlLN9cAuTRjd5rzbl
wGtmb1McvW+2M2luO9zLlA/v3R1N+tgJZ5rycSjp19735+FnmVhnx3uB163S
fNd65oqxzuNs7F9F0pL79nmkvBd6PE01yOvw15E05jH/MpIO3ecTkTTgPnwR
SWMek+8jacl9/inSufD4fxdJbx7/U5G0sTtWXXON7Uj6nefa49PNpGnvid9G
0q3r4WQkje2KVYMjvmsD85Kk/npPrMRvnQP1u8qx6t4cuEqsejUX/ibSeXGd
pMWqh94L/O7kdxjvm8eS/usas1g1bSb2TqZz4j78HanuTcbexXRW9/j7TWfP
v/HHSGfE7ZmsGwXnuuZL6X5VKak/F5J+GiQ9wnvFUlPN9TvAMMZW9hqNbW1S
0/28+LMlSf0Kk77g/aFprDtSH9bUiFVjvX8tM9Vrv5OsMNV9v5PUjlWfvV9s
NtU4j1WtWLXae9xyU8/we0uRqQe73rx2XUrqV7HpfjY/sZ9P6rbfA84mNbZm
rDrvPXSL6W63IE09szy+FzNvNNV312p3U/3yO8ZqU4/xmBeY+ornZZWpt/mZ
9b5djn2KmEeaemc29k2m+uh6GGHqu1lwM1Pdd/3Xi9VTvF+PMvXXHNbU9btF
oO+qE6sHuc/psXqB9/qVpr7l9ap+rDrs94f/AE+FW0Q=
          "]], Polygon3DBox[CompressedData["
1:eJxFl3ewH1UZhvfewy6/S5MEpCNJAAVUSKjpPYH0QqgJllBDSEJowXEcR8Wu
CAmhh+Sm3AAJ6aAoYMXyt31so7QR1AEsgAr6PLzrOJOde57z7Z7f7jnf975f
Bi5cNndpd1VVr3DtxfVUXVXvYOJcxo/y99imqt7qqqr9GU/tVNU0rvnEnoB3
71NVv+f+AfDkUlW391TV9cRHw73Ee+FTuBYz7sfcj7n3ZHgRfCD8FmuPgj8L
D4KfJT4YXgL3h38Kj4E/Dx8HPw9fzfonMP4yc3cTG8K1jPFBzP2M+HTiCxg/
ydwe3u8GeAy8Hl7PvTfCY+EN8Ab4LK6PMT6Cud/w/I+afPse5i4kNprrc+4D
c88RHwl/Bh4IPwMvYr33MP4Sc3cRWwqfAd8D3w8P53qVvXmWuS2svZz4UMb3
E1/bxj/F+GjmHic2DP4EfBT8O9ZfxtyZjO9lbg2x0/0Gxocw98s63/g9/vbv
zrfv4TfeS+wr8ATuPYPrI4wPY+5X3DcU/jh8JPxbeAnPDGZ8B3P3ETuVaznj
g5n7OfHFxE9mvJK5e4ht4/ceZnwOc4fzWzcRn8h4M3MbiQ/gmgQ/CG/l3hHw
p7uTI+bKaeYI/E74F/B1PD+K8Trm1hEbyDUZfgh+hOfPhD/K+HDmfs39P+A3
5zDexdz5PbnHe89m7rAmv+lvu8ah8KCexHxn3/1lzuIP8ItcrzH+IffMZbyb
+AXcew3vcwq8Cr4XvhY+C74PfgC+vJO9dE9XwS/WyceZJfxt1hsPbyQ+G/4O
PAHeBM+Bv9tkv/rgufD34WnwI/B58NPwVHgrPA/+JjwSXgvPhJ+Eh8NrPG/4
KXgE/AA8A/4WPK7N71nwcVwz4R3wDr7/eHgWvBPeae5w/xRz05rvSb27H3fx
XQvc3ya1ac6b+9ua1II1a+1ubVILnrFnfXD7vTeV1M+g9rzuZL35PamBd1XJ
eXP/cfg04+YU/DX4VHi1Zwp/FR7S5udk+Ij2fW9nvYvgI9v9WglfDH8dPt33
5/4p8Dea1OPd6hf8GPx+n4cnwY/C74NvgyfCu+ATW30ZB++GT4JvhcfDT8DD
2vqdBu+Aj6+iUWrVTvjd8BfgsT3R0Hlw1R1t3d5Ey9QUteWgNl9uLMk/NVVt
VcNOci3mZrf5vovYVZ2s/0X4TmJ1+71XleTTXu1+XlmSb+ub1LIaqVb2NtFK
NVatvYz1DoVXwCvh/dp8WlaSj/u2+ba0JB/3ab9/SUm+/LGO/s0oeX5tE61X
49X6DU1qXU1RW9Qg62cs998GX8HvHwPfQvwO+MpOtMJ8Wg1f2olXuJ7+sq6J
N+gpesu/6+jdh0ry/9ieaJP5vJ39WsHz0+Ft8CZiN8Mz4O1wH/xgEy3UA/SC
0ubfFSX16xl0EXu6ztn0b+vrhhL96W7z8/KSelvI+h3zvzvf19dEu9QLtfih
JtquBqvF/6qTXx8sqed/1sm/D5Tk1+Ym3qQGqoUbm2i/GqqWPtzEO/QMvWNT
k/PUI/SKN+vk94dL9MMas9b8xr/VObMVrT94lmq4Wq6GH9LEs+0Phpfst56t
fg4rOV892FrxnX13PUKvUEP/U8fDubUaUZJvaoracoB624ln6V3usXutRvQR
f7Mr2rGq9S/3UK21/+in1qkHnfQk9iZ9rb64/uY6PYtaZo1YK+bo63V6BPuc
kSX1MIXne+wNWv3wm63XFSV7cXSTWry5JH8OaJI/15b4lZ6v9+sBb7DGgU30
dnlJ/9Ovid5eV9J/mCNq89gquWON6g1qgLWrp+/NeEzJ+Zlv1v/1Jf3K6tZP
1dxX69TMLa2/vlzHs/QuPb2riQbby6jparM5rTeZw+a6PYhaZk1b229rUHc0
W20yh81l/rxdu+a8WuQ7+W5qwJa2H/B5NUMvU5PVEjVDL1Oz1RI1u5d1XuuK
lrvn7v3rXdFyPVavtUfqadJD2UvZA+3dpAeyF9KTO032ZEP7Pb6PGqFWqEH2
G/Y0eseQdr/1AL1AzfxHnTNVGzxTz/onzD1TJcfNdf3K3u0587nJmdur2OOa
C/Yw/KlGl9SjZ27va89pLqgxao05cUyTHFjfnr+5YU+DrFTjS+rbnot/1ajy
f71078eV6Ic94f7wpJJ6t8ez11ND/lTHo25t6/GlOj3efownluiNHqfXqZl/
rnOP+jK75Fk9UW9UM/5Sp4b91oUlte2eurdnl/j93+v42UUlfvvXOv3CBSX+
7Zl6th1zpJOcNXfPL/Fze2j1/JyS/mJcqycn/K/e2/wc2uqL/wfQT6aV+K09
uf42tcRP1dA1bT6rrS/U0cvpJX6sBtpL6XFqo55h76TH6SWT23wZ3NaX/yfR
L6eU9Duuobfr+a7tN9tr6Lnuhd+8us0398Iz0V/mlJyVmmv/dGGJFluj5sql
JbWrRpnr80u0yxz1ty4uyV33RC2cVbJXvqPvel6JNqgBau+8Em2wZtTyRSW1
ZM3YG19dUkvWmP3x4pLa8/9A+8ITSvzwk3zLS1Vq4JWSHL5EPyvJbc/Us+1t
+zE1QC24pkRb1ERrdUGJVh5F/I2uaK7aq6fqrWq62m6Ps6vVH/XfntXeVQ0d
0MTTt7R6on5Y09bSZSW1bo6YK5eUeJM9kb22Pam9kjmtX55bkuv2wDtbPRvY
pCb057kltfJfwmarmA==
          "]], Polygon3DBox[CompressedData["
1:eJwt1WdwVUUYBuAlySXcJMQCCNI0ieCMdcY6UpVOaBrsFDU0SUgHE7uODnaq
gGUkAUMdCKCgomCvvx3r2EYBdWwoAhYQn51zf3y553vOu3dz9uwmReU1ZdVZ
IYSJKqVqO4RQmR3CBjhC36F9CBvVcHYPK2TfCNbIVbD1bDjLldmeF8Ju/RR9
ts+pMpv5KLkqfSe+x9hn2UBWy1yGT1md7By2kY1kaTf6pkNY5t4adaRdCEWs
D3tc36r+YaeyVjXI2Hpjc439LI5hg9lc5qvD56yF9WMVzEf4iK1nQzV3sAL2
FdvAhrG7WEf2NWv0JU1sF5vEestsUiNZJTuRfSe3jg1ht7F89iVbyy5jTcwS
hS/YajaAxcWP6/6JH6tYfzaH5bCPWZN5b81O1nUy6yVzM5vEnmQXssNy9ayW
tbGx7Di57uqwNcpli2S2mPxkdoi1ZwtZG+vGDrIUW8A2s1Lft9z186zM95XI
dFUH5HLYY+5tykv2QtwTv5v7D7Uzvkc1zfUquUHuHZPZaey17EF2GjvIXmM3
scXsbPYfqzJ2OlvNBrN2MrvVDWwhO5MdkXuFXc8eZn0za7CLTWUL2BnsX/Yq
u5EtYmexo6yZXcL2q7j3P2SjzbskPjsYw3rG/ZyVnItjnrnQ9Qr3Z8iNN+5R
/enu/cgqWTlrYQNZ3NSz2WT2FLsI/SVXwaawp9nF7G82ii2Oa8lKWQ9jp7Nx
co9knu0H96exEex+dgr7NpXs/XgG8thS/Vbvo1zuUrlG1jWz7+O5iecnPys5
O9vkZspdKbeEnRPfHy+WOypXkJWcu+fkquVmy61jw+KjybysrmMPsT7sUJyb
jWEN7CT2fdxvrJTVsS5sX5ybjWXzMr9ffLa3WRV7hvVj+fq55q1nW9l4djy7
hTWyHZn30oUVpZM9uzKV7M24R0vSyX5vSSV7Pe75NjXa2BpjOxu7172X2DXs
AVbC/mQN5qhjW9g4VihTnE7OSnMqOSfxvMyTa5DbJjdB7gT2rqphzWwA66h/
R1Wzlaw/K9C/Fc8weyJzfuOabldXsLtZT/aLuXawMnYv68V+jeeRXc7uZD3Y
z+xFdjWbz4rZgfju2AR2O+vOfmIvsInsPtab/cZmeY6r2FJ2LtvPXpebwZax
8+Lfcv0Hcf3Z2sw+iGv/XnxPrJUNYZ3078e1YWvYUNZZ/4aayZaz81mO/k01
i61gF8T/Pfr/AQqFx18=
          "]], 
         Polygon3DBox[{{2340, 1427, 1443, 507, 93, 1567}, {2336, 1421, 1437, 
          500, 84, 1558}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
cc7Z
          "]], Polygon3DBox[CompressedData["
1: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
572wiafqrXru+SXn5Ll5zvNLPFgv1tPPLXmmPlszynUlHq/X6+Fnl3i4Xu45
n1lSc6jlr7R66T1Ti//ePl81U+10jp5R8oycz7+r8uzMkOrt4+18NyOZlcxY
k0ueuXno91XmgplV7/lb60feM+emc9J76Rx2LjvHv1ySAcwCZuCFJTWCtcIv
q6zPjepkfTP/0SUZUe94q0p2/EGJfs+to7d3l+j7nDrrVw/X296u4u2uOdee
a+qKkkxntlvY+sXy1j+mtn6nZ+gdZqALSzKP2UdPubgkQ+7V+s0+JWvWtWtG
urQkA5oFzYDTSzKfc3NG649mQrOhmXBaSU1obdivsSU1qHP92Xb9WjOYNZ6v
kj+trZ6EX/D+sn0tn+ccd36wvSW/d4FaA9+mVnZTG1kjmf+sGawdzPAXmdf0
YO7/Q60/WYNZi1ljXKCWu4YZf7BKPt+snZ/O3xtLaiRrJWue5SXPRC/UI31W
49v8uaLNC0PYfrEnGUePsMaz1rPmOr0kE5lVjquTlcxMZuNldbKUGckssrRO
drKGs5Z4rtXjAWYczveBKvqlR+gV/TVryZp37as5O5ZozvZt3tmhpIawlrDG
2LVEsya0ecm5pUfqlXroNiUZ0Kz1jyrZUE/VW/XErUs8S+/Ss8aW1Cw7t3lp
l5KaZlKbh8yzep7ep+dtWuKRemV/jVnisXqtnjquxDP1Tj1zsxKP1Wv12K3M
Hk20Sg1Si+5rMn+cR9bqarBaPKLVc2sua69+jS55ZuafeXWepZlNrarrZDkz
m367Wp0sZ+a3Xh1Sxy/MlGa5D6pkTTOqWe/9KtnVjGg2X1UlO3oPvBcfVsn6
rknXZqdONrUmsp+xVh1/X1DSHxlaR+/NjOp9VSdLuuZcewPqZFU11n7Q2nW0
1xpBfR9Yp3Yw4y+A16yT/dUItWJQnaxpTTAfXqNOrWBNMQfu1qk1zNTWDl9U
ydpmXmuTz6pk4SUl/Y6RHL+23lGy1jauU98fUdKPWA9es5uMZdbqr9FLPEav
2aRO/2CZcxoeU6c/tLRkbY+q0++xBrAW+rxKbXBkSX9lRJ36dXHJ2t0AHtKN
JqvNw+r4qT0BewP9PRvGjipZq+vX8UNrfGv9/h6Az6aknzW8jn+r4Wr5hvBa
3fR87P309whKajbr6dXr1HJqitq1Sx2tcQ2vavOGa9vMbHY2M69RkpnNzmbm
gSWaZx7fv9VCM7TZzQy3esk1W7v7zL0X3uPpVc7Be+85mz18pl6Lmdvsbabv
lmio2nZAHW2152Hvo7/HUZJBzaJm/DVLMrnZ3Iw6qKRnaO+wvydYksnN5mb4
wSUZ26zd3wMp6ZlY++jJerP5Td1UP3dr8gzMJs5Jn43P8OAqc9hn6z2f0fqd
z2Jg60czW/9V0+29mPnUej3AWsWejN5gpjPbWX8+Add8nuqJhkxu4tmftHlP
L3+Sz8s98aS9GL+vpJ6wrrD+ur+kvlpSp/5Sz61njq1TX+n/+rM9mGNK/qf9
V/uwnos1mbWZ33mkpAayFrKetj/gxzx6Zp2xPZuciz55dzc1mbWZNVlfyW9Y
q9s39rftedn7co2ex9hvmuRFa1T1zd/3f51Vpzdhz8ZewqF1ejleg7WiHuW1
qT9qfamTBfR8vaWpkwXMCGarvjrZQb3Ti3rqZBMzhl7VWyd7WMPb+1lYp7a3
JreXtKBOrW5Pxiyye51ejT0gezPT6vSG9Di95d02b+tRru03qniXeq9Xz69T
6+txas+bVbzPnpO9qAPr9KL0RL3tnTbf66l60XttvjYz6pWfVsmS1jDWMtYw
N5R8zLI71xkbxz0+nKx8c5V63MxrVp1YJwuvUJ8Zn89ndpMei8/vnir13CZ8
lrR5/PKSnpLZb0qdXpM9dnvtauzJJXPS3oCZ0rmq5+vdn1RtFijx2o+reLc9
O3tf0+v08vQrvfajKl7+H3VqO2u8W+v0mOxtHVSn9+Sct/egp7oW9HC18PUq
3m6Pz6y8R53enz01s+dudXptaoza92QV7dGfzKKD62RbNVoteaaKdquJvfCj
VbTy3zluXm/qiZV17qdZfd86/Ss9xtrwr1W8Rw2r4MeqaJsapNY+UUWbzBxq
2ctVsoiZxSz7UpUsY+ZRy16skoXUfLXw6SpeYEbRO16rkl30ELXzqSreYuZR
W1+tkoXMcGaTF6pkOzVMLVunTm1hz9C5tV+dXqKa36M2VPGCm0qy/eQ67w/M
3GrBn6tkcTV4APzbKtqsBquFf6qizWYitfKPVbKSmUlv+kOVLKU/mLWn1um9
6lGrwb+u4l36m9l51zrvK6w5fTdlhrEW1dOtj+yZ6vV6hN7zlyreoaf7LscM
o9fr+b4b0rPNAmraF0j4w1W0Ts+pGftNFS/SwzpqZxVv8x2Dtcq6dfqxd+lR
zI9FfOawtjZpst7t+aon45rojz1s5789pjuqaLq9J9esa9eazN7aVk30yZ60
+rMNfHtPerCuhy2b6I01gvdr6yZ6ao9bfZnYpHdqz9R6wDXuWlfj7eX4Tsh6
0XcW58AfNMlDaoBaYO41/87ieh7gGic0qSfsiaqfepbe9Ysqedh3RAuqZBjf
HY1tsn7twbsefWd3dE+O8VjfGfnuyEx1ql7C/5jdm/9pn2C7JvWMPVT1eVET
jVAbvL9mwEOqZGaz4fgm3qGHqL+T4Pt70kO2/tkUvrEnPXP1zHdMvmsyY53F
97do0s+yh+7836mJX+mR1kuHNtEA1776+WETrbSHMbYbv9Xrr2n90s+17TtQ
x5yz1pNmNOey79h81+Y9vwx+tkl2MlOZrV5q36d4jV6rPWyf59l1etvW7Pbe
zGzW8i82yS5mFrOLmdh3X2Z+s/ILTbKOGcesc21Jr2WnOu9vXDOunbF1ejPW
BPaCrAGsFbbn+z/syTsX/XpMEz33HYb6uqrtt1lDmx8/bt+vWPOaR33n5bsv
e0aX8HufNbkX3hPzoO+R1FY19qE699R7a8/qSr29yf01U5kf1CDfZaoZatOu
jD/Sk56/9+f/AQrVW/E=
          "]], Polygon3DBox[CompressedData["
1:eJwt1meUVeUVBuDLDDAzl6HXAaYzFOlNQIYuTZoBBhi6I1UULBQRpFkAEdT0
CJi2VnSJaT8SXYGoKSqKYI1KQhI1GqwUC4hS8uzc82Ovdd7n7tO/8323tGbF
5OVZqVTqF6qOOpabSjW1MbV2KjWnVio1PSeV+li9IadUA9ZS/rd6Xr6UrfyU
J7+vXmL1VB19DeUDjveq3FS1Yk3ZP1kz56hic9kM9l/1slxf1WWN5H/pa65v
GpvHqtk76pCcrWqxevIf9b0mN1MFrAn7UL0un3d9+ay5fFy9whqqHNZYfk8d
kfNUbdZA/jzuT26iWrIS+SP1N/mi49VnLeRP1Vuxn2rECuTTcX/xnFRzViRX
ur417mMfO8COsIFsNXuU7WeHWX+2hO1lj7GnWD+2mO1h+9iT7B+sCZvCZrNp
bABbyh5iv2RPszRrwcayyWwWO6H+LufG/bE28jl9A/WtZ9vYLnYm3me8M1XE
Oshn4z3FM1bFrKP8ZTzDeE6qkLWXP1FvylnxrFkr+Qv1H7mFassq5KnOu9t5
17K72YPss3jv8TyjlxXLJ+Oe5XSMI9ZWPqWOyfnx3lmh/LZ6IcZFjFWWlt9V
L8Z4jOth+XF8dVC+4F1e1Job70w9x75hF1iOXM/1tXR9V/Ep9p3N8lkFm8Fq
2DJWxfaw7ewH7FH2JDsqt06eVYyNY+pZ+ZxznHeOuvEu9DW272Q+S18V+4CV
sWvZDWxxjHvWms1iC9k81pr1ZhVpz0/eqv7MjuvpqLol7+hP7F25XHVi5awF
627fUvtukDfGeXMy4z3G/Va/DdbTXg2zvZJt8tv39FSwoewWtpF9l3Vio9m6
ZAztYU+zd+SyuB5WysrZYH03sdvZt1k7NoTdzDaw77DmrBsrcX3r5dtVLstj
lfqu1DeBFbBerJ2+O+W7VHGebfa4WmxyO8r263vGfl959nn2HSRfjG+dtVdd
2eXypRircofk+fWTz8e3LpdEL+suD7f/dsd/gh1iI+RvYuzH+1YVrJtcxPvr
W8bWsHvZhRjn0aO6sL7yU/relkvj3KyM/YV9EO9MdWed4luNuSi+tXifrItc
qK+fc1zHVrMdLMszmMZ+xB5m+2I8s0XsEfYEO8Dm2/cgW8pWsXtYTzaD7WS7
2a9YL1bNdrE97NesN5vJ7mN72W9YQ9aRtfY+bpRvUk1YZ1bIVstrVCPWibVh
N8u3qK5sAtvseLsc72esGevKivXdJq9Tfdgsdr++h/T9lnVjE9kWdh/7OevC
xrNNbCf7KevMxrGN7F72E9aYXcbaOsdKeZW6jF3FNujboe/HMa7YAHY9u5Xt
jDnWM13IHmaPs/2so75R7Lb4jthulqdvAfudmmdM/oHV0Zcl99U3SN8oVpvV
Yn1YJRsZcxo7K/dXQ9gAlu140/U9yB5hj7EyfYPYjWw9e4DlsFw2kI1g41ld
lsOuYMPZOFbCrmA3sLXJGlDKKtkKto7dz1qxnqzcs9oi3xFrJWvFqvVdq29u
zK/sS/ny5N7iO8qObyS+K9WXDWavs7R9x7GpbFKss6weG8+q2MRYd1gJu4Yt
YwvZcVbKatj1bBFryrqwItd3q7xWfcjK2QJ9y/UtSea7mPe+8FsPv92dzoyt
GGOfJXPPnewN2/m2J9h3mn2vTu457v1MMvdsS2fmp5inPk/m1bvYZnlTrJHJ
M9vK3rRd3/ZEx5vueN/y+2usLhvNJrGx7FVWh41iE9mYWMtYGzabLWLzY81j
BWwmW8DmxDrL2rI5bDG7hr3Pitl8dh1bwN5jhWwuW8Jq2I54bnGvxmhVVmY+
OKqvob6rebW+KXEOdVjOUdmsvvyKvtr6RrIJbDR7izVgk9gMNpkdYZfkoWoM
G85eZtn6rmTjk2/hpdzMn9JhbGzMsex5dkbupwaz/smcH3P/2WQ93O4eDtk+
H2NPjdQ31O9fxViI/x+xJrHOcgN9HexTYJ/l8gr1V3Yi5twYv/p6sufYabmX
GsB6x9zkG1xp39/HWu1ZvRDrFlsVpu+gvkOxpiZjrCydGQ8xLrLY17HuqD6x
HrFn2Em5R9wf68FqsXOxTqjerDLmSeeoycrMN/+fd9LxJ8b92e4c18gH6nuW
nZJ7xtzBerGv1cdykWrHusov6rsQz1ONYkNijWJjXfMO9kO2N9ZBNobdk/zP
iTX+I9aOLWQr2NLkGcaz/CRZCza4vsOx3sb8pUbrG+b37/Nt8kz3Up2V+f8X
60WsG58m68PGdGZtiDXiRDJPb0pn5uiYq08ma8vmdOZbj2/+dLJm3JHOrDWx
5pxK5oUtLM92I9sjkrEW/7n+B94zcMQ=
          "]], 
         Polygon3DBox[{{2305, 1365, 1176, 606, 605, 1962}, {2138, 593, 1900, 
          2283, 1319, 2685}}]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1: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
tek+2jll5FRzqTlV78Ga8ospPABrTT2kw1J4BHpLejxfSlET6/3o0Xw5hYem
d6PncXgKj0EvRA+hnkLj6i1sz3zWkvnLGveIFJ6Ita8e2ZGZT/XOXgQfk6Lm
HlSLNb0k6yHXumtuXq5nXYvmMHOZOUqtq6fzlcyXej0Hwe+l8KQG1MJzaZ3C
M9OL0WP5t6wX9F52Z35fkfWDHklTCo9J78QcaC40x1j76WE1ZH0mXxeNUfsf
oFUaw6P7OPtJ8q8eWTVFDaZ3pifzTyk8Ob0aPckvZP7Xq9Rz+HwKj00vQs/g
Gyk8Rr0EPblKihpPr06PMqWoSfQu9VCOS+Ex6K1Yc3xUiRraWmRz1gfNWc/s
y3pjfdZfelafyvqhYx5PfQ2fsRXPN4pzbxdRo7ie9Ay/nsKz0EvUk/trJWp8
vTo9wc+m8BT1CvUg/5b9Qb1JPZfPpfBc9WLM4ebylXk9y3lynxxm7SInyo1y
orXwpQ3BfXKgtbycLDfLyXoPcrhcLmfrHahh1DJqGL0BNYhaRA1h7SaHy+WD
WoX3oYZRy4xvFV7JVQ3BbXKcWlUOlUvl0J+w3zZx7pnsDfWiXVZGTWktWdbj
erVGc76fHCgXqgnUnmoCtcHsfH81llpLjaW3cmtDjI/r0dpTDaAWUHPc3Bgc
2pzHz9rvyjK4QY74T44vL8MD0fuwvlGzqd3UbHopbRvieeQQvQg11N35+dTi
cq7cqwawdlQDqAXUCGpvNYJaQQ6xNlADDMnjNyX//gn5ef195i9/r5y+vTE0
2Pj8/D6fGkAtIGfpXagBx+Xx0+txTCdx/KVKjLXrYXB+HudPTdQjz6fPo/45
lT7TGsJrNl8uJja1GvOlxlPrqSH1ytSYak01qF5A6zzejqfej5pkaF4Pej1q
ULWoGnVlHs/ueT06fr3zeHbJ1+sL6Q8dxe+fkTXgw9XQPGpDc+IO9sb+FLly
vPqpiD3l3ppYxt4xZ5g7JpSx19xT7q2DmY/0QNUjj5eR683h5vInysjl5mhz
9aQyco85ydz0WBlcIUfIFS9n/vOdhnz2UtYXetTy1xT6P1kEx8g1rxIfWoTH
rD7an/lSD1s9NbUMbpAT5IbJZeRCOUQuGVdGLjJnmbtmlcFF5nxz/8wyuEOO
kqveq0WtZI1krTStDK4xx5vr5YRtReQ0c9uMMrjumDy+zWVwiTnR3PhhLXKj
2NqsXxm1svWRtd9s8NNF5EBz4WtZ/+iJqx//Al5ZRA1oLTinjFwpJ8lNH9SC
e/x91poHsl7SQ1ePDizDC9HD0Mt4sAwvQk9Cb6RXGd6HHopeyvwycr+cIXfM
K6PWkxPkhgVlcIkcKBd2LqOW1YvQ2+kKbleEB6QX1LcMvapHoFfQpQzvQq9B
r6dTGVxtTWxtPLcMrrXGtNZ8yBq/CM9G72ZAGd6NHo9eT39wryJq5k/8rTJq
Zz0KvYq3auEPFllvvVmLdz2+s1HPvpH9ADlXff02eGIR78TUa69k/eY7AvV6
t+wP6mnpbfUowyvSk9Kb6g2+vQjPSu+qZxlelR6TXtP9ZXgheiR6JdPL0Bpq
JrXT63zfqCI8ffX8O7XQCg1ZH3YvQ0/rUelVdSzDa9FT0Vv5XS28qcasl9+t
hXdUy3q6Qxneip6M3szv1UxFeFrqzbFlaAs5XC7/qBbrU49Dr+PhMrSAHC1X
jy5Du6l51D6jyrifmk5ttyh7PSdWwvt6tAytoaZR24wsQ9v4fGqjZdkbaVsJ
r2toGeOhBlGLrMhe1dnOP/Gna+HtuZ6tJxZmr+nk7K0tz15Zm0p4XQuyt3Rq
Jd69zc/a8HuVePcypgztpsZSay3NWvL8SnhpG2oxv77Tst7Zk+sv3/FYH+zO
9Z/vuKxnXsz1nO90rRefz/Wg69N6/oVcP/rOzHqkJXtnJ2UvcHvW977ztT7Z
kesB3/laz4zg904qQtOp7Z4j3rOId176FY+UofXUeGq9nbn+9J2P9eyuXH/6
jlw/Y28t9pvvyKx/+pTxLkyPVq92WBnaTA2mFtuX61Pzi/XI+7XwpvSU9Jb+
XIt8rmeldzWI6x8uwlP8xFskPqcIj0qvakgZtbf53fcNg8vwHq3JP6nNa1Eb
mN/1voaXoQXdv2rnP9RCm5rv9bL+ASxUoCE=
          "]], Polygon3DBox[CompressedData["
1:eJwt1nd4VeUdB/BLLgakbqsoFFt8GCK1YAVssdPxuBXR9mmt2gpqW5YMsQqE
FfaSEEhAQIYkohBACMjeIKJAAiSAsgVElgsrrtrP77nnj9+TfD/39773nHPP
ec9bt82zrTtlpVKpInWe+iw7lVqVTqW+ga/I7eWG1VOpO3w4R9XiD8pf8A36
UmqGP13ks2qjXCWdma+rnK93iZylitnT7Dt1WK6j1rHR8qdqpfy1+SezdnJ/
YwexbexZdgPrxwayrawT+zkbzeazb5NjfowtZWfZl+ogm8xy2RC5XF8X1oSN
YDPYafYSu581YQ8718FVU6lxVVKp16ulUp/z9fp+0Peqvs5yiq/35xr+RZy3
3NTYR4ydq+robSX/vkYqNV6uK1+rHmJ5aoEx38lTzPG4+YayUWwX+w9rzsaw
UvY9m8qeYM3Zk+YrcHxFjm+x7x3Ihunboa+bvhv1tWBt9BXqK9a3RN8wVqDv
gL6++n6nbyQrYmfYaPYAa8k6G1tk7EJjNxk7nE3Wd0zfEH136hvCRrJK9jxr
FtflfOdobL6x04wtNvZ/+h5keWwKK2I/sFZsDJvKZrABbKj5tpuvq6mamu+/
6j1WTc1mL8pfqS1ydVXCesiDjR0hVxjbnd3EvlTvsmw1i70g19bX3PfOVjX1
PiCPVUv1pNVr+p7S9636QL5SLWdD5XNqh3yRWsD6yi8ZOzvuNXONZ39ig9hw
tpM9x37JvlY72cWqlPWTv9F3q+PIdQ1GuwaFrsE51ox1Z/3YUDaKzTLurPkK
jf2zsePYMlZVzWTPxHzqffkKtYwNifPQd5v5Bpgvz3wF5rvHPTmB1TNffdVa
z4WqAZulfszul783/mNz1VPvmq9QfoVvlWsm1yWu/Xl+88eNm+o75vqO+b6j
RN8hPderMn2j9M1hR+Qb4tqwPDafHZdvVLvZODabHZQbxfPPRrKjqkQ+7tiG
s7/Ir+vbxxqo99gwNosdkK+LdYKNYKXspNxMfcDGswXshHyTej85twPqVXl/
8nzEevCGvv2sodrChrP9arq8T18fdp/8pr6PWNN4htlYNo8dk5vEM8Ly43pG
r3wqWXNivdqrpsaxsRx2T9x7akocG+vF7paPx5zsJBvF/ibP9R1H2S/i3mdj
2Efh8gl9I9mj8mm1ONYqVsDaysfiN2EfsxHsr/IJtZB9yvLZP+RT6i32ORvH
2sgn1SL2GRvLnox7L+4Ptof1ZHfJ+9Q0tpf1ZvfKh9Rr7DAbwB6KHudRzmqp
VSwnnl3VN+5lfY+yRvIEfevYBWoe6xRzsT3ytWoTG8TGs7Xyj9Rc1jGuMSuT
r1YrWS9WxHbJP1Mb2YC47mybfJVawXrGfcEq0pn1Ptb9XFbMdst11dtsIJvB
KuWfqg2sPzsYvfIh55HLWsmF+tawGmoO68BeZm/Ll6iF7Lm47uyMfHPcl2xi
XHd2Wm4R9yB7OX4zdkpuHteaTYjfm30i/yrWfDaJfRjPjXzEsQxiD8sz9e1l
9ZPnPNa6w+Hyh/oGstbyZH2b2eVqMXueTWLvyJept1h3NpFtki9Vi1g3diSe
Jfmo+QazR+St8f6O72Qd2K9jrY+1nK1lbZL39JZYZ9lm1p7dLNe05vSw5iyz
5my15pRZcy5jXVkp28DeYdMdy3Zja6vVxvY29hp9/fWt01epb7e+HvpuMX9L
tUjN1LM5O3MMcSyr9DdiL+rrYa51yfHdLtfmfXy+2nw7zFdhvjqsH1vLKtgu
dmWMZ0vZFrYt+d6ecU+Zr6357pCv0tdT33J92/SV67uAtYv3FlvB1rLqrC0r
Tt7T8Y7/xDGvMN85800y37/ly/V107dQ38YqmT1INnuCTWPzWKmxfXhurKXJ
73GnXE3f3/VN1/emvoX6LmYdY5/DVrP17BLWic1ja9iGZL67zXWXWqlK9Fyo
2usr0bdS3xp9l7IubAFbn+w3LmIdYt/JVrF1rCp7jE1hc9gC9hPWl61hO1kl
q8Vy2EpWznawsthPxRqe7B1vkctVfjqzn4w95m/k7WpsOrPv7Mx+G+/teF6T
fUnsr/4Q+4B4B8e7LdlPxl6qMtan5L0fe5Bb5d3xPKQze6TY190ub1N5yXXu
yFrKFbFmpTN7uNgz/FHeFWtCsqeJ/dVt8p545tKZfeILcb/IVzvfXs53hfMt
c77bnW+Ba79a3/npzB4p9vLx/LTzf1bse1Q/n+Xo6x3rl/yMzxro68l6xfrF
nmL12Bm1nH3FJrJ/xdqsb0ByTeM8GmdnnuV4Ru/z917V3+e99fWJtVn+p88a
6mvsmBtnZfamsUddbk/S0XFfwa7LyuxFlrBexubE2syeNrZ+dua+jPsz5n5D
X0NzXR+Vldmzx959WY3M3i72eI1Ui3ju2P8B46LfDw==
          "]], Polygon3DBox[{{2145, 557, 1411, 1220, 471, 2130}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TsuRGEYgOFv7hdzQysjFsAKaDVoNAqJQikMEREREbEP99suVOzACoiG
Qhhm3HlGFF+e9//PmTP5zxmYXZxsJCJiwbRMp5/MjbnKRNR4zX4+coiRjRhB
leOsc5qj+YiJZES3uXRvgj3mQs+4ltK95sOfHNkr6nd9rLv0pz7RJf2lT3VZ
f+szPeUZFesf6yrP7QVr5tnejnVaN/WuzugXvaezuqX3dU639YHO61d9qAv6
Tfc5z5hHlznMb9cG+cA6f+zfst15B6Zp7s2231e4xTI3WeIGu7jOItdY4Cod
KVaY43Ly79XGEjtHazDNeaY4l/w7brQt7v6/1y+tEjLC
       "]], Line3DBox[CompressedData["
1:eJwt0TcvRXEAxuG/K4iPYRKJcrl6b1ePQcRgJAYGEpFgFAOjic1GMJOoUT+B
3sskEjaEzXMTwy/Pe85wakbfSNdwUghhXFmpIfQyNxJCnjZTQogyX1t2AWPa
tgtZpB27mCXatUtZpj27nBWq1IrjKlarRlnpIew7V2vX6cCuZ4MO7UbGdWQ3
sVnHdgtb1aZM11hzrt3u0KrdyYiGvEep95lkM2fZwwUOcJlj3OA0TxhJC+GV
PzrTp96VnRzCOXN4kfg+vGQerxjlNfN5wwLeMsY7FvKeRXxgMR9ZwqfEc/KZ
33zjr170pQ8ter5TzvGYU1znKJfYz3l2c4ZxTiTuw8H///oHIIU8gA==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r8vnHEcwPHPOedcpJGmAyMdWDRiYKwOjIJzperqx2l1kBD/QZcykJis
XTobxK/FYPIjFxojFYM2Xdq00q1V5fXE8M7r8/08eZ4896OxNJufSUXEe/0y
/OV3niuTjcjxEev5mM1sYwefsZu9LHCUk8m5IqJPe5mIfr6sjshz33mABR2Y
x+2fmwd16DzEdY7YvzAPJ/eqnOy4waJrRfMrjaolF3FkP2beTJ7JCZX0xLVP
dpPmLb7mm+Rez5jiid1bbrOZp9590XzJ3zrTT33TZ5+tzGPucJerXOMHfuQy
V/iOC5zXnHmaJRY5wB528Snb2comNrCOnd7vgleq1g991cPKiCxrWcUHzLCG
lcwxzSwrkt+PKaYZTPHWeJuO+M8b3vCa//iH11zyHXxJ3f8f7gCzIEGv
       "]], Line3DBox[CompressedData["
1:eJwl0Lkyg2EUgOEjw6CPnRDbxHYRbkGFxlClCTPuIKVOZ0ajUiGIyhKxVYaI
XalRKnIHnn8U7zznO9/k/5NkV9bmVpsiYlGF1oh1hw0WucVN7nKHJyzxhhXO
tkV8s6EH/epHp80Rjzxjjed84gXrrPCZl3xhla+84huv+Z68hx+85Sfv+MXt
loh8ymc5zjJnuOz7jHFUdbsRHnPBfto8rKxqdkM84ry7QXNGU0ntfov9gPmQ
/ezTZJK7e7tec4k97FbO/sB5wtylfXMnlzw7zT3nHDtS///xHw3lMfA=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1492, 1790, 2350, 1695, 1491, 2351, 1696, 1493, 2352, 1697, 
       1494, 2353, 1698, 1495, 2354, 1699, 1496, 2355, 1700, 1497, 2356, 1701,
        1498, 2146, 2448, 1499, 2357, 1702, 1500, 2358, 1703, 1501, 2359, 
       1704, 1502, 2360, 1705, 1503, 2361, 1706, 1504, 2233, 2362, 1707, 
       1791}], Line3DBox[{1506, 2147, 2449, 1505, 2363, 1708, 1507, 2364, 
       1709, 1508, 2365, 1710, 1509, 2366, 1711, 1510, 2367, 1712, 1511, 2368,
        1713, 1512, 2148, 2450, 1513, 2149, 2451, 1514, 2369, 1714, 1515, 
       2370, 1715, 1516, 2371, 1716, 1517, 2372, 1717, 1518, 2373, 1718, 
       1519}], Line3DBox[{1521, 2150, 2452, 1520, 2151, 2453, 1522, 2374, 
       1719, 1523, 2375, 1720, 1524, 2376, 1721, 1525, 2377, 1722, 1526, 2378,
        1723, 1527, 2152, 2454, 1528, 2153, 2455, 1529, 2154, 2456, 1530, 
       2379, 1724, 1531, 2380, 1725, 1532, 2381, 1726, 1533, 2382, 1727, 
       1534}], Line3DBox[{1536, 2155, 2457, 1535, 2156, 2458, 1537, 2157, 
       2459, 1538, 2383, 1728, 1539, 2384, 1729, 1540, 2385, 1730, 1541, 2386,
        1731, 1542, 2158, 2460, 1543, 2159, 2461, 1544, 2160, 2462, 1545, 
       2161, 2463, 1546, 2387, 1732, 1547, 2388, 1733, 1548, 2389, 1734, 
       1549}], Line3DBox[{1551, 2162, 2464, 1550, 2163, 2465, 1552, 2164, 
       2466, 1553, 2165, 2467, 1554, 2390, 1735, 1555, 2391, 1736, 1556, 2392,
        1737, 1557, 2166, 2468, 1558, 2336, 2732, 1559, 2337, 2733, 1560, 
       2338, 2734, 1561, 2339, 2735, 1562, 2393, 2120, 1563, 2394, 2121, 
       1564}], Line3DBox[{1566, 2167, 2469, 1565, 2168, 2470, 1567, 2340, 
       2736, 1568, 2341, 2737, 1569, 2342, 2738, 1570, 2395, 2122, 1571, 2396,
        2135}], 
      Line3DBox[{1797, 2109, 2235, 2537, 1796, 2636, 2012, 1798, 2637, 2013, 
       1799, 2638, 2014, 1800, 2639, 2015, 1801, 2640, 2016, 1802, 2641, 2017,
        1803, 2642, 2018, 1804, 2643, 2019, 1805, 2644, 2020, 1806, 2645, 
       2021, 1807, 2646, 2022, 1808, 2647, 2023, 1809, 2648, 2110, 2024, 
       2111}], Line3DBox[{1811, 2236, 2538, 1810, 2237, 2539, 1812, 2649, 
       2025, 1813, 2650, 2026, 1814, 2651, 2027, 1815, 2652, 2028, 1816, 2653,
        2029, 1817, 2238, 2540, 1818, 2654, 2030, 1819, 2655, 2031, 1820, 
       2656, 2032, 1821, 2657, 2033, 1822, 2658, 2034, 1823, 2659, 2035, 
       1824}], Line3DBox[{1826, 2239, 2541, 1825, 2240, 2542, 1827, 2241, 
       2543, 1828, 2660, 2036, 1829, 2661, 2037, 1830, 2662, 2038, 1831, 2663,
        2039, 1832, 2242, 2544, 1833, 2243, 2545, 1834, 2664, 2040, 1835, 
       2665, 2041, 1836, 2666, 2042, 1837, 2667, 2043, 1838, 2668, 2044, 
       1839}], Line3DBox[{1841, 2244, 2546, 1840, 2245, 2547, 1842, 2246, 
       2548, 1843, 2247, 2549, 1844, 2669, 2045, 1845, 2670, 2046, 1846, 2671,
        2047, 1847, 2248, 2550, 1848, 2249, 2551, 1849, 2250, 2552, 1850, 
       2672, 2048, 1851, 2673, 2049, 1852, 2674, 2050, 1853, 2675, 2051, 
       1854}], Line3DBox[{1856, 2251, 2553, 1855, 2252, 2554, 1857, 2253, 
       2555, 1858, 2254, 2556, 1859, 2255, 2557, 1860, 2676, 2052, 1861, 2677,
        2053, 1862, 2256, 2558, 1863, 2257, 2559, 1864, 2258, 2560, 1865, 
       2259, 2561, 1866, 2678, 2054, 1867, 2679, 2055, 1868, 2680, 2056, 
       1869}], Line3DBox[{1871, 2260, 2562, 1870, 2261, 2563, 1872, 2262, 
       2564, 1873, 2263, 2565, 1874, 2264, 2566, 1875, 2265, 2567, 1876, 2681,
        2057, 1877, 2266, 2568, 1878, 2267, 2569, 1879, 2268, 2570, 1880, 
       2269, 2571, 1881, 2270, 2572, 1882, 2682, 2058, 1883, 2683, 2059, 
       1884}], Line3DBox[{1886, 2271, 2573, 1885, 2272, 2574, 1887, 2273, 
       2575, 1888, 2274, 2576, 1889, 2275, 2577, 1890, 2276, 2578, 1891, 1310,
        1892, 2277, 2579, 1893, 2278, 2580, 1894, 2279, 2581, 1895, 2280, 
       2582, 1896, 2281, 2583, 1897, 2282, 2584, 1898, 2684, 2060, 1899}], 
      Line3DBox[{1926, 2597, 2295, 1924, 2596, 2294, 1922, 2595, 2293, 1920, 
       2594, 2292, 1918, 2593, 2291, 1916, 2592, 2290, 1914, 2591, 2289, 1912,
        2590, 2288, 1910, 2589, 2287, 1908, 2588, 2286, 1906, 2587, 2285, 
       1904, 2586, 2284, 1902, 2585, 2283, 1900, 2741, 2131, 591}], 
      Line3DBox[{1941, 2086, 2708, 1940, 2085, 2707, 1939, 2084, 2706, 1938, 
       2083, 2705, 1937, 2082, 2704, 1936, 2081, 2703, 1935, 2599, 2297, 1934,
        2080, 2702, 1933, 2079, 2701, 1932, 2078, 2700, 1931, 2077, 2699, 
       1930, 2144}], 
      Line3DBox[{1955, 2094, 2716, 1954, 2093, 2715, 1953, 2092, 2714, 1952, 
       2091, 2713, 1951, 2090, 2712, 1950, 2603, 2301, 1949, 2602, 2300, 1948,
        2089, 2711, 1947, 2088, 2710, 1946, 2132, 2139}], 
      Line3DBox[{1969, 2100, 2722, 1968, 2099, 2721, 1967, 2098, 2720, 1966, 
       2097, 2719, 1965, 2609, 2307, 1964, 2608, 2306, 1963, 2607, 2305, 1962,
        2133, 2140}], 
      Line3DBox[{1984, 2105, 2727, 1983, 2104, 2726, 1982, 2103, 2725, 1981, 
       2616, 2315, 1980, 2615, 2314, 1979, 2614, 2313, 1978, 2742, 2348}], 
      Line3DBox[{1998, 2108, 2730, 1997, 2107, 2729, 1996, 2625, 2325, 1995, 
       2624, 2324, 1994, 2743, 2349}], 
      Line3DBox[{2011, 2115, 2114, 2731, 2010, 2635, 2335, 2009, 2744, 2134, 
       2141}], Line3DBox[{2118, 2123, 2739, 1578, 2124, 2740, 2142}], 
      Line3DBox[{2138, 2685, 2062, 1903, 2686, 2063, 1905, 2687, 2064, 1907, 
       2688, 2065, 1909, 2689, 2066, 1911, 2690, 2067, 1913, 2691, 2068, 1915,
        2692, 2069, 1917, 2693, 2070, 1919, 2694, 2071, 1921, 2695, 2072, 
       1923, 2696, 2073, 1925, 2697, 2074, 1927}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{618, 826, 2351, 619, 839, 2363, 645, 2453, 853, 659, 2458, 
       867, 673, 2465, 881, 687, 2470, 889, 701, 2740, 1476}], 
      Line3DBox[{620, 827, 2352, 621, 840, 2364, 646, 854, 2374, 660, 2459, 
       868, 674, 2466, 882, 688, 2736, 1427, 1443}], 
      Line3DBox[{622, 828, 2353, 623, 841, 2365, 647, 855, 2375, 661, 869, 
       2383, 675, 2467, 883, 689, 2737, 1428, 1444}], 
      Line3DBox[{624, 829, 2354, 625, 842, 2366, 648, 856, 2376, 662, 870, 
       2384, 676, 884, 2390, 690, 2738, 1429, 1445}], 
      Line3DBox[{626, 830, 2355, 627, 843, 2367, 649, 857, 2377, 663, 871, 
       2385, 677, 885, 2391, 691, 1430, 2395, 1446}], 
      Line3DBox[{628, 831, 2356, 629, 844, 2368, 650, 858, 2378, 664, 872, 
       2386, 678, 886, 2392, 692, 1431, 2396, 1447}], 
      Line3DBox[{8, 1498, 23, 1512, 38, 1527, 53, 1542, 68, 1557, 83, 511}], 
      Line3DBox[{630, 2448, 832, 631, 2450, 845, 651, 2454, 859, 665, 2460, 
       873, 679, 2468, 887, 693, 1470}], 
      Line3DBox[{632, 833, 2357, 633, 2451, 846, 652, 2455, 860, 666, 2461, 
       874, 680, 2732, 1421, 1437}], 
      Line3DBox[{634, 834, 2358, 635, 847, 2369, 653, 2456, 861, 667, 2462, 
       875, 681, 2733, 1422, 1438}], 
      Line3DBox[{636, 835, 2359, 637, 848, 2370, 654, 862, 2379, 668, 2463, 
       876, 682, 2734, 1423, 1439}], 
      Line3DBox[{638, 836, 2360, 639, 849, 2371, 655, 863, 2380, 669, 877, 
       2387, 683, 2735, 1424, 1440}], 
      Line3DBox[{640, 837, 2361, 641, 850, 2372, 656, 864, 2381, 670, 878, 
       2388, 684, 1425, 2393, 1441}], 
      Line3DBox[{642, 1009, 1010, 2362, 643, 851, 2373, 657, 865, 2382, 671, 
       879, 2389, 685, 1426, 2394, 1442}], 
      Line3DBox[{1015, 1008, 825, 2350, 617, 2449, 838, 644, 2452, 852, 658, 
       2457, 866, 672, 2464, 880, 686, 2469, 888, 700, 2739, 1477}], 
      Line3DBox[{1017, 1222, 2636, 1018, 2539, 1235, 1044, 2542, 1249, 1058, 
       2547, 1263, 1072, 2554, 1277, 1086, 2563, 1291, 1100, 2574, 1305, 1114,
        2585, 1319, 2685, 1128, 1479}], 
      Line3DBox[{1019, 1223, 2637, 1020, 1236, 2649, 1045, 2543, 1250, 1059, 
       2548, 1264, 1073, 2555, 1278, 1087, 2564, 1292, 1101, 2575, 1306, 1115,
        2586, 1320, 2686, 1129, 1480}], 
      Line3DBox[{1021, 1224, 2638, 1022, 1237, 2650, 1046, 1251, 2660, 1060, 
       2549, 1265, 1074, 2556, 1279, 1088, 2565, 1293, 1102, 2576, 1307, 1116,
        2587, 1321, 2687, 1130, 1335, 2699, 1144, 1481}], 
      Line3DBox[{1023, 1225, 2639, 1024, 1238, 2651, 1047, 1252, 2661, 1061, 
       1266, 2669, 1075, 2557, 1280, 1089, 2566, 1294, 1103, 2577, 1308, 1117,
        2588, 1322, 2688, 1131, 1336, 2700, 1145, 1435, 1459}], 
      Line3DBox[{1025, 1226, 2640, 1026, 1239, 2652, 1048, 1253, 2662, 1062, 
       1267, 2670, 1076, 1281, 2676, 1090, 2567, 1295, 1104, 2578, 1309, 1118,
        2589, 1323, 2689, 1132, 1337, 2701, 1146, 1350, 2710, 1160, 1483}], 
      Line3DBox[{1027, 1227, 2641, 1028, 1240, 2653, 1049, 1254, 2663, 1063, 
       1268, 2671, 1077, 1282, 2677, 1091, 1296, 2681, 1105, 1310, 1119, 2590,
        1324, 2690, 1133, 1338, 2702, 1147, 1351, 2711, 1161, 1436, 1460}], 
      Line3DBox[{257, 1803, 272, 1817, 287, 1832, 302, 1847, 317, 1862, 332, 
       1877, 347, 1892, 362, 1912, 1913, 377, 1934, 392, 1948, 407, 1962, 
       605}], Line3DBox[{1029, 1228, 2642, 1030, 2540, 1241, 1050, 2544, 1255,
        1064, 2550, 1269, 1078, 2558, 1283, 1092, 2568, 1297, 1106, 2579, 
       1311, 1120, 2591, 1325, 2691, 1134, 2599, 1339, 1148, 2602, 1352, 1162,
        2607, 1365, 1176, 2742, 1485}], 
      Line3DBox[{1031, 1229, 2643, 1032, 1242, 2654, 1051, 2545, 1256, 1065, 
       2551, 1270, 1079, 2559, 1284, 1093, 2569, 1298, 1107, 2580, 1312, 1121,
        2592, 1326, 2692, 1135, 1340, 2703, 1149, 2603, 1353, 1163, 2608, 
       1366, 1177, 2614, 1380, 1461}], 
      Line3DBox[{1033, 1230, 2644, 1034, 1243, 2655, 1052, 1257, 2664, 1066, 
       2552, 1271, 1080, 2560, 1285, 1094, 2570, 1299, 1108, 2581, 1313, 1122,
        2593, 1327, 2693, 1136, 1341, 2704, 1150, 1354, 2712, 1164, 2609, 
       1367, 1178, 2615, 1381, 1191, 2743, 1487}], 
      Line3DBox[{1035, 1231, 2645, 1036, 1244, 2656, 1053, 1258, 2665, 1067, 
       1272, 2672, 1081, 2561, 1286, 1095, 2571, 1300, 1109, 2582, 1314, 1123,
        2594, 1328, 2694, 1137, 1342, 2705, 1151, 1355, 2713, 1165, 1368, 
       2719, 1179, 2616, 1382, 1192, 2624, 1396, 1462}], 
      Line3DBox[{1037, 1232, 2646, 1038, 1245, 2657, 1054, 1259, 2666, 1068, 
       1273, 2673, 1082, 1287, 2678, 1096, 2572, 1301, 1110, 2583, 1315, 1124,
        2595, 1329, 2695, 1138, 1343, 2706, 1152, 1356, 2714, 1166, 1369, 
       2720, 1180, 1383, 2725, 1193, 2625, 1397, 1206, 2744, 1489}], 
      Line3DBox[{1039, 1233, 2647, 1040, 1246, 2658, 1055, 1260, 2667, 1069, 
       1274, 2674, 1083, 1288, 2679, 1097, 1302, 2682, 1111, 2584, 1316, 1125,
        2596, 1330, 2696, 1139, 1344, 2707, 1153, 1357, 2715, 1167, 1370, 
       2721, 1181, 1384, 2726, 1194, 1398, 2729, 1207, 2635, 1412, 1463}], 
      Line3DBox[{1041, 1414, 2648, 1415, 1042, 1247, 2659, 1056, 1261, 2668, 
       1070, 1275, 2675, 1084, 1289, 2680, 1098, 1303, 2683, 1112, 1317, 2684,
        1126, 2597, 1331, 2697, 1140, 1345, 2708, 1154, 1358, 2716, 1168, 
       1371, 2722, 1182, 1385, 2727, 1195, 1399, 2730, 1208, 1417, 2731, 1418,
        1419}], 
      Line3DBox[{1420, 1413, 2537, 1221, 1016, 2538, 1234, 1043, 2541, 1248, 
       1057, 2546, 1262, 1071, 2553, 1276, 1085, 2562, 1290, 1099, 2573, 1304,
        1113, 2741, 1478}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvXk4VW//NqxQGaM50iCaTE0KDZ8kmVNEZIiSlGSIokKmImWmkHnOTIYM
XSSzvfda2x5IlEyJtUMpQj3r+3v/fe8/7vd4nve5f89T/6zjOK1judZ5ndf5
Oc/tOHZbLjoaXF7MxcVVw8/FxU1efZrYtLEdHWCXzerb+roTBoxC2hQTCAiY
mPAMN2iAZLGj3hl0BlTV7cv62kfAtPfxn77HaoC7ScTrdRwTJn6/X/59lADz
q/n+Q4/KILFgSK7nIAvSTtY5+A8QsElGELOeKYKdk7zlUZUs8OxXmFrHJsDn
htluQcdc+OPEPseRYkNtqNvl6RYCZHtd5nvSMsFQ2li4x4cNXwucN7VUEdC8
dUgsflEa9KUzLufR2VDmMmpxKJ8Am15t+wCFZCj05o2uXd8FUq0B1o+TyXX2
7/W3HYkHftyupcOkCw4W1kq2RhEgE2J8WfLUMxCRvWkmH94FLPc84bEgApSe
tiT9Mo+GX8tNt443dMG69qStA94ErFb/eFyDiIDi34sTuie74HnVluikWwTY
LjGnjHwKgwkhj4YU8W64rhdjIXyDgJZbr5//PBMCRVeknmCq3XAge/mNjbYE
VA5PP2hchYGmI/BbGHWCZnTplo0OBOxzUf8lZdQEPBpCO+5kMIDHeF/UtkYC
BgJu73crqoP7ttcSe6yZUL8XbeP/QIDHs3VJzpOvIPNe97L735mwmn+5zq9+
Ah49Ldq4pPUljHzxd/O4zoKHV6mZzB4CIiMFuqyEi+H3fgnpepwFt3TsZ9fR
CdA1YV2+F5QHGR+w7DU72RBtpbpVopmA8Bz7mplj2TBY+k4uzI0NUrPfy79W
E/DTwb7w4EA61J1fF3PmFRtYvWWGAsUE8Ji49H3anQq2p1RMRqfZYHoump6R
ScBTtaSDEQtJcOkl572fbBeYZlqWdD4nwEWfyD9i8Ry0g0f28Ft2Qe/yqh/P
Igkw1rxWd8AoFvZJCskqBndB3g6nqMlHBPBGhGl7N8bA45lQduzLLqBpbGph
+hKw20iEJRUTBfwCal4l77rg+rUjxw7fJWD/4XD35WU4+CiOrc3V6YRfVTfu
Ve8lwGGfY7fRnxaoFGX+2OnNAPyDYXtnDqmflNYs2bk34PtNc6FlPxPuXQ42
2oUT0ERNnnf/UgumfKr0gjomdCyu+/jsPQGhtyPHN6pVQv/MKrXYvSwI38R8
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
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{361.69497556659377`, 235.52730206073534`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1, 4}, {0, 6}, {0, 1.7}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.183457004835132, 0.529088942086708, 1.0176769574514617`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7094629976740446`*^9, 3.7094630517002363`*^9}, 
   3.7094631211103024`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7094666598342924`*^9, 3.709466662697976*^9}, 
   3.7094667087163973`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.027777777777777776`", " ", 
       RowBox[{"(", 
        RowBox[{"28.`", "\[VeryThinSpace]", "+", 
         FractionBox["4.`", "a"], "+", 
         RowBox[{"4.`", " ", "a"}], "-", 
         RowBox[{"12.`", " ", "o"}], "-", 
         FractionBox[
          RowBox[{"1.`", " ", 
           SqrtBox[
            RowBox[{"16.`", "\[VeryThinSpace]", "+", 
             RowBox[{"8.`", " ", "a"}], "-", 
             RowBox[{"48.`", " ", 
              SuperscriptBox["a", "2"]}], "+", 
             RowBox[{"8.`", " ", 
              SuperscriptBox["a", "3"]}], "+", 
             RowBox[{"16.`", " ", 
              SuperscriptBox["a", "4"]}], "+", 
             RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
             RowBox[{"96.`", " ", 
              SuperscriptBox["a", "2"], " ", "o"}], "+", 
             RowBox[{"48.`", " ", 
              SuperscriptBox["a", "3"], " ", "o"}]}]]}], "a"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "+", "a"}], "a"], "-", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "a"], "*", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"40.027777777777777776`", " ", 
                  RowBox[{"(", 
                   RowBox[{"28.`", "\[VeryThinSpace]", "+", 
                    FractionBox["4.`", "a"], "+", 
                    RowBox[{"4.`", " ", "a"}], "-", 
                    RowBox[{"12.`", " ", "o"}], "-", 
                    FractionBox[
                    RowBox[{"1.`", " ", 
                    SqrtBox[
                    RowBox[{"16.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"8.`", " ", "a"}], "-", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "2"]}], "+", 
                    RowBox[{"8.`", " ", 
                    SuperscriptBox["a", "3"]}], "+", 
                    RowBox[{"16.`", " ", 
                    SuperscriptBox["a", "4"]}], "+", 
                    RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
                    RowBox[{"96.`", " ", 
                    SuperscriptBox["a", "2"], " ", "o"}], "+", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "3"], " ", "o"}]}]]}], "a"]}], 
                   ")"}]}], "+", 
                 RowBox[{"4", "*", ".5"}]}], ")"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"o", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "+", "a"}], "a"], "-", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "a"], "*", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"40.027777777777777776`", " ", 
                  RowBox[{"(", 
                   RowBox[{"28.`", "\[VeryThinSpace]", "+", 
                    FractionBox["4.`", "a"], "+", 
                    RowBox[{"4.`", " ", "a"}], "-", 
                    RowBox[{"12.`", " ", "o"}], "-", 
                    FractionBox[
                    RowBox[{"1.`", " ", 
                    SqrtBox[
                    RowBox[{"16.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"8.`", " ", "a"}], "-", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "2"]}], "+", 
                    RowBox[{"8.`", " ", 
                    SuperscriptBox["a", "3"]}], "+", 
                    RowBox[{"16.`", " ", 
                    SuperscriptBox["a", "4"]}], "+", 
                    RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
                    RowBox[{"96.`", " ", 
                    SuperscriptBox["a", "2"], " ", "o"}], "+", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "3"], " ", "o"}]}]]}], "a"]}], 
                   ")"}]}], "+", 
                 RowBox[{"4", "*", ".5"}]}], ")"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "-", 
      SuperscriptBox[".5", "2"]}], ",", 
     RowBox[{
      RowBox[{"0.027777777777777776`", " ", 
       RowBox[{"(", 
        RowBox[{"28.`", "\[VeryThinSpace]", "+", 
         FractionBox["4.`", "a"], "+", 
         RowBox[{"4.`", " ", "a"}], "-", 
         RowBox[{"12.`", " ", "o"}], "+", 
         FractionBox[
          SqrtBox[
           RowBox[{"16.`", "\[VeryThinSpace]", "+", 
            RowBox[{"8.`", " ", "a"}], "-", 
            RowBox[{"48.`", " ", 
             SuperscriptBox["a", "2"]}], "+", 
            RowBox[{"8.`", " ", 
             SuperscriptBox["a", "3"]}], "+", 
            RowBox[{"16.`", " ", 
             SuperscriptBox["a", "4"]}], "+", 
            RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
            RowBox[{"96.`", " ", 
             SuperscriptBox["a", "2"], " ", "o"}], "+", 
            RowBox[{"48.`", " ", 
             SuperscriptBox["a", "3"], " ", "o"}]}]], "a"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "+", "a"}], "a"], "-", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "a"], "*", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"40.027777777777777776`", " ", 
                  RowBox[{"(", 
                   RowBox[{"28.`", "\[VeryThinSpace]", "+", 
                    FractionBox["4.`", "a"], "+", 
                    RowBox[{"4.`", " ", "a"}], "-", 
                    RowBox[{"12.`", " ", "o"}], "+", 
                    FractionBox[
                    SqrtBox[
                    RowBox[{"16.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"8.`", " ", "a"}], "-", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "2"]}], "+", 
                    RowBox[{"8.`", " ", 
                    SuperscriptBox["a", "3"]}], "+", 
                    RowBox[{"16.`", " ", 
                    SuperscriptBox["a", "4"]}], "+", 
                    RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
                    RowBox[{"96.`", " ", 
                    SuperscriptBox["a", "2"], " ", "o"}], "+", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "3"], " ", "o"}]}]], "a"]}], ")"}]}], 
                 "+", 
                 RowBox[{"4", "*", ".5"}]}], ")"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"o", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "+", "a"}], "a"], "-", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "a"], "*", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}], "2"], "a"], "-", 
                 RowBox[{"40.027777777777777776`", " ", 
                  RowBox[{"(", 
                   RowBox[{"28.`", "\[VeryThinSpace]", "+", 
                    FractionBox["4.`", "a"], "+", 
                    RowBox[{"4.`", " ", "a"}], "-", 
                    RowBox[{"12.`", " ", "o"}], "+", 
                    FractionBox[
                    SqrtBox[
                    RowBox[{"16.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"8.`", " ", "a"}], "-", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "2"]}], "+", 
                    RowBox[{"8.`", " ", 
                    SuperscriptBox["a", "3"]}], "+", 
                    RowBox[{"16.`", " ", 
                    SuperscriptBox["a", "4"]}], "+", 
                    RowBox[{"48.`", " ", "a", " ", "o"}], "-", 
                    RowBox[{"96.`", " ", 
                    SuperscriptBox["a", "2"], " ", "o"}], "+", 
                    RowBox[{"48.`", " ", 
                    SuperscriptBox["a", "3"], " ", "o"}]}]], "a"]}], ")"}]}], 
                 "+", 
                 RowBox[{"4", "*", ".5"}]}], ")"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "-", 
      SuperscriptBox[".5", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709466673961479*^9, 3.709466805564019*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
ugrcvKGF/kA5Qtq3NLdZhrHtIqd1s/OewEZB8uGidMBVvzpqNK4ExtpThuw/
MEEnJUKF7GOXKzRWniyRl/o9/vHAOMLJLldkLL7kyMJv+izuXsWxdvo91r7C
JIWzzPSzgCYZHS8Hx+JTjLSavnyV/12Z3U4DDRzsv9fTRsbNJVszJQN+UaPt
Ioi/O8dPpHHWUX22f6e6GB281K/PqvaqoyAO4XdT41zu1J1RJKN2wxTET7+X
YKJtieWY7lwYJ/d+6UpNPm+B/Rp4wdynfX3SpgT8AZ2nLGhqmhw1YSwOYZyS
I3N25K8KNGXaF/xXzP96wmiK1hhn2nfBbmIRH6iAfsI47r2Mu+anoiH6CeNj
g26a35kkPYxnGF/m6fZqzVmhQ9TZ/x4a01mcTI0K18yXhn7BOfY7kmR7Y8fT
hgbNsTjnHYsvabLO/k6CvqQ6lgP9dFqmyUrleIUxOxaB8jtj0zaG5Y3mE7fj
TD/dxN1vt/HmT2q0vpD3RuLKdu2b3uuqmH9ov9aN8GTDfZ2vVCFfM/Z3Z4x7
s/ujwZj+MO5IkfQiUZuoJRqYB4CHFJfzJIoqYLuAzr4TXadlfA/D/gjt5ewo
71n6Czgf6pkhn3GjPEoN8yfoMOeQ8JPtdtbIYR64K6N28pGpzPgFeXjcoVgl
+nkH+DPajvzk/fNVQy6849n2ZN8P5Ommoj11tjfKRtvpDzWaR0VI/t2DT+Nu
qLL1D1nWjzyTR9iNX/Ej5iWo75Zz/+XxVdti3EJ9i2Y+Vd0caIl5Huw/fVK+
K5hujv0d7OcbWXWX1pgih3wVcNB3Vdxs/bH4EUb721x5vx0m6OM4BXxaTqyz
1H5NtIdynM5L7TLfrIzjNY4L4yZ3BCaaj8XbAOYNMV7yNeqvHo4vwLvntVxI
2KuJ4zjEofDHE51HhOA9Xo6x/y5BXk53PvwrUhvHHeDvDKYuy56ginEO/KJ0
8AyecJOxf3NhvNndSVn7LdmIQHuBP+YL33Gf6zXFPAzj46wD6+35/9gihzxm
oz53+w5Vc6wX+J9n4bzU0N4BOeSHlpTMnJgpVhj/MH7Jlt703OBvhxziOf3L
vX1h0y0wb4D+shWqahunU8hx/pkerVMkZYf9FOw/JhsPPm6zRQ72/JdnL+xo
gnGQH8eRa/nPhq/YG2A+hHh4160deCHfHOMT4nB88ZsOwWk2GJ9gr7Fsjk9D
iTGOy+BP18PWEKNumBcJYL69mr3M0mDIFNsL8mfivfs5ieqa2B9H85wgyfc1
ESw4bYoc+u+j0wcKn17TGyvnJ9qfXxDwUeaUzv+Ma+JkYszXTfKypmO68GBe
3bb64WalYkPMM6AP59Q/v7bkW6Ju4L+U64TFd5db/k/8j+Rhn20vT/+0QA79
xWZt7rrXG0z/Z70pQqLzTVcIvrFE/2F89HLbtvHbyHoW5mMQbx4r9Nd/5bDF
ekH8zx4v9tbgPLOugXhrrMg4nhRsjfWFvN2SkRZLmixxfgXt9eJPbpX5OQfU
Aep7wWqbXVCUPfZHGH+VQyuPi3AyHNqxeYe1cOoEy7F/c+C4VmsszLcu1Rjn
jVCOXezDVJlf1mgP/Xd51aLzt/dYEY+Rf0n2DWA+X+juPO+19WecV7Dz9G8h
wv1AprDLoZai8+GWq8x8QG2b2N9rrwapf+ftLdNkiUmN3g3+mAGK7l8LOUQx
zsNyhxzdG0fzVPMFLrbe/nskScDr3lVcft3sfK4yZ1S388nSpGjN59NlvL2j
8zbzn2y/TtkJkK8e3wflvC6x40NJoY9Ko+d3J4TJlPvazv6Ztez1XuSFPnae
iecSIU/kdkjxmLxnl5PqO8z+/9lPEyeDs5YITqr8zvaz5A8ne/xv05Mkbkkt
3+c0/WTzthBetp72PVIkUn7ylczknlH7tNH8YKYlQ8zLitvEdvVRdH7gPjva
T8/flCHS91esPto1qk/199FxJ69DloxffOpx3q1Bij7boyIuwv5d3U1yJCjz
RVeo0hDbzyrdrrH45CPhM/ZJkuBzZf+uiwt/C5DjbkfXT5GoHP031y/sv4l7
4iJ811dQML5cHKGGbSIkZupPQaXmJna5hy142PmvZKYUmfe+xLLWr4/d3i31
zDpimmPUoMKlHgrGNRpnETly/ObzWZP4WOz8UzKDGdcUA02+GcwbpmA+T/8+
9wU58jXTUP/CjiEK5vPRdLv1CpLZs5zU36vVUHR/yJHlwP2c13OfHVPb9JWC
+KfbUTZUgsy9Em2fn/qNgjzPjiNDKeJ8eqdI1Ilf/2+dcv6zDPmg0nXo5/R+
9rw6fslvio73GjUhohb+c3/zswZ2vdooQXY+sBeQJR9No56vOdHP9j8sT2R0
v6Jajpy2Gb+MVA6x488wt5ddj5oIYSJo/yb5xNGX7Djred/P1j+HiBJ51zcL
499/Ho1P09H5JLewOHn65InWAYtP7HJEbo/uF1X/Fid2BX56DgkdbDu3RaPz
yeZGCaIu9EDv8uPR+VyL7Oh+0a4KSaI569PHTu4edrxV3OVh1/dniRTxSXUw
Kv7YPcpZQux2XLd4ZN5eP22dxH8DlC+tyywhdr73z5MlvBfnqobIsdjrr9rH
wuzfnTBLjmS5irCiHv4d7VfJo3mg/K4QmWszNcVLs4mCeSC7vl3C5Gj0q7/z
zrxj23+QHfv/rRMjU8z/ZOvO/MBu33U7eUbnvTulyK1njxYvz+nG9Rftj8hp
GRI1VUtv/+ux/vJ0NM9UhMqS2v8yWGdmDlAwPtLtWVstS9wONQzZrhlkt3vL
dma9NtTD6gw3H6JgvcbWeY0cEV8fVjHENzRqb8Ss4+JfLMi33DfMjpOsL8x6
cJ96acRJt8HR+IntxXHka5uftVb7CwrGC3Z9p4mRKAnJMPGINurffcuQl2LE
dVA55PvCj6N6bfyL8yUNxRY1I4V2CvI2/TthjySIYoeyjqZgF/XvuCN7RIrk
dqWtnPWyG9eJbHtVWZIqws0x70M/BfNVdt7dJ0vUBWskOX4NULD+Yuexr3JE
dFd/pGMPC9dfbL8ixInHof7Dmx92ULD+YseviyQR1i7UXLilm4L5Ejv+5Uby
86eKbK6+0f2RGpFhHJd/ynauzBBtp/5dT3Fri5MpL3v9zOd2jObl98Ns3bi3
iBMtL42Xp399Yfdrf3MW+UvH4TFxMveB75Xzcd8pmN960vm2QZyIfnEovNjR
zv5dswBmXUbO3Hq8Tq6d+ne9NnBYnNzx6p58ZF/baP/aNrr+vb5KkojsnG29
/uUPfI7P1ueKJLk2rm71hPhuCtaJ7LzXKEUWCYefm3a0l62D7jtedt5e6CJN
lkVXGV3+/YfdLrIc/KPt8laaXHtz6vGcV72j/e4o92iel5AiR1fxHe2/1sPO
w7NEeXBcVjP9XrXnXjeuB9n2IdJExlA9QW1bD7v8HpUfo/0sk584hdlPnsdz
twzm1bS/IV38pIWnMOtmwblRnR+NrqeoAhFSuV/nmKh44+g4+o3ZH3ua4ySp
daeV+nc+rzSSv+PcP3S/PleP61naeuF9aaK7rNG4vbB3NH8mCbPj4aeVHJnS
W1OeEPuXgvUOW2++kXFthsl9gT3D7HZsCxjd75rlKkEKk+OW/FX4ye6Pec7M
fvj1Hh7123U/KVj/snX4JUni/D2nCeTAfjfX6Pi7XpLc3Cnqc/rdj9Fx3+PX
6HjXJECCLibPNTx2YFQ3sdH1r0AXH/l84npzlPPTMh4pu6/DScx7rdmcRXKH
RuLX+370r+Ek5vxpkqjrj5BlWmQ1+/kjF3LK66QXff60OKbm+3ASc/7UpvVH
xutl2qSW4u2kn+sBt5u6Z09dvjaB3wW+19c4Mv6iNrFgPy9jzqX6ens6GZzX
JhFX878MJwkh39Oubt2ep03Sd776RD9fA56XmV/etkWb3J4l8HE4iTmXqr03
t9lyjjYJL5o/ODzMvP/TGnZ92Vs1fXKD/fyReY+xv/tI9PJEE6L4y+r38HAf
8hchjY35ZaZjOgwgv/DnZVPiPLOx+g4x51j9knwmFpuNlcOcP038lppVf84M
dQZuJXzv0MJcM9QZ+AT321n0+VPQGXjANWv9m5QZ6gxcPtWtqpfHDHUGHhkf
3WRSZYo6A+fjvDQsssMUdQZe+LBjwUk/U9QZ+fQXCx6JmqLOwFMpoaNtz01Q
Z3jPc8bTPxF3xexQZ+BZKYupZdV2qDPwH48NnUO67FBn4Ova7qrG37BDndG+
I9nm40w71Bn4ENfH+pfttqgzcIO3/rI8S2xRZ+Dchmf16fOnoDNwOSOB0IQ4
G9QZeMy3rcGpA9aoM/DQOrP0uynWqDNwJT4plx2y1qgz8PL907ZynrBCnYGn
snYparhZoc7Ad8buia9ptUSd8bynx6TKjTNcUGfgNlvjub/ouKDOwMdvW+Jc
89QZdcbzqkHqKqHznFFn4J9m30no+01QZzx/6q644MxWgjoDN57Tpec0jqDO
wGcu2NpOnz8FnYF7XO65k3bOCXUGPsiToq8x5Ig6A1fv8ZfuDHVEnZHXX82c
fMkBdQZ+3ijzzq3xDqgz8EOL73zbkGaPOgNnbZa+xxK0R53hvOTw/PuOIUme
qDPwTB+p49PeeKDOwBvW5XJqa3qgzsBXbN6wJ3O5O+oMPMrG1NCo0g11Bj49
SVrdTccNdQaecvfqFO8MV9QZOM/qh5n0+VPQGbj6mpnUtVQX1Bm4x+LyD35S
Lqgz8O0twg7Vhc6oM3Aj90khmxydUWfgtS6NEncbCOoM3I3TeEvPRoI6A9e8
OdEiw4CgznBesmLTBaHjx/1QZzw3auG99UqWL+oMfJxRw7WenT6oM/BDrdfe
k0xv1BnPb/IevBB+zgt1Bv57wd73+S2eqDPwKt9zDWtUPVFn4E+XlXXQ509B
Z+B1D5bte17jjjoDv/2IPzaRckedgW/oqeNtKHVDnYFfOb4mucraDXUGLvpT
b7v3bVfUGfh94elqiSGuqDPw3eEczYXtLqgznut8u2z3f7+DUGfgRKDBucoq
CHUGLj7rTbiKeCDqDJx/1s7uPy/8UWc8f7rtv9VXS/1QZ+CSQbHXei76os7A
N92d2Oj6yAd1Bj6uRWyYPn8KOgOvEJh4e4+VN+oMvOlkpPSrZC/UGbhOrcbS
3e88UWfg8Tnb+y18PVFn4CnBHlarb3mgzsDnbCxstrT3QJ2BC4mRj8vL3VFn
OC/JeVR8X1vhRNQZ+IrBrw8/ngtBnYHzHr3DseBNMOoMPEvy3Npv8sGoM/AN
zurKwbFBqDNwmWyZ3VrFgagz8BfjHRWM0gNQZ+CmB1o30OdPQWfgrtUWuhwj
7Qg6AxfvuzrX/LMv6gx8mtc8yaM6vqgz8Os8N+MXrvZBnYGnx2y81/DSG3UG
fqUkRTrbwRt1Bu7+7ZbH/NNeqDOcj5i/5k/tqYgw1Bn4j2mLH6s7TUKdgeuG
q7dttA9FnYF/9m2kdKZMRJ2BTzn64JPEnhDUGfimaQMPBuqDUWfglW+uRETZ
B6POaD8ofJA+fwo6A/8dKhpzQycIdQZ+KKJlVm1EIOoMfN37Fd6+qQGoM/Aa
rSWsLWX+qDNwL+0lG7dx+6POwAOdZKaeDPNDnYF3ytzYvnGkn4L/Eew45yb1
hj4Xgv6Z/1vesLFN1+AmYae9SwpXa6L/vKHRc+n3zLdXUF5J/Bro/+uOnB30
+YVPi5c7bzyvhu14/O+J717pfOSOpOk81ala2F5+hmIu9aUjeXRxfsz5bH3U
eS+7HtzkwooZegH6OuhnF9t/PuJ4w3jKv/PnOw8XC3uPlP+Z94li2VxT9HMf
+z0+PmK2IWDy9fkm6GdU//Nw+nfXchbd3ztghDrbsN+P5iWGi3sCDrsaos4C
epbnYut5SE7a3sPbjuijzvXs90N5RtpXtniqvB7qfGpqNheLxUOOvRT1f3RY
B3WwFn53Z3hYkASYPWrPXGuD8cxfKPXVK12QnP0tn7bW1wb1eW3vLpOuIUgE
DiSfXnzAGuN23aJj8zW8Bcjvs/KVv+ZbYtz6cb1No58/VmgvbE9faIF6js8R
uka//+/DcdecM8Yc9VzvvKKUnn+GlIr8bPxnnhz4prCZ9vMjr0XI+0Jr1FOV
/V6hIOGVVOjsWGqFev7i5zej/RwnPivAO9gS9axgv+8pQNZkXApxc7VAPbNs
Fm2h/V8/68+yW27mqOeCZ7mnaP/P9M5rGJ5ohnraLXhSS/uvabv48n9LTFHP
CkX5rNJYUbLgCmemyQln1DPrvHcZ/Vy1RsAyZVIfQT2jfNZ98UoXIZ2JxgXF
xgTzg/W7kxL0voH9icP7Q3KcUGf+tU129aXC5FmIVsYMGUfU+Y2EeCS9b2Y7
tUl7SZ496nyixHlXbL0QCUrfIN7sZIc6CwaVpNLzzwv1+uf+nSc3fH57nvb/
7uaH00tbHVHn00nCDbT/e7y9flsvc0CdN8g58XiP+O/msTNNVtEedQ5hvycr
QlbbHWPJvLFFndU98yfT/t/vFI5KP2GDOv9uqtlA+7/tWwbXnD3WqPODeO7j
tP+P70pEn9hkhTofky6+WPpNnORNkxRprvVAnfe2UN70PhXvsqFI82PuqPOa
k68bh5PESV3qwVciS9xQ57mrly2n99Pen19Umj3VFXX2cRPk85YUJz+Uqnhf
h7mgzlEqHtb0vqJs9NmMLVHOqLPNlVWzNbzFSO7mbYfDtzLrEV+2DhLkbEzm
6n/nyRbr+O/S/i83VM04MIGZJ49j6yNOIg1m77f0ckadedl/xcmivFNz7DcQ
1Pk7Wzdx4nR25ueIHRTq/Pr4Ihna/9XH5Hf3GDqhzpvY7/OKkfJId9f1Hx1Q
59Bku/W0/ykpJ8QvnGHWI51KLuPTCyVJZtu+Qxd++qLOdew4kSS9TnNzjYJ9
UOeyCys8660kySvz67OFn3uhzsfY8SNBOoeX/Ke23BN1TvM9ulSjSoJ8fD7Y
983UA3Vew44rCeI9O7VaVcQddZ77vvZA7HQJcllEKWIZyw113lsqmE3PP0/8
Lqv+d568dtMRA9r//POvgkrmMfPkiACH27T/63fezwxf7IY6+ym+mkT7n3Vm
QGpiqivqbMn+K0H8G65q6l90QZ3Hn+dNov3/u3LWwp6vzqgzX+JhKdr/zMO7
psuZOaPOXd42x2j/i0NVak03MesRC/XGrbHTpYmyglj8u2xmnjzu+0pl+jlv
TP+clnlqgagzz3XRc6XfpMj8lTqB3j7+qHNnSrE7/Vzpuerus+0FvqhzbQh5
O5wkRR6p5lYWavqgzmXj3yym90UHtweJRj/2Qp2PtS/j8paUIm89bx7kTWfW
I3U3j3LQ889jE3Va/p0nl6c6ZdH+z612u8d53wt1LplUp0f7n/Touqj4aU/U
OV11aRnt/3Zu+S3uJzxQ53Xs+JQiZj8UE1quuaPOkey/I/VafGhBzls31Nmf
HbdSJH6TjmA6vxvqbBX8QoL233WxlJqhqyvqvFZv9Q8vyZF5su+1czs9mHly
RI94Cv08IjrNvm4dPzNP9r1TopheKEOauCy37O4KQp0tdrucoZ9Tnzb1iRb/
EYg6K0+rd623kiFRDW/OuVsFoM48WnGvh4dH1h0HtmaKHPNDnTt/CMdqVEmT
tzzqi2ZSzPxn3D2yiJ5/Hn/LPeffeTLv3jfDtP8Dz1LCPzsz8+TvM5bvo/1/
1S7SvZWfmSe/1hHSpf3fZZqQ4vvZG3W+3X3kJu1/58A9b556L9T5eLlDCO2/
+lJXL/lWT9Q5g/13ZH3kpF03uZdZjyRMWbyO9n/2sce+XUoeqPNtU6npGlVy
5Km5TOZrPmaeXMKed8kRnpUVRfPSQlHn9Cq3LbHT5cjXx7/uO/tNRJ3XZjbK
0889t72QqFljHII6R8yJP1X6TZZkpts5vTMLRp192fM3WaJx/pbTm6Ag1Nni
T3HtcJIsyRb/4vdOIBB1jnxc/5Kef6psyN/57zzZPztuIe3/d+cz8yreBKLO
VpEiQ7T/5YGVd0wSA1DnCSZF6bT/7n4rEx47+qPO/INO2rT/fuL8PX+l/VDn
rgd112n/leZ7PnjC8kWd32QsDaL9n3Roon3lELMeucP+K0veNq5tey3M7DPE
iFgXR9pxkQlWmlcE3wpgfSeF3VpOz5MNvmSmr7HWQP+DN/xSp897JlxSuS+a
JY/t0jf9q9TlkXmjSva3w5ZLpbBddCqutdPzzOvGHT+XTNDCdhnPjk9e4hYd
IBl2Tx95GPv8DS/ZVb82YMoIBz872fHJQ7KNl6vcz9JDnrJvcjY97927/fbf
B5Qx+rMlWu0zPe+6a+fXmDnRHP25WNN1k56n8f18yt+5kNmffC++/T09T4h2
irWy2MSMX0snlJfS45pZ2frocYKuzLzly+3+0lhOYlck/P3+13EYP3BOVuv2
3C9v+aVRT+BtnFcE1d8rYPzgud1lmf7091UgfoDzzIjao5k3AfUHzsGzhW9p
mgrGyXH2OU5O8vCR8hr6+yrAT7PPOXESp5rFPTQHfeAc5UBF9y2FInXUB/i0
Nhu7b2q62C7AL52uC5v8T7sAv6L90NlC0RB1KGfnBx6yIEHms/o6XeQXBzWX
0OuXmfZBj7/XMfvwcG5aYkrdAwNnC/QTeJwxdzvnJ0v05/iLeCeaC053FaW/
uwL8Hfv7HAJET8G9neZQjuSaKdfo+aFZVuTex5Mcsb4urVp76flkcfz7bUc9
ndD+0Nbdu+h5Tr5b9knJ2Uz+f2bwmIO1QZbkvhf6cWhoIsYDtMuruo1fQqQZ
/YG3GGiW0/qDDqDbkhnar3c8MUR/oL4aISJfb25l6gX8TGhRIl0v8Ae+R3HD
2+OMzjoK/Qd+rnL3wjnFFNrD91ik+l9ZTvzhhlx84EoR3Y9iBB+F03kL4lY0
UF3g8kicZ3H0633hk8S4VWbv13GSOgHJItN/4nZZWIvfwgwOErHnqcrzlXzI
Oy8efEr3l7P14+tulSiin6PjIA9ZPyP+84R/8sboeMdNNgemFcWWK6H9fq2w
97T9zFtf3huO2EO/uM3+7xzkyu7CNOGRvATlwPO1/I4pFjYHpLBe/MMnDm8Z
5CAa35pOZO7ro6BecJ69X31gBv09E/AfeJVst7fjRxlsX3guebG79Db9fRJo
L/jdY/cKgujvk0B/wfPvwkP/vStUR/s/Piv+eo1wzYfzfcahPfP9kK6yVZ/p
77RAOcfY8yJuIst/3tNlF1O+COe7O9nNnMRjjZfWJN86Cto3jDNU/PLIetPt
enbXq2YjbPcubs+pdD584ff7wPIS5jkd1OvYmdK/Br78OO4kKA030u24darg
G/utE5A3XAk/Ru+TnN1yxu2gkTpyKKdJ507PipPSOE4FsM/hcZIw6e7rsiXK
yAVVDZPofZgmrYWHPM9rIIdyvldfkOjrlcFxTcV3rol3+oifiy+WRkkqIrdN
HZhE61Nw/m/2Yj4t5FDOV721Sx26ZNHP2w7hGZn5LDJ3QpeFtxQP/m6SZO8J
+nsXa/T2/aK/74Hz85P0dy1Y5ARJCTo4wqH8k2vvbaovZZHnsz6L1OyWRH6W
nU+GqSLWYJVOcBsF5cD3NDw7+Z0O/1MO8HtBmsduCgpj3oD46Tc8fXl8lCZy
nc7vOezvJJQHxS1ep4J8NXs+zEUkqwSXxoxwqC/kpYzIO3nzjzHjwjr2fImP
7IxQGxchzDx3ptjfn+AjVSVbl0X9w+Hc8eM5gj8jhZl9JCh/6cXvW/ZXq2K9
gLut39Tx650q5k87dh5mka5Jp+bJ5/ygoH9FssvnIJEd+2MCR/oX8CNFq2bQ
54v7BHh/0+eLoV595w0HLxizSLi82DRF11YK+tc0waRN9Lnjm1+iiuhzx6DP
I4UHnfQ50I6zLbeP/azF/nJc3UujOpSXPBNa4q23dE0Z9AuvC5Yz6PO/ktMM
pr0zaaBw3ep672afHTfZOtQtPDT1IQV5RmV63krJdg6y7veVOzYljRTkk7Pt
G629zUbiee3D8D91jRToGfUo9Th9Hrxyz9uB528fUKDPgd2Lw9sLWIRjnM0u
of9aMF+FX/Y8Sn/XYgvRfbtF7y3Glf2reUvp87wJyoUfsiTeUaB/msBdubD8
YerhQ4OgRR0tqMOXbSsO0e1yf/nskFcj8xbQ4d1uxRk/5/OS/rMTe3v++0uB
DkluHyfS7fLo88UmvZH8AL87btbdAjpuvZxNTx/6J56nZzUmDoixiKlI2rL7
VizMzy/vau3PCeUmT1Q7vRxSerBeG3wDf9H5fBPhPPxpJA9Du89T3BBE/+7k
a1Pf0/EAfsL76q8+dEc5fWXyG7w3+/j2K9NIa0eMW+DbmriPmSy1Qn+Aa+zX
nV5uzZQD7z12li0acJ7hhuUAZ+mWz7fRc8ZygH8pv1NfG+yA5cD7M6p1la3u
Dd5YDvDFr2+Zdu5ins8C//vUKlcw2xXHC+DHfy5Tl3lFMP8D/9q0tZ3fwwHH
a+AXb63O90hWQn/gPfxL4Rp3pUMD0R/gUo7Np2WeMM8xgSfEUTPDrzL7M8Bf
+tecNv/BPC8GfrMtPL1rqivmJeAm1w+5Uw3Mc3ngXE+999+8zfgP3FFQOok+
xwr9CHhIeLXW7jxmHxXefx70fxY1HBOC9QK+uZdPg2Mr89wQePgp52GhSmY/
BPg81fik1y0+WC/g26IPVK92YJ7PAjd+NDHn0T1m3wm4V/f0oLWLmOfgwL9E
ZsrT51WhXsCnbcqJ3riT2UcFfvbiHrOX+22Y/ZAxvn1BY9GzLrP/eY9InriE
bKDOW036n/eI5MmS3wPaZ40m/s97RPJEvHjLxLuxzHM94AeyzRVtK5n9CuCd
b3t+/Mfj/z/vEcmTrQcWx/xa7/M/7xHJE6OsbcF5Kl6oA/DYU84G9HnV//8e
kTxZZPdRd99ZV9QBuHnJSbmfG5z/5z0ieZLhd36S1GYn1GEm+68gCXy0vSM5
Qw+5zcxXdfR+tdAWy5l/iuxRn9G/IsRVtl5DW9Ac7QW357+h912F+8a1Fue7
ov2jjeOj6X3XS285x+WspFDPnWty+ul9V2OZAkuHJmssZ9W8KZ70vmLM8MF7
gRpMHrBl+yNJZI7sn2Juwuw/94eGLKD3FTM4fEVEMp1RNyO+tcfofp235Fkc
+adffyRil+j9tJYzPB8K/wvA8ottdrrT+2kp8t2iE1Yw+64LTARq6f00bbWG
1/fuM++B6OmkRNH7aSJqk/ZEz2P2tzsmcPXS+2nGubcykzWZ/ercdyay7O9C
Cwwo/9tPZ749VUT7U7B9+hbDHcbo50Tl+2rekrKEo4X3dIEo009lpF0v0PtR
tzQXTOk+w+xb1gqVu9L7UTEKD/Yp1/min9lcji/p/aiGwP79RXO90M+pA1cj
6f0o/6r2nmNG7hifo3+lSWNt8IZpyi4Yn/XtF5Lp/ShO1QktFrJOzPOOW583
0/1LMjKv8+4//fTRpUhp2v9B1YWW3g5Mnr/dm5BGr6PmL1JY/+RNKNZr8/c/
KvT7zHZXVS5fTWD2Cd0+x5+j938mL+cc/rSc2Sfkbf7lTO//ZM/oNOD2Yd5b
eFC7tIbe/3mya6+WBiezH7vtybe59P6Pc4LlotyfHliv0b+ypPD4z+8VXMy+
9+hfOXK45wX3v/3Odq/SJtr/e7bxdt7yTL/r35YtSfvfTO5/m+dJsN9d3yBz
hPZ/OSfxXZVhh3xhZcJGWv+g6wMRVrPEcP7puFSsgva/QMHwoNZaNeSTLto+
octJKX7zvbPagFnP1q05QK/fY172FNPndv//+CtC+vZFNO11NULdApbJ76DX
uVd0b4XS57uBj5YjTtwWvgj4McJxv+Ku1Se63y04Y9upoWaOusH5I4trb0ou
HRBHfeD8xQm3a6f6V49DffTK/0jQ54yeh/KeT/togBzOJa0J4M/cRDHvPf7e
PKA+dYkMqQzxaL+3UQ3nOQmr083pdj/y0GEDfY4buOzJ0nCa837zuJR9gclL
z8f2JXI065077ob8z/uQ8mQg9H5u2TQ91GFj7tXmN6VixLtRxHrKXk0sH8aR
rUFdf+jz2sDvCV5OoHm2242q6yMcyt9344YjHQ9Zevouwr2KyC++mi9E859b
l0f19zDr/dF2GVn3xArx0O0I/ohmXNov/V6UjD8qcFN5XSfOh9/ZBurT9gKm
B0oaBTQx/te7+aXSz03mni1YNqHDAvnG6xfi6TzposVXXPHBGtsxVuyvHL2f
n7flgqRsEPNea2zx0rvs5w698TFbfe2xX0D7qq+Ns/wjbYrl4zloq8dTDhsY
YzkwvzLY86QwfoUJ2t9n91Nxckzcp7hKjnkfYPjR1Ul0/q85uMFeaYUBU06+
6hza/wFTI7u0n2pYDry3rxyyoda6twfn4aN/pYn7+YLxu/+JN5gXWVr4X7sd
pYZ5Jutpjy79XO/A8+P64w9YIHdyqFKgn8PareGfqbNOGfktdr8QJTkTu9Y1
Wev+z3u5I+P7R81P9Hne//9erjyZUfwgYGkE83y8u7F9LZ1PrPbPTZh93gw5
nEu66hARt/SEDsYPnPuQzpt8hW8krsAf0ME9pNkgwZfZH4PzGuJlr0TX72XW
xdB/CycFva75ZIx8tL4SJNSiTJk+bwtcMGy6Mc09995v6h7hEA9OLx3u0e27
089ZzntknAX+MW7SLPY5vmvXrtPn8cHPk3IbttL7xr2JnIrHdZj3sUfjWoKs
kiubTp+fBe7C3g+RJB/2Hrz8L4d4O/xn+RX6XC20b3bO2SQ6z29K2dZCn0+E
fFJ3xPw7nVfNFXS4vE8z7/36Hw23pMfNAZOAcfc/6iJXsZpiQ49fhzdNGIoc
MsF2Af3ndXr+qXnBvGcC7TVxlmrWPANbjAfgKoUyOtn/5KtZTvXFdN74qSVT
WDaSNyBffem44Ue/X/Fjxtm83VOlmOfaPjkd9DzkpUGD7PuFzHOHnadaC+n5
AP8a/Qv0uVTgLYavKtnfhehddjp5hIOf3Oy/skT0Uq9a3TEL1JOHPZ5KkCOH
1bfQegKHuLrY4FhPjxf/f90nQhabdXwTaGX2XSc/WHGNfl6QY7NpVtxsZt0x
Og8UJonW97vXGVli/4U4/HG5bXZUkhXWF8YFlWAzwQ3izPsqHZfjC+h5SALn
K9UfPubIpb1SZ9LjqadE6Kvm/Uw8gP4HvSpOTeNl3k92U7o5nX1u9z8hLjpO
IM5H41OK7Lbnacq4ZIvc6PC3ifT8MCpU8dx+CQo55LcztlWvgyusmPw5lieF
hN4rfVJj3ueRahnkZ20QJ1MVF5TMfSKL+sD5R5VfCjF7nJl9GIjzY+ZuK+ZP
48Q4hPNiC/zl3HhTeDGuHtTWOtLnB+9OJXO6p/fjfovLu9yXim0SxHjflltm
S3/gfo7LunNeZy8KkMI2R3G34Ar83WzbojQreQmSPm3t428OX3HcWUatZe2L
FyIDL79l3/1bh/s2l8OUV71MliJWAST/rupv3HdSOC9oaXhOlvQaanGpXxjC
fZjmL9dL6HNt85sFiuhzbRhvRZc065tFybiUmZ0Wvp8xn5dNk1GizxPxP6ve
qbEN8vwQ5e+arDXRXZwE7bqnlGHRjvsklbsG5tHnoaIuvVtKn4eC+B/XfVhs
4TgZ8nr8e84ZHX24T3W/9/SSX0YiZIW7wIcWs1bcZ/tSY2rInt8u2Dj5xD/9
dOZbjpIvNwVIkHHax0lHW7Fe34VfSdD54c3aiOLhkfEd9CmbvG3Ia68UeaIh
/bFuUBTjcKlaXLfXyHik/sE453IUM67xv9govGiSOPFL3/xiKycH5k+puncr
+1xFyJYzl4y3tw1gfe8nbzxOx2ElaT/pPJKH4Xvj2f8Zdyae5CCfvsxMj5EX
wfsIgGfdOBZN3ZXC7+ED791TMCzwVBa/MwxcS1jpxvWz8vh9XeAXbnyca96t
gN/RBX569X+PN7xUxO/lAv9enqGWuUwJv6s/9+sLi/zLPMR5qPj7Rgct/L40
8CCTRa8kgnTx+/zAQydLSWlX6+H32IGv33vjRtUkfeSeMlpTzG7ykYrPJXKv
xZl74sBe5aiFs0ipPnKwX/fj5aFt30xRT7A3ODXPyKhGHznYLzsVo6N1zRR1
Bvsnt5am5lboIwd790jRUwPrmfvmwP5o/fpPzbn6yMH+cb77zMmOzD10YO92
dPDynkh95GB/7LR77qt+E2wvsDdf5SfyTFUfOdgPP4hpl7higu0I9gM7G6cd
f62HHOw/bt1bIBjP3GeH9b1WHfJihx5ysE9cWZUx3ZK5587AafW6u3cEyNfp
u0nlNBNsd+AVKVWVc89ZMfd0jPH0rcbLpROsmHs6xvj+ZfcSV+laYTti+dyn
/TmrLJl7OsZ4v/2uvZ/mWjL3dIxxgWlq4vkDFsw9EWO8qqCr+nSmBfP97TG+
WPt8fKyZBfPd6TFextF9Zl+NOfN96TE+TmnCvLXx5sx3pMf4f2cGVtmNN8d7
IiTmPzwUWilEnimLDrbNtUfdevYo3/lYLUIO8px7vM6Z4D0CYG96UV5YqtMe
+xfw/aHhb6dXMhzKebLVzbRjOkH9wT75Qb/GrGn2yMFeQUx85892CtsF7BM/
hUakVTP3CYJ9oKhZoJ4Uhe0F9o2cL67ctmTuGQT7r5NrHb87OmE7gr1fkKDS
9lzm/kGwd5lRGim+zBHbF+zPJgXfzOe1RQ72PPW6SW9PO2C7g32+WIOWfzxz
XyHYJ/N07+nstcd4APsC9UTp1K/MPYZgr7JiYq6Knz3GCdhnfDtx/MhC5n5D
sJfWup3+8bgdxg/YC8l5f9r1jbn3EOxLK+S+bpeyw7gCe64Dhkb8q5n7EMHe
RCdVemKyLcYb2AdunmBynd8KOdi3ON8s3zxsg3FYf2Xxx/gXYmT7/obWm49d
MQ6BHwrzmBd9j+EtS2dzb/kqTs7OnOl2zpK51w/sL6Tt70yY44oc7KMnjeub
I8nc9wf2b71jN8x/ydy3CPYfP31bcMGfuQcQ7GOmtLckEhfkYB9waL7g+t1u
GJ9gP5xrfM35LHM/I9gHDZq9Vq93xfgE+7IDfN252s7Iwf6W1tAvS0vmu4tg
37eswPxeMXOfI9hzDT5YGZ3rgvGJ9Y1+EHbPhCAH+6a6vY7VYsz9g2A/+9xh
27AtFHKwdzpZlGm7m7mXEOwTXy+OOV7qhBzst1Uln94py9xXCPZ5Kb1TjHqZ
+yLBfnORcuDVkXpBfIK9+o5FoRlujsjBftNGM8knhLnfEPXvrLxZcNABOdhL
EeXcjtsUxifYN45rPO3C4YAc7E0vBxh2iDL37IQkC2T5fZcgkxN+mk+o9Mb4
BP5peH6fZa4PxiFwyycWK5Y99MJ4Ax6pyhc+/ZknxhXwNUK3aj5/8sD4Aa4r
ZiT6W9wD4wR4/avlb7pH4hbiAXjXUfNu51w3bHfgc/I9lQb+uGL7At/j+9pj
4jxXbEfgZ01Oap1scMH2An7tg96CnHAXbBfgK2YuaP7c5oz6A39pmzS4eb0z
6gxcIPj8g63yzqhzxYHz2jI/Jcl03qutqlV+yK1OT7/a2C1FOBacPOBeG4j6
g71upnTHEVYAcrBfYjXn96VLzP2JYC+0RrjtTbIvcrC/LyX0JCkwANsL7BMq
xYIFJ/sgB/uqQ5uar371w3YE+/WH1iWUuHojB/vu4YqW/874YvuC/Uezk+Mp
Xy/kYK/neGOwYJ8PtjvYq2U9WG61yBM52BfOtUqbtt8b4wHs7fdUX8/O80AO
9nN/573dfsEL4wTslTeLzTn4xR052P8wF+3Z+dET4wfsT0qW+tUQ5p5N1Eeh
Pz1AzxPjCuwljp7JmlDshhzsn+6MeEaSPDDewH7ZuqK+WwrMvZxgz1Nf3ujy
zh3jEOxbn183N9nP3NcJ9ufGJ2jsDnbH+AT7yq015YbjmXs8wb7g3sz1Rx+5
YdyC/Ymqty0Fp5j7PbG+4nJJnoFuGLfH7nD7FvVKk+6ZAdcdVzL3eyrWnWpY
3C9DrvsYUrXcEzFuwT4/p3St+uIQ5h6fMXuxs0pJXvqhGLdgr1YRVG2bxsQ5
2JtsW3x21lAwxi3Yk6N/np5KDWTuHR6zPzbPefVveeZeS7D/2Oo++aQac68o
2C+ovuA3P4i57xLsl+ce3tz3wY+5p3jMvi3Y+Y4sYe7BBPt9d1YOOz1k7iEF
+6MfolIO8zH3Y4L9i2/5lHA1cz8p2N/eErb3Zpcfxi3Y61Vs3Nzwhbm3FOyl
nQ23Svb4YtyCPWdwT8NfBeY+U7Bfz8f92F+KuWcTy594/0j0TOaeU7AvVzzs
+MuNuX8T7O/7860rPsvcfwr2botCvhts88a4BfvnYv5TiyU8mfuUx+xVLt2w
K37rhXEL9l4B44IvJTL3pYJ9Z1mTyUo75h5PsJ9i368R0cPcowr2vXPbEweO
Mvcs7+wIW2z9V5Zw5XwvSM1h4hC4qO7ijJQVEzGugEsKGd5pWRGC8QN8zrUW
fsGsYIwT4M98xO1+vAjCeACecDDg8iGdIGx34I0lZzJdVQKxfYHfuJZtdkM0
ANsRuHppW+FlOX9sL+AK27xvu1j7YbsATxl6GmsQ7Yv6AzfuP1P95pQP6gw8
eXH8XE2WD+oJPOugmJvHLG9SN2RwZuVFfrL+7kYJ8fNcpC2J7+YqPw0yjrdS
PniRIHJDHer4tnUaJEIkYpOBmjDyJ5elF1Tt1iAl0kMdfG9EkPvuvdzwYoT/
UDow6f0eMeSdXA4VczZqkIGbrZFter8oWEdfrnURdr6qQ7Y9lrPJy+5BHsKR
0tLVaUxk6v2FJvP2I3edWq9c5G1KCto2N4nE/UX+4cqHK0kfTYn8YMOUd0tZ
uE43DM5dXSlnRsK5Vt+5qc3sn7S6+61bJ2VG2iVOZ8ZlMvse7xoOT3cuNSUm
Ct7DgX7M/kaxJvdMswRTEq/yYYE+F7OPEVAVLfTVwZTc0E6q4b3G7Fe89Y4o
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

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmgX0VcUehU/cuecKCCog0mEgjXQqigUiAoqAIJICooDtE1vaeGI8O56t
WFhgi6JgYgMqKAh2Pjt533bPWq7FrPnu/OecM2fOzC/20HTc9CHTsiRJquZJ
wr/kAsq2aZJcR/0d5X+UQNkcf4s/oXxPKVN+p+EN6go/PqBOufZN6lcpGyin
R/6Ich/lydz3WqKH0Xcd1UJKwfW1qV/ifg/wtw/h+6mr0v4xPI72rxK3X0bZ
hmtzys1wiTpEblL2GO8suYhnF0mygnv9Cj9PfV/we7bUMynbwGNou4P+/EvO
pf9Sfl8C/xT8rj/E99V418cxf0b5UWOnPMd9q8T7N6bjtvDYOGaNTeOelfkd
9V4v5L7HPOpH6Hcp/At1Ta79Gc6pt+a69xPfV++q+a1FeTT3ez1FPb2SJH9y
31oMYhr8B1wTngH/pefBp8D16LszfC8v+ADX1uP+x1b83RvSfhxcDW4Ef8nN
n6TPt9Sv038XeBfal/F7T/gL2k6k/67070T7CXBdeCf4eHhrzQF8N/1upf83
XLeZ8gjciOfeQ/ttcF34ZPqfT//X9EzKFbRvoX40+Dv/ETx/mkd93+X0/ZJ6
GfUajTHxN9PcfBXXRhrnSvws/b6Ic/VY7m/4BPViLqoHT9FE5h7bddRrqT+n
bBX7leOzqgOfwuODnzk19XNnV3zfrfn79mW3aR01g7eL6/ZE5uJk+mxD30dp
e4ZyofYWf9Peu43+y6hf0D6i3EvfldQnUj+ud6D8m/K01hflGsoO3P936jrU
z3Cfq+BzCn+31ZSLNO+UdygdKNUY75/Ur1HuyV3flXuvv5h4vy+Ne/XeuF9f
jft3Mf3Opz6e+gj6j029J7TuJ8DNUu+nydT1Uq/fnagnUcZTJqbeJ+Oo66b+
fn8k/n6luLfG0N40tb0ZRd1Ez+C9btF3pb619Le5SL6Adyz7uywqeRzDUo9r
JOXw1HZK5dDYtiY+b1Wch7Xx+97I5HekPpP3uj7xXGueP+MZ/6Xt9Iq/1WPx
e31Ie129J/UNief6ovh9nojXfhv3jsa5Ic6h5rVc9l4O1CcUnsuHqV/jHXbW
d6L/q/BO8FvwZyWPbU3w3u0E38R4L4LrwHPhtfztntjn/eDv9h71bP62PXxa
bhvyF/w65VSedwZtDXiv+3K33U39l+ZU7xC8b96Mdkb74N04V19rXIn73cI1
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
3F0azEe59QqtgVMz99f9a6XO6V6hdI8aXa143x7xmW0pO6ZeQzflziWVU0pP
kz6gPFBzInsizWpt3I/SLBTr0pTcpbwZrplYk1FurVxXOa38tvy1dIENuf22
dCDpFmOidrGe3+2lVebWDEZF3UBaxYSoV2guO8T5lObXEz5E2hLX7E39Vu74
U+PrUHaMqTFUifeXLzo793W6/iZKZ/odxe9fg6/Rtco5BtE2MHUu/XKMJZSX
aD40L5p36SnvJdZXuvC3Bvx+kL4DosYhfaNm6nnXnB+Q+tl6bv/U76t9KL/d
D66T+jv1Sv3dtC60PqR56D0XxvfenPvei3L31TX6ZsPiXGq+D43ztznxnOke
mrc9Uq9BrcUPuX4j9YO5v4N0H12v+dQYpb9p7vV9Nf81Y46mXE15jPzHHbnj
L63NjfE99D5aiz1jf+UCo6KWpDENj99T8yj7o9hp17LjJ7FsaxvqXeK6Py+3
Hiv/cQXl9sS+Z0FuTVj+RvOyLn7TJTH+URykPPU4jY0B9oUHwE/Ae8MHwk9m
jtfaxW+hvau9rPhmJH0mUr+dOX48Ws+A94EHas4z65Dyb/Mr1kSkjSg3WVHY
RhzLGJ4r7HenB/tK2f8Xgn2H/MJK5ellazvSmeUL5FtO4p5X5vZlp1MvD/YX
LwbrenvE73icYgetScYzQ74W/jyzVi+/PY/7rMwdQ8l/X547bpKPP4pyArwp
cx5/vGwdfKzsCPwF/HHwOmzH/dbk1v2kxy2OtqlNXF8d4prtRL8+qfvXj+OU
/dsrdX+tFdkkrfHdtQ/KzqmVWy+nbpU6btb6bC7bkzsmVWx6c/x749jn05h3
yy7KtqmPYlflkTViTK5zBc2T1pjm8s7E6+O3wvndddyjZWobIpsrW9gi2kOt
i/5xbcjGqv0dxRypbYTsg/bt4Ljudb1st+7XLfWe15rcOf4W6xrZf92jY9TQ
pKVpLp5P/tGV28Yx6F2bx/ftm3rPa79/F2wTZHNqx/nV3NaqWAdTjLGK+iDZ
auraFWtrijfOKuzTpXcqJtf835k7XpLf38A9z8kdGygeGM3v8+B7qUdR5sN3
Ux9OWQDfExwzL4zjkrapuFQa6nYVx211lMdVrCMo7voh2I5JM1fsId17dW4f
1Jsxr6WuUbadkJaiGFh7vxZcrWw7J61Gev6yxOca0uqU70uzH8HvkxNrj8Pg
ExPrgUPgGYm1tX2C4wRpa9IMZsE/ZI6N9M2lrR0MH5tYMxwcHJ/8rRnCpyTW
M/sGxyHS9w6ApybW6JbEGFKa5EMx/pRWuR9lSmJt8JGScxBpnlUr3pPSLvrx
+6jEuuLw4HhPGuZnUYPSvrkhxhCyw4rJlQdJF68WY6qLqYfqWybW66rqN7xQ
f6ecm1i7kzZ2N3xJbu36Mu3/ijXtS2VTKta6FUcpnpK/lN/8jboWZTTtl1F/
X3JONAf+seQcZ16wDemYWvsK8EG0X0S9ndaTnktdU+sJvjRYk5c9lF3cEnMT
nWfNLZyXn11xnqIYWzr3MzEWUkz0dIwxFGso71AOqFz5D8bTK7EuIT1c+1B6
eZWy/WTTqPs1Sq3v6UxQOoD0AOU+iu11PqkxKB/WWavyHeXpytd1NqYzLp3f
aTyHcZ91uder1q3O1OZE2ysbvKdyb3hi3KfaC/LtDxU+E9LcfsP49qZ9lmxw
yXmrdPKnSs71ZsAb4LaJNaXNcPvEmtJHcLvEutO6kmNd6UIflBwDS7+S0ZKf
G1/4PFGxvc4Q3ys5Hm4j3xU8BmmDLYLzMmlEz8UYXpr8j4V1JOmEL8bxSHfd
OTh/GUp78+AcSjpSq+BcT9rRjvAw+GDlZXH80m9rVqztK296m/ZdE2tEG4qY
0xbW/PanfSl79peS8wtpcd/CXRLrb7+VnINIH/sL7p1YUyqCz0+lWX1Zcpwv
Pa0SnKdLO/2J9u5wj8J6p2zIZp71ZtQZpGV9HbU7aYO9uXZCYg1/bcl6aSuN
v7DeJY1UWqnueYe0grj+pTd2ho+AR8E94fGJzwU2lawDSK/+uGR9QJr5p3Cf
xLp9HcoguJ9sQHCeKD25fnCuJL23dnB+dAC8Mc6Dzil0jqV31z4/JcZUiq3e
KVnH0DnCmpI1BJ0vSNOQnWjE93krzrM0eeno0iWkT5waYzbFbvI10iEa0v/D
uAd1pvNEyVqKzoBegXdLrOcv03mt7Haw9qw98g5jnJN5rykW6hqcG0oX7Q6P
S3x20y7aEGm2HYN1BumljaPdk568PK4lnR81DM4rpY1vAx+QWHv/qrBGI21Z
GrPW5wrpf8HrTZp5Dbh/Yu1d5wPKf6VRVQ/Ou6XDvxT3oM4mvitZI5oNl4Nz
Z2ns3aI/up66R/Q1OivpExyb6Tzl28Jxp2yszp2kjb1M/XNhzfZqjSv6I53R
7Bt9n85uNhfWY8+D1xfWpWWfB1FOo8+dwRqU9r7y+48Ka9rzaWsdfZDu3zL6
rKuo1xXWw/UuXxTWv+RT/lf4fOFy+JfC+vA18E+FNWRd+0Nhbf/K4HM2xaWK
T78srKnJZw0Ijj91PtUk7qkrqL8uHMfLX3xX+NzkP7KThWN6+Y5mwXG77v9x
YQ35fHhTYZ18Adwo7i+Ns39wzKwzsq0rjn0Vz6TBOYKu/b3kb605+bPkdaL7
DAyOvXWm1j44R7g2WL9QnCA/mgfnCxdSd6AckzjmrBH/D8Pf/1eh4jNQ6UXy
XyPwHe9T9wrOX3RetntwfK4zteoVx/2Kx6pVHPcrHmsbHHtozhvEfaH5+bXw
uYbG9n7hswP5lN8Lnylo7W0pOT/SOvm+8JmR5vz/fE1T6w==
          "]], Polygon3DBox[CompressedData["
1:eJw1mnfgllMfxu/fc57znCfZVCqiNI2GUooQQjSsjOysUlYIiUKUvUfmy4tk
r8psGCWJaKHsStlbSrzXp+u8f5zf71zne+7z3Pe5v9/rO87duP8ZB51eKori
Gf0p6/9FsSh20v9xwvNSUTQXbqbWV/1D1a5Wv6fkr0i+VPhNXdRAeMNQFO8I
D5e8k/DDks8V7lIpil41RXGQWo36QyVvLfm9ks+W/CFd96ZwV8n/q/4fGvtI
sgEaa6m5n6o9o/4wjW1QLYo/9Xt/qHXRvJ1pWvNkXdtUbXv1l2qN3ur3UXtP
/XPV3tL196tdrv75Wq+t+v/Reu/p+qOEhwmfJdl6Wv9I4QuEzxReV/ho4QuF
hwivX/XzfCQ8R+13yZ7TvTRUP0i+seRjtGZ7/fYi4auEL9ScjpI/pN/7gP0S
vlv4Qck3lPwC4Xbcn+RzJD9XuJXwHcKzhM8TbiN8n/C7wn+pLVZ/kMZaS9ZZ
9/M670NtuXBdtTpq+2teT7Wf1N7V/KMl30Tjm6nVU+uh8f3UflB7R/IjJd8o
+p3ybvcXXlO2DqALvNMFwkuEXxbeT3i18DLhV0vWiX+FW+h+auv5lwtvoP4c
PWdP3kXh9/Gj5s/W/KOEN9bvXa7WXf3nNfYJ715z9tT8KYX14V+NfSXZ2cK7
au4m2rOLhNfjGv3el5rTWPP7qb2m/kea/5Tku0q+RPJvhd8QPkR4HV3/He9A
uK9w7bx/HXVtI7Xt1P+tbP1vrbW+0Nw/1T7W/IEa20bz39f4oZq7VHiy+kFj
JbUVmveN2kq1RZp/quTbaXyN8BfCZwl3wbYqflez1LZV/x/Jv5R8iPAukv8m
PE/4ROGthD/W/Xyktq3Gt1PrpGteLfzOud+mmrO12sGSHaL2q9pcXX+C5I00
vlx4snAv4Rrhv4U/Fz5TeKdoG8VW0dF5+p2fhd8XPl64QfQzTRHuXfhZWaNQ
+zp57dVqn0l+hoY7aPwX4Q+E+wtvHm0j2MqT2qsJknUU3lHtKPWPzs/D3ndS
+0bjqzT2ia4frGvaCg+M5pcrNfaqZHdH6z57zF5/onX769rvCr//NyS/C12U
fJLkr6tdr34jjb2o53tN+DrhLYQnCU9W2xjd0LUzJJupdpvkzTU2Aiz59upv
KnlD6d504W2wFeHNhN/QnBs0f0uNvSzZG2r10f1g+52udqPkW2nsVcneEr5J
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
G4FT4dYp0brKN0Qo8f8AemBspg==
          "]], Polygon3DBox[CompressedData["
1:eJw1l2d4VUUQhi/cnOyhI72nEHoHqRKaSOgltCRUA4IIBJAmhCYgUdEHadJR
QHpHaVItFAVREDBUpdpBROnF93vm+uPLzrw7u3vOubOzm6jkQfEpGQOBwB7k
oZH8yRcMBN4DRuIfCQsE3oCVg1XyA4G/8G+hsbBisCjYD/jpaAqsPKwy7G/8
26i2YxxsB/NtR5fxXyMuP2w6fhRrHCVuFKwAbAYsGvYN7Ca6gWo4W/8C7QDi
wrHzssYO+naisvAIWDSsOIpBfYjLAHsLrWC+Y/hjUFH8SPpPMe50SLJLO3uf
k7SvEBeGnZu4T+jbilrCWqD+9CfTF05fPfxYlAxLgj2lPYefwnoXeY/ZsPP4
qagIdgRjvmeuk2gSsVthh9ED4lfrO8N24B/V/BkCgTWwHox9ylzvw7YQ96Nn
7xuJvxq+Cp3CL4+iYGvwaxN3lrGX0SVUhb4S9KXTXsW/gqpil4Sdoe3HnKsY
c5x2E32bUR94N/qvM99w+hrR9x16B3YA3YPlCQ8EmsBeQC8T3wMe9C0/lCc1
neXDRdr+xHjYeejfRt92NEK5AHs79ButhzUm7nnUl77u8Iy+/XbqV9woNFLj
0GjsqWglfRsY+61ntliqYolpDmuGXsF+EeYx3zT8GtibeLcGxId5lr/K4zKh
XNI3LYEKYS8jrhpxp4gbiBwsH/N8SvwulALzYflhu/H3oLdgVWDVYQ/wH6Jk
WC7mmch8O+nLwve7BTsAW44/Am3FH4ayY79JXEH6vmRsMZ4lK2wWLAa2i5ip
qBqsJms8IeYpmkjcCthG9ANxnxPzNqqKX4O4R8Q8RsWJywNbxHzliTsMi4bl
hi2ElYMdgg1nbA7tI1gh2IHQntPeK+zsW3yh3EO5sBcQV5a4g/RHwp6BzYfN
Q0fxHzDfBtg6xOME7uPHwAviLyXmNOyp9iksC2wm7CTskWc5o9wp5KwGfO5s
b2qPFnSWX585Wzen8oqxU1EBFuoN6wq7hn8VZYBNZ87n9M3xm7BGFs/2pvZo
KWe14nvaE/jHUUln+/gE7Z/4f6Dq2GW1z2mv419D1bBLwc7SVkTR2GtZow5r
nNd3Zp0o1I6+lvT9S/ssKo29mbiGxH1Gf1MUh/rR15O+MJ55Bn5d7G3ExRGX
FX8QyhS0vFJ+7WWNNFgF7Q1YLdg/sF6w3NiTYLvpy07+RTB3NuzZsBL07SZm
CMoctDjF72dsZWIbUpPS4UvQr57lvvZAEWf5/yXtO/BnsWv5dqBkQDdD+1e1
eCQaTty7sOrKU9aoT19G7Xt4HeUTrD0sE+wn9DH2XPi7aBwxH8A6YSewRk3s
Wmghioe1h1XAroiWeVaXu8LqYzdA3RjfMWj1WXW6BiwP7DH+WJQVtgWWF/YE
fxzKBvsYthh1YGxH5quiPYVaEhcH+464nsTlgxVCBVEr+prSd4t2EX577A6M
rYRdWfVU+cyYhTr30AT9FnznXdh79I3pyxFusRrTxdn6D2jn47fFbsd8ZXQm
oJn6hhrLs7RibC79FqoRqLuzb/ZQ3xi/NuqJnQB7TDsLvzH2Xsa2Zmxu/Nmq
7bB9sDaq98pJYhvBjsCSYDlhC5TLsHiepZzuAOh33u03tA97XiifH+qCQQ4d
IfZrlObsd9LvleTs+9ynjQ/ti+bM1wK1RPlhwaDtZ+3rffjve/Z9m9BfWGes
Z3VW9TbWWc27qnro2f7p5dtZoDNhpWfnQW/fznWd76qLqo/1nNXVa7Sr4b10
92DNgTx+G/zlnp11yb7tT+3TtToDYZeJG0pcR/yGjK+lmgRrBwuHrdN+hl2B
DYN10tnr2Z3iJeZrhd0a3ec57qG6zs6RK7Rh5MI5xmzGH4qGwT7y7Jx80bdz
WOfxh6gzLNG331m/dwNia8L2s25b5nCenRc6N+o727PXaZd4lhNJjH1OtUY1
El4ZtpOxTRl7lzFL4YmwLr7dgXQXmodawJr5Vt9U5xoxtrZqNWPjGevr+8Oa
wL6F9YAVgM0VhzVlbAR2JJqDmsHiYEWxi6FL6BPGzIdPR+Od7X/VgR7O3vuR
sxxULiY6qwv3aCfhl9G9wLfarRo+BD4QdodneYN5E4gZA5sCmxO0O9cq4uJg
DZW3xCVqXxL3KiwFdhc2BZYI660chy3WvUH3Z/wBxL2Ef0P1BNYO9rpn96/y
vp0ZOjsG636r84C4ycR1Vu2Db0EFnN1J99M2RrFBu0/rXh3LHBM9O3MqYP9M
/C9oKHGD9O7EpDFf0v+/p3Lf2e/3xNmdUu+p901DY2HHdO+FLVDNRaP1m6EG
2F8xXwJ92bU3YF1gp3R2o26snw+WEZaKPwY9A/uJ+X7UOUJfjO4mThvCznud
++P1bp59az2L7rsTNAdxF2EXUCXs4rDTei/d04N2lutM78ca6Z7d03Rfm0Xf
GfyBxPXBvqk16IuHjfNsnjK+PZOeTTWnVdDeQe+iM7kDaq1nxe/D2JhQjVGt
ae0sN/+m3ahcwP5D70tc91CuKmfbOMvr285yWrnd1tk++Yd2gmd383K+3ct1
P1ctV01PcFZX7yof0SHsgyiz7lf0j/fsW5b17Z6v+34KcX1hf/EsE4hrr7Ms
3P7H0P8a29Bk3TWUL6oTzs6RO9pHqsdB+59C/1tUUU2B1Ycdxu/MHNkYM9mz
O09F3/4/0/9pG2BDYL8Tl0pcN/wRWhs2DRYB+5q4TszXBpYO6wsr6dlv2V/f
A3YbZfEtx+vBDuEfRH/iv4muwlajXYy9ztj1aDD+b8SMhnXF/w88dcrN
          "]], 
         Polygon3DBox[{{1811, 764, 636, 635, 884, 1457}, {1402, 795, 915, 
          1921, 1233, 1234}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmHX8VlUSxt97f9dzXyzELlTWtXXtFkSxQEVFRBQLsCWURsQOBAlRQLpD
JBSRsGNBwcDAVgwWxVYwsfb7fJ7Zz/4x78w5d865550z88zMrdemY7MOeaVS
eT+rVGrgv/PTB/nWolIZD81EbgjfHqWnkRdDo1OlMgc+Cv4gvAnPHs38XHon
Q0NZcyp8YOyzL/IQeFP4ntDj6G7O+Gr4at65YVmp7KGDwJvBT4Ke5NmJ8J2h
ich3oL8Ovh78Yd79MvJc+AvQlcwtqlYq86H9kfswNw95P+Q7kJ9D9xuoN/QK
47XwF+FPonMYOnchP4XcDPkBznASfFve21TjWP8gfCbPzmduMbormfsUekh2
4dl0+D3wZ3jWCp0Z6P6VWW8u1J9nk+G/wg9k7yOhRxgvYPwG/E94Y+Za5Lb7
b4wfgE+Fr89ezZn/G3lv+ELm20MroL0Yt4MO4Z1jGdeJM3+P/Dy8EeNJyIfC
W6J3HPQY42Ph+8W7PocOQO4Efcia3xm/B79XdokzTIWfwfOjoF/ibDrjmYwb
QPdnvtvT4n71P46N/XWfzeNO9e66yI2gMazvG760O+PTw5fOzu1L8re9OfdQ
eAnfCDucwHwOPwh+ODSPZ7NK3++p7LMZeh31n/Cr2dzFPxnfyPym6LzF/KOS
mUus7QEfhM624jyvA30sX062xeqwTRfk7+DfQpPRvQG+hv1fYG17xrNZdxfy
FvIl5BnIOyFfn2wz2e5ZaDrzOzB/HfMfQbnshv4A5rdmfgByE/h8dBvD56Gz
FHm2fBzdGchvQxcXtvHJ8I1Z0x25V3LsvRCxeDFyDfQi8gT03oOfBz8NekK2
gvfnvVuKs8dH0pNfseYq6M7Ma1bEnJ49wTu6wE+AP1TaBxsgvx8+I995F/oN
+S34Mvbvw/5z0D0YPob5TeSfzO8I743Os8hbIfdEfili80705zC/G/O3CGeQ
d0G+CXlScjzN0hmY35X5m5EfRt4d+dY4243IzzO3F3ww+gX8VcZj4HN5/iZ6
vzD/emDID8gfw3vz/GfkjoXjbF7E2oOs6cXckqr9UjbWPS3JHMvnQEurXv8F
+5wo7Is7ahhY2hO+Se79u0HL0T+7MI69jny3sI33FOj8yPN2mX38mThH/dy4
dI2wBt2DkQfoffjiB8xdWNiWwvNL4Fey7x3xH39F5zbZlvn7km3yLfztuC/d
2z48G4ZchR8EjUauDd8O2pF3jYTX4nxj4a8FXv4bnX7CeGg48vrwrrG/fOCP
5JhSbClOr9Caqv34CvY8FLqOuT8YJ/h5jC+DXsrsV9cwNw39Fch/Mnc7/Evo
K+RppTFaNrkPfncyxkxJPvMNEa+XF45dvfsU6Hj0hylWC+eRifDNcvuwfLRb
YVw/PvQVa+PgG5TGcOWLnRn3Q/6jxneoOD0Lfi50fu49h4T9Z8L7QfcgDw9s
ln738Dn53hL4AmF25vy6LLMN+oSvy+enwVsIV5BbFo4p3d3thbFaOUi5aGTy
+cfDP4Ovyry+VbJNhIH1Cp9tHefvj7xP7nt9OTnWVwoDI3coh/xLfoNcC356
Yf89K2w+DXlR8tkfjvO/G/9lSGa8Ef5NDdzR+Ah47dL/8xHWjmK8W+481So3
fgm7xvJsCnxAchz2yJ0Df+PctzM+E/3OufPXF5lxWnh9SG7M7wovS+cl5Vvd
pXK+8pDqkzGBt8Jd5bFXM+cy+blyhOxwVNQgOn/dyJ/C2V3DT/UfFP875MYD
1US7Ry5T/dIx1h+T+zy6g+1y5wbZZXDYv3/4qeJa/6Fb7hh5K94nfNf7dwnb
vJI5j7aMMwmXjsidP2ckx+Z9pW0o/Jhe+vniwC7lN+W5/aEfsOd1jM8onC8U
g8ML5xDdRXdoTvL/VW3TlvFF0GuMK7nz5H+EO7n/p/6jcohyyU7Q65nPrTNv
wnoVnql07aLcozwjv5Ncj7kREUeKpwtzv0/vWpaMod8k1z5a1zN3jXR/xP4B
cR75g2JfcSacHBexrPypXKqcum/UYro3+cekwvc1unDNp9pvenJ9pjptfvL/
bhPn+SQzLguTNT4393kHglnbsMfA0ncovNM9jlBdFTj2cazX2snJtY1qHNWK
qodVFx/LHrPkO/CLosYTLj2TbEPZ8rjAK+GWYu6diLvnIw4Vk6pXdCeqlZ9K
zhGPJ9+ZbDU++OqQVZ9kund428K4d7jwLRl/VCd3KYwtmr8NqoP+LcKnwphQ
P57/FfijWvjvzHXzypgflxn/18+N9c+xf9fM9cDn4VuT4y41lrw6dKQrm8q2
us9rw1aymWx/LfK3Na6teiJ/g9yucK5UznyiatupBlMO+Sru4mr27a93Md8R
+S75BfJc9PeQH5X2uw/D9zok54KJzA9GZ3vVHMgLkA9AnoL8U9hN9lsv/7+/
10/e5xPdBVTy7FrhNlRFXgX/R+E8oP5sG+a2hrZQjRZYLcy+Cp1FyM0L12sr
IpZU5/wK/1664XvyQT3XOfRu1cPC1s9qHEM6g+5vT+E7vAb+YzLe3gDfkudb
5f4/3ZJz5w/JdaryWpX/e07hWFeemp05dpRLZAf9h5+T61vFjGpX9UW6W+XY
y5AHZq792sZdqPa7BBqQud57o+pa9v7kflD5aHCyvQch5/C1cVa9a10yDqhe
Vs91OfPrla5lVdP2CJ3WzBel+0idISvc961BXqo6F7pUtXXp/lLnqcCvSH7v
rVFTXc3c1Kr1lR+U68YhH8baDLl1+JV6k3OSazP1C/Iv2Vn5TXikvKV+8e+I
mXERN6tCVp5Tj6a8p1rqysCaRYE3igthtnKVaiv1bbo71Qp9C/fEDQrXuuqp
lCeUW4TVysP/i1vhS4PIwcrFa5J9UP6gfvfNwCj16Zvn/v9n8eyWzP1Ot6h/
1Fd+l/yN4RXVv5Iz9wLtkv18WDLO/4T8Gnxhci5pD29TGLNaF35eO3feuonx
xrnrfvna8vC3S8O2Y0vndtV78vE2cbbRpfFSWKn6S7WTanvVWuon1Veqjx4e
578N/mlyja6YVc/SgfmGyf4nP1T8ngh9GT7zULJNVeOpT1ed2bXwPeg+FEdH
J9f7+i4xMLmH/Sr+u2z7mPJ57Km9+yZ/Pxmkvavue9U3HRXYe33Un7r/5cpZ
0M3Io9B5rhp6pfdRbfJkcv2tOrxz4T5LNcWzikv0DwwcWx57rorzCDO/DOxS
X/Oq8Cr3txvtO6XqXmKq8nP0m4q19nGnyqff4+u9kDvo7pL7sgmlcX6D3P1U
m8glyjmTqu43hM8Tqu5bhL2No5brrnHVNatwe1zVWDYeeUz0ifKH0dFjjkEe
Ed8KRpa+ly0jRuQzqgsvgEZGHyobDq+6BxiBPCz6/WHIQ6O3HYo8KvpT+Zhs
oTpSthkS3wGGMH8vcl3V76XjYtPcWN0+/Fs2EW6rlpyY/P1KveHX4SeqjfuW
7o90b49G/rmJ+bXY9bxkWf/rAuQbkYcHPsv3joYfH76kekDfMDrrTmt8LvnM
jzWOd/WOM9n/saq/3+m9TQI/B8V3s68Vc3GPyh1XRS5T7/s467rEvPxhw9z3
K5+Wf40SPsMvDkzQvTxdda+iOvbIwv9XvYP6LuXcEwp/v5H/fFfjGqBW7l59
aHLfrf7issL3Kaw7Obl+0HebmwvXeKp7OzM/MvP3w5bJ2KhvF6cj90C+G7lF
Mt7ortXTCWM+gDdPPoPuvVly7aH77YQ8IvN3yKbJdcg9pes31X/qj1Vjqdb6
HH5Ssv1VN6pPVz3zjnCm6r5LtejL8V1DMSLc20g4DD8lGQ9VG+t7xbpY2xjq
lPn7kvoC9Uyz2KNRYFc/5o8JzNG3IH07UH2ob5363isbj6+63hDuCf8WMr6g
8LeyOXFO4fZ/AfRUGWk=
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1:eJwt1ElslVUYxvEPWr9eUTQGEDAqGkFRAgqyIMYomEIY0ggVEESiIChDaJml
iNgqYbQUTSkECmVWoAIWTFzAyo1BVrBAQxwSAgIJaMBExC74vTl38U/f5znP
GXrO+90np1dXVnXMsqwc9+BinmV7OmRZfWmWteDesiybzJuENvVa3jeFLFtF
91XvVM9Sz0Yz1pvbXpJlI4ztoN/ERGwx9wleq/wn9Gq523LreDfpCnzIm0XP
xhH5h7Av1sF8h2yXWZmndbYU0pnibJ/LdeNds95Ca5TzatCdNzN83g/0Ubl5
dBU+4o3hNfB60jfMreGN5I3AcJzEBd4pf1/DMNTLPyx/0P671M+q/zP3Dlp4
q2Uazcn5i/AbfQmtvKF0DS7Tb6ASm63xOO+QuVPpt7Gd15t3lLdR3UN93frL
rDHK+DS8G/dtrI+xY3KN6sfU/8jVyb1u/BfcUa+J+8N5+ku5R9W35GqNjeMd
5lXyNqCHe36Lt4n3CP2X3HK50bxtvKdK0/vGO7/Dm4DxaDLWy9hhZ6nL07m2
q6er34s3whBeAyrscZ/8bjxHl6AjvpP/QO59tJSl/jrO26ceEL0Y727fauNz
MQdn8S/vXHGf2G+H/NOy35r7K91ufAW9ABfovcb7qwtoMlbF+zhP528qpH6N
vt0v9zyvE7bKzeedzlM/RV9NjW9B5isMVj+IZmOLZQ7wXqQfQGd8b91leeqd
+kLqr+izVrkpvGHR8+a28Q7yyuml6OCufi+uN6h4T3Ff+63xB7/E+E3vMYf3
I/0ZnolvppDuMe5zRZ56bHMhvVW82SvobG4dvzbuyvo/5+kMy+P7iL7i/c27
zfvfHquiH+jaPPXntkLqw+jHT/N05828GeqZWGd+F96f5lZZ40z8tvD68Urx
RfHdDmEsPQGnecfijTCaHlWavqc99NV4J7oaS3hXivvEfjvL0v/dZv8T8X7F
9ZbKHaeH4lX8hFvFs3xtzssyK3G/u7gWZ+FV0C/hgFwLby0GxltgE29R/M7J
daWv+N+qeQ28NXiBl0Wf8xbSdwGQwaxh
          "]], Polygon3DBox[{{1944, 1057, 1018, 1017, 1107, 1708}}]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl09lTjWEcwPGntMy4S6kYWyWF0DkpsqTsQh3ZwynJPvIPKEt2/hQX3LnE
oBkzxhIV6cJ0wTDIlm3G+Lzj4jPf3/s8z3nPec+ZU9B2vKkjJYTQw7W0EDK1
0EI7+9nHDibQxtCYEJq1gFb20sJ28knyypmdOo3d7GEX23hi76iOeJ8BNpgf
W2vUBhLkUspL6zN0DmUsZzxbeW6vRKcym7vuFT3HgPU6wwKmUMVaKhnHoP0K
rWV+BjqZOGuI0e/MA/fKMi9jIofotV6u9czjqjM3rA3qQdfTOcCo683axEae
OnMk+gzeb5PmsY4+6zO1iLnc97oazWEJK3jhzFK9Z29S9DzusUUXs56FFPPM
uZU6i1WsZhGHqfCaas2O7u0+vdzxWxfp33TfpT5yHdd3+p46c6a9hOZpPi3m
Sq2iwzyk13WYTl5zkw+pIXTpRz2pn/SUjuhp/axn9It261f9xlnzdz2no3pe
f+gF/akX9Zde0t96Wf/oFU36LCc0oY0cM8c1RtKcE61ruqZRa37rOd8QMz/U
Qr2tt8g2F/vexqb8/1/8A2mmWgs=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stTzWEYwPH3JB2EtC1RriHlnqSbblLoopvo6hI1lXLJrm1Wiu4X+g/M
NGayMi1tjUUtjNH0d8jHWHzm+7znfX7ndxYnrbO/ti8SQlghLy6EXocCLeTf
RbGWMGiu0GGt1hpGzK3axhvzoi7rOhOssUI0NoRJ3aFTulOndZfOaLzO6m6d
0z26l3lzgi7oPl3URP2g7bqhW3ykw3lTlyg3f9ZvHIgJoZlcznObk9xiyl6p
nmWQcwwRoiGc0CpuMmmvRJsoJoVK9tPIFSKeuaxv7VZrOjf45Dcc13mf/zBv
t9ft/IxR51TtYcb9Y73HMbbZe6RnuEYDFUzYy9KnZPOEl0Ttv9AiHjJn76C+
4gEtHOW7dy7bHXNf6FzPV59d0udc5J27Ao2116GdtNNFG3c5wn1m7bZqPnVs
+Q/c0evUMu0+SfP47T2ZGud7+3SABff9ephyDnGVGpKJsVum7+2tej7HfIEv
5gwd5o93ntZxO2n6y12vnuI1PyP//9t/AaBISY8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1196, 1574, 1575, 1551, 1549, 2181, 1195, 1571, 1572, 1548, 
       2180, 1925, 1194, 1568, 1569, 1546, 2179, 1923, 1193, 1558, 1560, 1559,
        1524, 2174, 1916, 1192, 1915, 2063, 1502, 1475, 1191, 1522, 1545, 
       2178, 1922, 1474, 1516, 1520, 1515, 1190, 2173, 1513, 1584, 1514, 1591,
        1580, 1593, 1512, 1585, 1511, 1592, 1579, 2186, 1928, 1510, 1583, 
       1588}], Line3DBox[{1216, 1393, 1991, 1214, 1391, 1989, 1212, 2071, 
       1820, 1210, 2070, 1819, 1208, 2069, 1818, 1206, 2068, 1817, 1204, 2067,
        1816, 1202, 2065, 1814, 1982, 1200, 1489, 1556, 1488, 2167, 1199, 
       1562, 1465, 1528, 2176, 1912, 1198, 1561, 1464, 1526, 2175, 1910, 1197,
        1519, 1909, 2064, 1477, 1462, 1518, 1523, 1517, 2172, 1461, 1521, 
       1460, 1590}], 
      Line3DBox[{1218, 1552, 1563, 1466, 1532, 1821, 2161, 1490, 1467, 1822, 
       2162, 1491, 1468, 1823, 2163, 1505, 1919, 1993, 1395, 1219, 1994, 1396,
        1220, 1995, 1397, 1221, 1996, 1824, 2072, 1222, 1825, 2073, 1223, 
       1826, 2074, 1224, 1827, 2075, 1225, 1997, 1398, 1226, 1998, 1399, 1227,
        1999, 1400, 1228, 2000, 1401, 1229}], 
      Line3DBox[{1231, 1553, 1470, 1535, 1828, 2164, 1506, 1493, 1829, 2168, 
       1507, 1495, 2001, 1402, 1234, 2002, 1403, 1236, 2003, 1404, 1238, 2004,
        1405, 1240, 2005, 1834, 2084, 1242, 1836, 2086, 1244, 1838, 2088, 
       1246, 2006, 1406, 1248, 2007, 1407, 1250, 2008, 1408, 1252, 2009, 1409,
        1254, 2010, 1410, 1256}], 
      Line3DBox[{1255, 2093, 1843, 1253, 2092, 1842, 1251, 2091, 1841, 1249, 
       2090, 1840, 1247, 2089, 1839, 1245, 2087, 1837, 1243, 2085, 1835, 1241,
        2083, 2082, 1833, 1239, 2081, 1832, 1237, 2080, 1831, 1235, 2079, 
       1830, 1233, 1921, 2078, 1494, 1232, 1920, 2077, 1492, 1230, 1914, 2076,
        1533, 1469, 1534}], 
      Line3DBox[{1259, 1473, 1844, 2165, 1508, 1498, 2011, 1411, 1261, 2012, 
       1412, 1263, 2013, 1413, 1265, 2014, 1414, 1267, 2016, 1416, 1269, 2018,
        1849, 2098, 1271, 1851, 2100, 1273, 2019, 1417, 1275, 2020, 1418, 
       1277, 2021, 1419, 1279, 2022, 1420, 1281, 2024, 1422, 1283, 2026, 1424,
        1285}], 
      Line3DBox[{1284, 1423, 2025, 1282, 1421, 2023, 1280, 2104, 1855, 1278, 
       2103, 1854, 1276, 2102, 1853, 1274, 2101, 1852, 1272, 2099, 1850, 1270,
        2097, 1848, 2017, 1268, 1415, 2015, 1266, 2096, 1847, 1264, 2095, 
       1846, 1262, 2094, 1845, 1260, 2169, 1497, 1496, 1257, 2171, 1472, 1536,
        1471, 1258}], 
      Line3DBox[{1287, 1856, 2105, 1286, 1857, 2106, 1288, 1858, 2107, 1289, 
       1859, 2108, 1290, 2027, 1425, 1291, 2028, 1426, 1292, 2029, 1860, 2109,
        1293, 1861, 2110, 1294, 1862, 2111, 1295, 1863, 2112, 1296, 1864, 
       2113, 1297, 2030, 1427, 1298, 2031, 1428, 1299, 2032, 1429, 1300}], 
      Line3DBox[{1304, 1866, 2115, 1302, 1868, 2117, 1306, 2033, 1430, 1308, 
       2034, 1431, 1310, 2035, 1432, 1312, 2036, 1433, 1314, 2037, 1874, 2124,
        1316, 1876, 2126, 1318, 1878, 2128, 1320, 2038, 1434, 1322, 2039, 
       1435, 1324, 2040, 1436, 1326, 2041, 1437, 1328, 2042, 1438, 1330}], 
      Line3DBox[{1329, 2133, 1883, 1327, 2132, 1882, 1325, 2131, 1881, 1323, 
       2130, 1880, 1321, 2129, 1879, 1319, 2127, 1877, 1317, 2125, 1875, 1315,
        2123, 2122, 1873, 1313, 2121, 1872, 1311, 2120, 1871, 1309, 2119, 
       1870, 1307, 2118, 1869, 1305, 2116, 1867, 1301, 2114, 1865, 1303}], 
      Line3DBox[{1334, 1885, 2135, 1332, 2043, 1439, 1336, 2044, 1440, 1338, 
       2045, 1441, 1340, 2046, 1442, 1342, 2047, 1443, 1344, 2049, 1892, 2142,
        1346, 1894, 2144, 1348, 2050, 1444, 1350, 2051, 1445, 1352, 2052, 
       1446, 1354, 2053, 1447, 1356, 2054, 1448, 1358, 2056, 1450, 1360}], 
      Line3DBox[{1359, 1449, 2055, 1357, 2149, 1899, 1355, 2148, 1898, 1353, 
       2147, 1897, 1351, 2146, 1896, 1349, 2145, 1895, 1347, 2143, 1893, 1345,
        2141, 1891, 2048, 1343, 2140, 1890, 1341, 2139, 1889, 1339, 2138, 
       1888, 1337, 2137, 1887, 1335, 2136, 1886, 1331, 2134, 1884, 1333}], 
      Line3DBox[{1374, 1455, 2062, 1373, 1454, 2061, 1372, 1453, 2060, 1371, 
       2157, 1907, 1370, 2156, 1906, 1369, 2155, 1905, 1368, 2154, 1904, 1367,
        2153, 1903, 2059, 1366, 1452, 2058, 1365, 1451, 2057, 1364, 2152, 
       1902, 1363, 2151, 1901, 1362, 2150, 1900, 1361, 2170, 1500, 1499, 
       1501}], Line3DBox[{1573, 1379, 1550, 2185, 1570, 1378, 1547, 2184, 
       1567, 1377, 1977, 1924, 1557, 1376, 1976, 1917, 1503, 1375, 1975, 1476,
        1482, 2160, 1813, 1459, 1481, 2159, 1812, 1458, 1480, 2158, 1811, 
       1457, 2166, 1479, 1577, 1576, 1578, 1456, 1564, 2182, 1926, 1478, 1542,
        1541, 1527, 1974, 1908, 1540, 1539, 1555, 1581, 1595, 1554, 1538, 
       1586, 1537, 1594, 1525, 1973, 1530, 1529, 1589}], 
      Line3DBox[{1587, 1565, 1596, 1582, 1484, 1509, 1566, 2183, 1380, 1483, 
       1543, 1544, 1531, 1927, 2177, 1381, 1485, 1463, 1978, 1382, 1486, 1911,
        1979, 1383, 1487, 1913, 1980, 1384, 1504, 1918, 1981, 1385, 1201, 
       1983, 1815, 2066, 1203, 1984, 1386, 1205, 1985, 1387, 1207, 1986, 1388,
        1209, 1987, 1389, 1211, 1988, 1390, 1213, 1990, 1392, 1215, 1992, 
       1394, 1217}], 
      Line3DBox[{1597, 1761, 1762, 1673, 1741, 1763, 1801, 2257, 1790}], 
      Line3DBox[{1600, 1740, 1929, 2251, 1771, 1679, 1930, 2235, 1680, 1674, 
       1726, 2233, 1728, 1809, 1788, 1729, 1808, 1798}], 
      Line3DBox[{1604, 1932, 2188, 1602, 2217, 1656, 1606, 1725, 2242, 1657, 
       1731, 1768, 1769, 2250, 1744, 1764, 1658, 1682, 1715, 1716, 2260, 1800,
        1711, 1718, 1659, 1806, 1786, 1796}], 
      Line3DBox[{1609, 1934, 2190, 1608, 1935, 2191, 1610, 1936, 2192, 1611, 
       1967, 2248, 1745, 1743, 1773, 1612, 2252, 1706, 1712, 1707, 1735, 1613,
        1966, 2244, 1683, 1734, 1684, 1703, 1785, 1783, 2258, 1971}], 
      Line3DBox[{1617, 1938, 2194, 1615, 1940, 2196, 1619, 2218, 1660, 1621, 
       2219, 1661, 1623, 2220, 1662, 1625, 2221, 1778, 1663, 1780, 2222, 1708,
        1944, 2240, 1709, 1685, 1748, 1765, 1766, 2236, 1686, 1717, 1807, 
       1787, 1795}], 
      Line3DBox[{1631, 1946, 2201, 1629, 2223, 1664, 1633, 2224, 1665, 1635, 
       2225, 1666, 1637, 2226, 1667, 1639, 2227, 1668, 1641, 2229, 1953, 2208,
        1643, 1747, 1954, 2253, 1774, 1688, 1752, 1968, 2249, 1669, 1689, 
       1675, 1756, 2234, 1758, 1670, 1690, 1698, 1699, 1972, 2256, 1696, 
       1793}], Line3DBox[{1694, 1692, 1693, 2209, 1646, 1955, 2210, 1647, 
       1956, 2211, 1648, 1957, 2212, 1649, 2230, 1671, 1650, 2231, 1672, 1651,
        2232, 1958, 2213, 1652, 1959, 2214, 1653, 1750, 1753, 1751, 2215, 
       1777, 1654, 1754, 1757, 1755, 2216, 1767, 1655, 1759, 1961, 2237, 1697,
        1691, 1704, 1710, 1700, 1730, 2238, 1676, 1803, 1784, 1677, 1804, 
       1792}], Line3DBox[{1791, 1802, 1702, 1681, 1733, 2243, 1960, 1770, 
       1732, 1607, 1738, 1965, 2246, 1727, 1724, 1605, 2189, 1933, 1601, 2187,
        1931, 1603}], 
      Line3DBox[{1794, 1805, 1701, 2259, 1705, 1962, 1695, 1678, 1598, 1969, 
       2247, 1772, 1742, 1739, 1599}], 
      Line3DBox[{1797, 1720, 1789, 1719, 1645, 1721, 1723, 2241, 1964, 1714, 
       1687, 1644, 2254, 1775, 1776, 1749, 1746, 1642, 2207, 1952, 2228, 1640,
        2206, 1951, 1638, 2205, 1950, 1636, 2204, 1949, 1634, 2203, 1948, 
       1632, 2202, 1947, 1628, 2200, 1945, 1630}], 
      Line3DBox[{1799, 1810, 1722, 1627, 2245, 1736, 1760, 1737, 1713, 2239, 
       1963, 1626, 1781, 1782, 1779, 2255, 1970, 1624, 2199, 1943, 1622, 2198,
        1942, 1620, 2197, 1941, 1618, 2195, 1939, 1614, 2193, 1937, 1616}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{749, 868, 2170, 917, 734, 853, 2135, 2134, 719, 838, 2115, 
       2114, 704, 823, 2105, 689, 808, 2165, 925, 2171, 895, 674, 793, 2164, 
       923, 894, 2076, 659, 779, 2161, 910, 947, 946, 644, 2183, 768, 926, 
       991, 980}], 
      Line3DBox[{750, 869, 2150, 735, 2043, 854, 2136, 720, 839, 2117, 2116, 
       705, 824, 2106, 690, 2011, 809, 2169, 916, 675, 794, 2168, 924, 914, 
       2077, 660, 780, 2162, 911, 892, 645, 2177, 970, 971, 969, 904, 2172, 
       886, 933, 931, 985}], 
      Line3DBox[{751, 870, 2151, 736, 2044, 855, 2137, 721, 2033, 840, 2118, 
       706, 825, 2107, 691, 2012, 810, 2094, 676, 2001, 795, 915, 2078, 661, 
       781, 2163, 921, 893, 646, 1978, 769, 905, 887, 2064, 932, 935, 995, 
       982}], Line3DBox[{752, 871, 2152, 737, 2045, 856, 2138, 722, 2034, 841,
        2119, 707, 826, 2108, 692, 2013, 811, 2095, 677, 2002, 796, 2079, 662,
        1993, 913, 922, 912, 647, 1979, 889, 906, 888, 2175, 940, 942, 1973, 
       978}], Line3DBox[{753, 2057, 872, 738, 2046, 857, 2139, 723, 2035, 842,
        2120, 708, 2027, 827, 693, 2014, 812, 2096, 678, 2003, 797, 2080, 663,
        1994, 782, 648, 1980, 891, 907, 890, 2176, 941, 944, 1974, 883, 945}],
       Line3DBox[{754, 2058, 873, 739, 2047, 858, 2140, 724, 2036, 843, 2121, 
       709, 2028, 828, 694, 2016, 2015, 813, 679, 2004, 798, 2081, 664, 1995, 
       783, 649, 1981, 909, 920, 2167, 908, 965, 966, 967, 2182, 897, 990, 
       979}], Line3DBox[{756, 875, 2153, 741, 860, 2142, 2141, 726, 845, 2124,
        2123, 711, 830, 2109, 696, 815, 2098, 2097, 681, 800, 2084, 2083, 666,
        785, 2072, 651, 771, 2066, 2065, 636, 764, 2158, 899, 928, 937, 996, 
       2186, 987}], 
      Line3DBox[{757, 876, 2154, 742, 861, 2144, 2143, 727, 846, 2126, 2125, 
       712, 831, 2110, 697, 816, 2100, 2099, 682, 801, 2086, 2085, 667, 786, 
       2073, 652, 1984, 772, 2067, 637, 765, 2159, 900, 930, 938, 2173, 929, 
       984}], 
      Line3DBox[{758, 877, 2155, 743, 2050, 862, 2145, 728, 847, 2128, 2127, 
       713, 832, 2111, 698, 2019, 817, 2101, 683, 802, 2088, 2087, 668, 787, 
       2074, 653, 1985, 773, 2068, 638, 766, 2160, 901, 885, 943, 934, 2178, 
       948, 992, 981}], 
      Line3DBox[{759, 878, 2156, 744, 2051, 863, 2146, 729, 2038, 848, 2129, 
       714, 833, 2112, 699, 2020, 818, 2102, 684, 2006, 803, 2089, 669, 788, 
       2075, 654, 1986, 774, 2069, 639, 1975, 767, 918, 896, 2063, 634, 974, 
       986}], Line3DBox[{760, 879, 2157, 745, 2052, 864, 2147, 730, 2039, 849,
        2130, 715, 834, 2113, 700, 2021, 819, 2103, 685, 2007, 804, 2090, 670,
        1997, 789, 655, 1987, 775, 2070, 640, 1976, 903, 919, 902, 2174, 939, 
       997, 975, 976}], 
      Line3DBox[{761, 2060, 880, 746, 2053, 865, 2148, 731, 2040, 850, 2131, 
       716, 2030, 835, 701, 2022, 820, 2104, 686, 2008, 805, 2091, 671, 1998, 
       790, 656, 1988, 776, 2071, 641, 1977, 950, 968, 949, 2179, 951, 958, 
       977}], Line3DBox[{762, 2061, 881, 747, 2054, 866, 2149, 732, 2041, 851,
        2132, 717, 2031, 836, 702, 2024, 2023, 821, 687, 2009, 806, 2092, 672,
        1999, 791, 657, 1990, 1989, 777, 642, 953, 2184, 972, 952, 2180, 954, 
       959, 963, 993, 960, 988}], 
      Line3DBox[{763, 2062, 882, 748, 2056, 2055, 867, 733, 2042, 852, 2133, 
       718, 2032, 837, 703, 2026, 2025, 822, 688, 2010, 807, 2093, 673, 2000, 
       792, 658, 1992, 1991, 778, 643, 956, 2185, 973, 2181, 955, 957, 961, 
       964, 994, 962, 989}], 
      Line3DBox[{983, 936, 927, 898, 2166, 884, 635, 770, 1982, 1983, 650, 
       784, 1996, 665, 2082, 799, 2005, 680, 814, 2017, 2018, 695, 829, 2029, 
       710, 2122, 844, 2037, 725, 859, 2048, 2049, 740, 874, 2059, 755}], 
      Line3DBox[{1031, 1068, 2209, 1094, 1020, 1059, 2201, 2200, 1011, 1052, 
       2194, 2193, 1005, 1048, 2190, 1002, 1045, 2188, 2187, 999, 1043, 2251, 
       1151, 1153, 1152, 2247, 998, 1042, 1144, 2257, 1183, 1165, 1170}], 
      Line3DBox[{1032, 1069, 2210, 1021, 2223, 1060, 2202, 1012, 1053, 2196, 
       2195, 1006, 1049, 2191, 1003, 2217, 1046, 2189, 1000, 1044, 2235, 1083,
        1082, 1101, 1103, 2259, 1172}], 
      Line3DBox[{1033, 1070, 2211, 1022, 2224, 1061, 2203, 1013, 2218, 1054, 
       2197, 1007, 1050, 2192, 1004, 2242, 1047, 1125, 1117, 2246, 1132, 1001,
        1119, 2233, 1118, 1188, 1181}], 
      Line3DBox[{1034, 1071, 2212, 1023, 2225, 1062, 2204, 1014, 2219, 1055, 
       2198, 1008, 1134, 1133, 2248, 1135, 1149, 2250, 1085, 1150, 1084, 2243,
        1126, 1096, 1102, 1176}], 
      Line3DBox[{1035, 2230, 1072, 1024, 2226, 1063, 2205, 1015, 2220, 1056, 
       2199, 1009, 1105, 1154, 2252, 1104, 1109, 1111, 2260, 1164, 1187, 1114,
        1178}], 
      Line3DBox[{1036, 2231, 1073, 1025, 2227, 1064, 2206, 1016, 1161, 2221, 
       1160, 2255, 1162, 1086, 1127, 2244, 1129, 1128, 1166, 1171}], 
      Line3DBox[{1038, 1075, 2213, 1027, 1066, 2208, 2207, 1018, 1057, 2240, 
       1108, 1131, 2245, 1130, 1010, 1189, 1051, 1179}], 
      Line3DBox[{1039, 1076, 2214, 1028, 1067, 2253, 1155, 1157, 2254, 1156, 
       1019, 1058, 2236, 1145, 1088, 1185, 1173}], 
      Line3DBox[{1040, 1077, 1158, 2215, 1136, 1159, 1029, 2249, 1147, 1146, 
       1090, 1089, 1115, 2241, 1116, 1186, 1177}], 
      Line3DBox[{1041, 1078, 1141, 2216, 1137, 1148, 1030, 1139, 2234, 1138, 
       1091, 1079, 1180}], Line3DBox[{1095, 1099, 1124, 1184, 1100, 1175}], 
      Line3DBox[{1120, 1093, 1142, 1092, 2237, 1143, 1097, 1098, 1182, 2256, 
       1168}], Line3DBox[{1121, 1122, 1140, 1081, 1123, 2238, 1080, 1167, 
       1174}], Line3DBox[{1169, 2258, 1087, 1113, 1112, 1110, 2239, 1106, 
       1163, 2222, 1107, 1017, 1065, 2228, 2229, 1026, 1074, 2232, 
       1037}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJwcm3c0lv8bxzMqs6EdDRFFSTKidCUKRUkqGkTIapBQUUQ2WdnZIyu7RFzI
JtmRzbOs5y6SUfS7v7+/nPM597nvz3Ot9+vtnEvQ6L62CeuKFSs6OFasYCP/
0k6Le7u21aOr+nJA4FUCyyYXntp2nQbXxyviidQq/JhdeKgxkMCTU57GlZWR
oHdQJJ3ToRydg0eNdN4TuFbJ8/r11gTQP5QW0n2+GDnXTU3fbSJws87aNXu+
pcA2q1diqWyFGBWvJZ/UQ6CmH+ONkWA6WH/ZVHcCc3DrncGVWsMEDszim7pf
meAeTEkS8EvHzpZfs0+o5H0MK0JWPMqGrVFRDx6/7sE9ptdi8rSn8M3Iybbb
R8Jg3FWUqW7VimHTrCeVqpnY87f898Y9CXB9VZukyZFaJKgP8/c+IPBH0wDH
/rcpwGpyv2ycqwyNd2tsivlEoMim/W1F+9Nhot2i9J1dHkZMrCqy6idwXfbu
qKC1WWD/bODHunNJ+OkSL+/8GIG9nzfx6AZkg6zA5qdFFwMw7+Ig39YpAp2v
/eQJoeZAp84dpvDGaxAl0JI+NkF+l9PR3nosF1Zf3hTXsdMfdq1eKTnIIDB/
e7tcc08ejAt+fnbySAQYnjYt2kv+3tIiqdsfivMhRObB7p6HcUC5Vs2qQcZH
QOGkGeurArjGiDRiNU6Ea4ebYoPIe8qpqz4t1S0Exb4/19zTGMiueeTjwG0K
7gxt0whxtoZd0RuzTpUNIeV8bsTuUxMoOFZ5+kNDBLw+VNzRcawdkyIuKJ1+
zkSj4g72aalE+CW3Y+7b0c8oOm65aBlJIGMwP6rqbipoE9yfByozUSTOumI1
eX+ZP4ECt33SQeXnLn4PbROYCEuTq5gm8OCWvQHpfFmwRdhAX8klCR7xuBfu
HifQZu7gYI9yNvTPzgUP2ufAvbp184Xk/T3T9fMEYnNgbE+ip4t3AbwwGX6i
1kZgJmElv9UrF74YVwsvyXyAAnP7jSvqCSwOFP7jb5wH65U+Xr30owhiBp7f
+VZBoD2LnIG5dD6sVL7io72yGO4nrB23JfP70PZaZvhiPggEunJxpxaDfeul
GtsiAr2c3L2fFRXAI2x7dGOuGCKHiNTnhQSaMU8nCt0vhMYTTySzeEvg+n12
xwv55PNZKmpXdr0HO9uJTYHnR7C39v7ZrGPj6NlrpvHPLBJS1O2Pj9xoRks9
nrDFtQQuGxfQaUmJsGNT5sKHoBQMcPFKfUkQyB449rdOOxVWKk6z1tx6B90X
hqTW0wmsq5vYHU1JA9PCrPvb7Esh+BtFT6qUwLPBb6qMV2aCVvINPYGUSsiL
P+NmRebl6IYZU2UiC4p08z9DXRUk7WL9dt2VQJOWT2Y2H7Kh7dbJpvrhaqAx
vhfkPiJwiy9Lk1N+DiQuX3qjeKMG+k55tr+6R8bZaNRB0SUXqjVGT4fZ1sA+
qp/IR0sCj/SfZ+qfyYN9hV18gRdq4O7C8ZtvyPPjtgq5/Wz5oM5P9VvNXgO5
nveeHLpL4KZKW2FHsm67ekcOhMZVg08VW3DpfQL5WtXLeywKwNT6/clKiWpY
Lo+eabMhsGGb9G+nTYUwPZKq3l1QBVdfPwwXsiMwY70DDBQXwsdLV8QtN7bi
zTu6Sg2tTHyxVVjJtjQebjyufvnFOhn47Od3h/0ksCvx5kTl02SIuG60Y3Vq
NYDvJwNOFwJbVWefNeamwsSlwgstQ00Qryowq76H7JcH9xSuhqTBhR1HN6xe
1QIurdYWLAQTn6epE1XXMsAlySf6aGwLHJQT3C7bw8RUyZvOd8g5MJ9YzfAr
bAG6V/hSRAcT48cmdx0seAdeJ816n79sAet/1C5b8vmmJVuPTuEcODDUEq50
qAX22u52PjHKRL+Vxo1HGTng3doVke31FXjNDpjrkd9ly1xyi0rKBbmLT9YZ
xzeD88zWs2f+MjErW2DU5FoeLInHE4u5X2Csfir6ACeZx37Hj+xc+fBTuUa3
o7IJjB72BL/eRODoUMeT0fx8iH3FUX6puxFU8h7UKguSeey5222mWwDN64rL
2WcbQCktOI//AIHZo1j1a64A1r4ySDYszyXrX+1PHI1AJfbgjS+WE8C015W4
o9gK9VtGNHY3MPFekCt3UF8S/DH5WG1t2QkP4qzmRHYxUX7B2XTYIwVytQY1
pD93AbVI/5L3wBQGH35it0b+LfzWm0vmZ3aBb+DfzLGOKbzP+ZDfeiwNrLnD
su4HdMEJPVk1FeoUfo68rxwamAHmshGWLDOdsJOCfksrmIhl/u2uB7NgMXVn
+3H5TjBeW7dYt5uJs742x0JL3oGJDz3X5FEHfA2S6mFXYuKFp+dyinfkQClr
dvnh3HaI9799nWnAxNZ1xIvirhwYmdo/8/VnG1zXcFssdmSi5gPlnTvJOZPe
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
xAfwP44X+cw=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{402.1642133637287, 274.5777113572283},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1, 4}, {0, 6}, {-0.24999967946461316`, 94.84863300805118}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.897950783456231, 1.2463435644209533`, 1.2241360120884948`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.7094668080627594`*^9}]
}, Open  ]]
},
WindowSize->{1280, 941},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.8 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 605, 19, 43, "Input"],
Cell[1188, 43, 341, 9, 40, "Output"]
}, Open  ]],
Cell[1544, 55, 89, 2, 25, "Input"],
Cell[1636, 59, 94, 1, 25, "Input"],
Cell[1733, 62, 91, 2, 25, "Input"],
Cell[CellGroupData[{
Cell[1849, 68, 612, 18, 40, "Input"],
Cell[2464, 88, 519, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3020, 108, 1007, 31, 45, "Input"],
Cell[4030, 141, 943, 29, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5010, 175, 623, 17, 52, "Input"],
Cell[5636, 194, 288, 9, 34, "Output"],
Cell[5927, 205, 427, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6391, 224, 1507, 43, 47, "Input"],
Cell[7901, 269, 2501, 49, 313, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10439, 323, 444, 15, 33, "Input"],
Cell[10886, 340, 398, 15, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11321, 360, 686, 22, 33, "Input"],
Cell[12010, 384, 1684, 34, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13731, 423, 1377, 42, 52, "Input"],
Cell[15111, 467, 2065, 41, 271, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17213, 513, 803, 25, 52, "Input"],
Cell[18019, 540, 1735, 36, 267, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19791, 581, 393, 12, 49, "Input"],
Cell[20187, 595, 4066, 77, 199, "Output"]
}, Open  ]],
Cell[24268, 675, 396, 12, 39, "Input"],
Cell[CellGroupData[{
Cell[24689, 691, 1344, 40, 39, "Input"],
Cell[26036, 733, 666, 21, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26739, 759, 1804, 57, 58, "Input"],
Cell[28546, 818, 239, 8, 43, "Output"]
}, Open  ]],
Cell[28800, 829, 396, 12, 39, "Input"],
Cell[CellGroupData[{
Cell[29221, 845, 1170, 36, 39, "Input"],
Cell[30394, 883, 526, 18, 41, "Output"]
}, Open  ]],
Cell[30935, 904, 1091, 37, 58, "Input"],
Cell[32029, 943, 524, 19, 89, "Input"],
Cell[CellGroupData[{
Cell[32578, 966, 2443, 71, 199, "Input"],
Cell[35024, 1039, 1466, 47, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36527, 1091, 1684, 54, 174, "Input"],
Cell[38214, 1147, 1276, 45, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39527, 1197, 1877, 57, 62, "Input"],
Cell[41407, 1256, 2119, 42, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43563, 1303, 1929, 63, 163, "Input"],
Cell[45495, 1368, 2351, 45, 299, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47883, 1418, 1476, 44, 60, "Input"],
Cell[49362, 1464, 101, 1, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49500, 1470, 727, 21, 33, "Input"],
Cell[50230, 1493, 1884, 37, 295, "Output"]
}, Open  ]],
Cell[52129, 1533, 94, 1, 25, "Input"],
Cell[CellGroupData[{
Cell[52248, 1538, 414, 13, 43, "Input"],
Cell[52665, 1553, 3534, 68, 187, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56236, 1626, 388, 12, 43, "Input"],
Cell[56627, 1640, 477, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57141, 1662, 1044, 37, 60, "Input"],
Cell[58188, 1701, 207, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58432, 1710, 3251, 103, 102, "Input"],
Cell[61686, 1815, 2370, 46, 271, "Output"]
}, Open  ]],
Cell[64071, 1864, 546, 15, 25, "Input"],
Cell[CellGroupData[{
Cell[64642, 1883, 1057, 25, 42, "Input"],
Cell[65702, 1910, 1805, 36, 273, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67544, 1951, 989, 35, 51, "Input"],
Cell[68536, 1988, 990, 37, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69563, 2030, 2419, 75, 60, "Input"],
Cell[71985, 2107, 2563, 48, 289, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74585, 2160, 1784, 63, 60, "Input"],
Cell[76372, 2225, 1781, 65, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78190, 2295, 451, 15, 42, "Input"],
Cell[78644, 2312, 525, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79206, 2335, 39, 1, 28, "Input"],
Cell[79248, 2338, 82, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79367, 2345, 88, 3, 33, "Input"],
Cell[79458, 2350, 88, 1, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79583, 2356, 210, 5, 33, "Input"],
Cell[79796, 2363, 111, 1, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79944, 2369, 131, 5, 39, "Input"],
Cell[80078, 2376, 176, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80291, 2387, 184, 7, 39, "Input"],
Cell[80478, 2396, 90, 1, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80605, 2402, 131, 5, 39, "Input"],
Cell[80739, 2409, 176, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80952, 2420, 184, 7, 39, "Input"],
Cell[81139, 2429, 90, 1, 24, "Output"]
}, Open  ]],
Cell[81244, 2433, 2033, 68, 54, "Input"],
Cell[83280, 2503, 92, 1, 25, "Input"],
Cell[CellGroupData[{
Cell[83397, 2508, 2182, 69, 60, "Input"],
Cell[85582, 2579, 361, 9, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85980, 2593, 2134, 68, 60, "Input"],
Cell[88117, 2663, 287, 9, 24, "Output"]
}, Open  ]],
Cell[88419, 2675, 379, 10, 25, "Input"],
Cell[88801, 2687, 373, 11, 25, "Input"],
Cell[CellGroupData[{
Cell[89199, 2702, 790, 24, 25, "Input"],
Cell[89992, 2728, 509, 10, 18, "Message"],
Cell[90504, 2740, 456, 10, 18, "Message"],
Cell[90963, 2752, 902, 28, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91902, 2785, 1970, 62, 51, "Input"],
Cell[93875, 2849, 2054, 69, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95966, 2923, 2777, 83, 72, "Input"],
Cell[98746, 3008, 2888, 55, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101671, 3068, 2212, 68, 77, "Input"],
Cell[103886, 3138, 3224, 60, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107147, 3203, 2132, 65, 77, "Input"],
Cell[109282, 3270, 534, 11, 18, "Message"],
Cell[109819, 3283, 187, 4, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110043, 3292, 4452, 131, 122, "Input"],
Cell[114498, 3425, 507, 12, 18, "Message"],
Cell[115008, 3439, 2561, 83, 89, "Output"]
}, Open  ]],
Cell[117584, 3525, 1811, 60, 77, "Input"],
Cell[CellGroupData[{
Cell[119420, 3589, 1166, 39, 86, "Input"],
Cell[120589, 3630, 1241, 43, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121867, 3678, 3281, 93, 86, "Input"],
Cell[125151, 3773, 79, 1, 24, "Output"]
}, Open  ]],
Cell[125245, 3777, 122, 2, 25, "Input"],
Cell[125370, 3781, 94, 1, 25, "Input"],
Cell[125467, 3784, 1204, 40, 86, "Input"],
Cell[CellGroupData[{
Cell[126696, 3828, 609, 20, 62, "Input"],
Cell[127308, 3850, 425, 14, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127770, 3869, 607, 20, 62, "Input"],
Cell[128380, 3891, 435, 14, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128852, 3910, 6309, 178, 266, "Input"],
Cell[135164, 4090, 561, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135762, 4112, 1120, 39, 86, "Input"],
Cell[136885, 4153, 748, 25, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137670, 4183, 1236, 36, 68, "Input"],
Cell[138909, 4221, 1891, 39, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140837, 4265, 6164, 176, 266, "Input"],
Cell[147004, 4443, 512, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147553, 4464, 1495, 48, 86, "Input"],
Cell[149051, 4514, 1921, 39, 265, "Output"]
}, Open  ]],
Cell[150987, 4556, 1331, 43, 86, "Input"],
Cell[CellGroupData[{
Cell[152343, 4603, 1121, 39, 86, "Input"],
Cell[153467, 4644, 702, 24, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154206, 4673, 6049, 174, 266, "Input"],
Cell[160258, 4849, 488, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160783, 4870, 1716, 50, 86, "Input"],
Cell[162502, 4922, 1483, 41, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164022, 4968, 554, 16, 50, "Input"],
Cell[164579, 4986, 581, 16, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165197, 5007, 2174, 63, 82, "Input"],
Cell[167374, 5072, 2382, 47, 331, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169793, 5124, 3000, 83, 124, "Input"],
Cell[172796, 5209, 1509, 47, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174342, 5261, 3114, 91, 117, "Input"],
Cell[177459, 5354, 101, 1, 24, "Output"]
}, Open  ]],
Cell[177575, 5358, 1788, 53, 86, "Input"],
Cell[CellGroupData[{
Cell[179388, 5415, 3630, 104, 109, "Input"],
Cell[183021, 5521, 3150, 62, 331, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186208, 5588, 1514, 45, 86, "Input"],
Cell[187725, 5635, 1979, 52, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189741, 5692, 2230, 57, 118, "Input"],
Cell[191974, 5751, 126649, 2079, 200, "Output"]
}, Open  ]],
Cell[318638, 7833, 122, 2, 25, "Input"],
Cell[CellGroupData[{
Cell[318785, 7839, 9356, 228, 406, "Input"],
Cell[328144, 8069, 154615, 2528, 232, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

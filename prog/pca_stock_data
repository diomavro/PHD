import yfinance as yf
import pandas as pd
import numpy as np
from sklearn.decomposition import PCA
#from sklearn.decomposition import PCA
import matplotlib.pyplot as plt

symbols = [ 'IBM', 'MSFT','INTC','META', 'NEM', 'AU', 'AEM', 'GFI' ]
data = yf.download(symbols, start = '2020-01-01', end = '2022-11-30')
portofolio_returns = data['Adj Close'].pct_change().dropna()
pca = PCA(n_components=3)
pca.fit(portofolio_returns)
pct = pca.explained_variance_ratio_
pca_components = pca.components_

cum_pct = np.cumsum(pct)
x = np.arange(1, len(pct)+1,1)

plt.subplot(1,2,1)
plt.bar(x,pct*100, align = 'center')
plt.title('Contribution(%)')
plt.xlabel('Component')
plt.xticks(x)
plt.xlim([0,4])
plt.ylim([0,100])

plt.subplot(1,2,2)
plt.plot(x,cum_pct*100,'ro-')
plt.title('Cumulative contribution (%)')
plt.xlabel('Component')
plt.xticks(x)
plt.xlim([0,4])
plt.ylim([0,100])

X = np.asarray(portofolio_returns)
factor_returns = X.dot(pca_components.T)

factor_returns = pd.DataFrame(columns=['f1','f2','f3'], index=portofolio_returns.index,data=factor_returns)
factor_returns.head()

factor_exposures = pd.DataFrame(index=['f1','f2','f3'], columns= portofolio_returns.columns, data=pca_components).T

factor_exposures.f1.sort_values().plot.bar

labels = factor_exposures.index
data = factor_exposures.values
plt.scatter(data[:,0], data[:,1])
plt.xlabel('factor exposure of PC1')
plt.ylabel('factor exposure of PC2')

for label, x, y in zip(labels, data[:,0], data[:,1]):
    plt.annotate(label, xy=(x,y), xytext=(-20,20), textcoords='offset points', arrowprops=dict(arrowstyle = '->', connectionstyle = 'arc3, rad=0')); 

print('hello')
